

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Feb 10 16:53:54 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.35
    58                           ; Generated 05/05/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK0
    94  002754                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for main@F14271
    98  002754  001F               	dw	31
    99  002756  001C               	dw	28
   100  002758  001F               	dw	31
   101  00275A  001E               	dw	30
   102  00275C  001F               	dw	31
   103  00275E  001E               	dw	30
   104  002760  001F               	dw	31
   105  002762  001F               	dw	31
   106  002764  001E               	dw	30
   107  002766  001F               	dw	31
   108  002768  001E               	dw	30
   109  00276A  001F               	dw	31
   110  0000                     _TRISCbits	set	3971
   111  0000                     _TRISEbits	set	3973
   112  0000                     _TRISBbits	set	3970
   113  0000                     _LATEbits	set	3965
   114  0000                     _LATBbits	set	3962
   115  0000                     _LATCbits	set	3963
   116  0000                     _CM1CON1bits	set	3793
   117  0000                     _LATFbits	set	3966
   118  0000                     _LATGbits	set	3967
   119  0000                     _LATHbits	set	3968
   120  0000                     _TRISFbits	set	3974
   121  0000                     _TRISGbits	set	3975
   122  0000                     _TRISHbits	set	3976
   123  0000                     _TRISDbits	set	3972
   124  0000                     _PIE0bits	set	3625
   125  0000                     _ANSELAbits	set	3730
   126  0000                     _TRISAbits	set	3969
   127  0000                     _DAC1CON0bits	set	3782
   128  0000                     _ADREFbits	set	3928
   129  0000                     _ADPCH	set	3935
   130  0000                     _ADRESH	set	3940
   131  0000                     _ADCON0bits	set	3936
   132  0000                     _LATAbits	set	3961
   133  0000                     _LATDbits	set	3964
   134  0000                     _TMR0L	set	4051
   135  0000                     _TMR0H	set	4052
   136  0000                     _T0CON0bits	set	4053
   137  0000                     _T0CON1bits	set	4054
   138  0000                     _INTCONbits	set	4082
   139  0000                     _CM1CON0bits	set	3792
   140  0000                     _CM1NCHbits	set	3794
   141  0000                     _DAC1CON1bits	set	3783
   142  0000                     _CM1PCHbits	set	3795
   143  0000                     _PIR0bits	set	3635
   144                           
   145                           	psect	smallconst
   146  000E00                     __psmallconst:
   147                           	callstack 0
   148  000E00  00                 	db	0
   149  000E01                     STR_2:
   150                           
   151                           ; BSR set to: 14
   152  000E01  25                 	db	37
   153  000E02  64                 	db	100	;'d'
   154  000E03  20                 	db	32
   155  000E04  20                 	db	32
   156  000E05  20                 	db	32
   157  000E06  25                 	db	37
   158  000E07  64                 	db	100	;'d'
   159  000E08  3A                 	db	58	;':'
   160  000E09  20                 	db	32
   161  000E0A  25                 	db	37
   162  000E0B  64                 	db	100	;'d'
   163  000E0C  3A                 	db	58	;':'
   164  000E0D  20                 	db	32
   165  000E0E  25                 	db	37
   166  000E0F  64                 	db	100	;'d'
   167  000E10  00                 	db	0
   168  000E11                     STR_3:
   169                           
   170                           ; BSR set to: 14
   171  000E11  25                 	db	37
   172  000E12  64                 	db	100	;'d'
   173  000E13  20                 	db	32
   174  000E14  25                 	db	37
   175  000E15  64                 	db	100	;'d'
   176  000E16  20                 	db	32
   177  000E17  25                 	db	37
   178  000E18  64                 	db	100	;'d'
   179  000E19  20                 	db	32
   180  000E1A  25                 	db	37
   181  000E1B  64                 	db	100	;'d'
   182  000E1C  00                 	db	0
   183  000E1D                     
   184                           ; BSR set to: 14
   185  000E1D  25                 	db	37
   186  000E1E  64                 	db	100	;'d'
   187  000E1F  2E                 	db	46
   188  000E20  25                 	db	37
   189  000E21  30                 	db	48	;'0'
   190  000E22  32                 	db	50	;'2'
   191  000E23  64                 	db	100	;'d'
   192  000E24  00                 	db	0
   193  000E25  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198  0024B6                     __pcinit:
   199                           	callstack 0
   200  0024B6                     start_initialization:
   201                           	callstack 0
   202  0024B6                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to BANK0 (24 bytes)
   206                           ; load TBLPTR registers with __pidataBANK0
   207  0024B6  0E54               	movlw	low __pidataBANK0
   208  0024B8  6EF6               	movwf	tblptrl,c
   209  0024BA  0E27               	movlw	high __pidataBANK0
   210  0024BC  6EF7               	movwf	tblptrh,c
   211  0024BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   212  0024C0  6EF8               	movwf	tblptru,c
   213  0024C2  EE00  F0DD         	lfsr	0,__pdataBANK0
   214  0024C6  EE10 F018          	lfsr	1,24
   215  0024CA                     copy_data0:
   216  0024CA  0009               	tblrd		*+
   217  0024CC  CFF5 FFEE          	movff	tablat,postinc0
   218  0024D0  50E5               	movf	postdec1,w,c
   219  0024D2  50E1               	movf	fsr1l,w,c
   220  0024D4  E1FA               	bnz	copy_data0
   221                           
   222                           ; Clear objects allocated to BANK1 (32 bytes)
   223  0024D6  EE01  F000         	lfsr	0,__pbssBANK1
   224  0024DA  0E20               	movlw	32
   225  0024DC                     clear_0:
   226  0024DC  6AEE               	clrf	postinc0,c
   227  0024DE  06E8               	decf	wreg,f,c
   228  0024E0  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to BANK0 (6 bytes)
   231  0024E2  0100               	movlb	0
   232  0024E4  6BFA               	clrf	(__pbssBANK0+5)& (0+255),b
   233  0024E6  6BF9               	clrf	(__pbssBANK0+4)& (0+255),b
   234  0024E8  6BF8               	clrf	(__pbssBANK0+3)& (0+255),b
   235  0024EA  6BF7               	clrf	(__pbssBANK0+2)& (0+255),b
   236  0024EC  6BF6               	clrf	(__pbssBANK0+1)& (0+255),b
   237  0024EE  6BF5               	clrf	__pbssBANK0& (0+255),b
   238                           
   239                           ; Clear objects allocated to COMRAM (2 bytes)
   240  0024F0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   241  0024F2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   242  0024F4                     end_of_initialization:
   243                           	callstack 0
   244  0024F4                     __end_of__initialization:
   245                           	callstack 0
   246  0024F4  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247  0024F6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248  0024F8  0100               	movlb	0
   249  0024FA  EF13  F007         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMRAM
   252  00005B                     __pbssCOMRAM:
   253                           	callstack 0
   254  00005B                     _flags:
   255                           	callstack 0
   256  00005B                     	ds	2
   257                           
   258                           	psect	bssBANK0
   259  0000F5                     __pbssBANK0:
   260                           	callstack 0
   261  0000F5                     _nout:
   262                           	callstack 0
   263  0000F5                     	ds	2
   264  0000F7                     _width:
   265                           	callstack 0
   266  0000F7                     	ds	2
   267  0000F9                     _prec:
   268                           	callstack 0
   269  0000F9                     	ds	2
   270                           
   271                           	psect	dataBANK0
   272  0000DD                     __pdataBANK0:
   273                           	callstack 0
   274  0000DD                     main@F14271:
   275                           	callstack 0
   276  0000DD                     	ds	24
   277                           
   278                           	psect	bssBANK1
   279  000100                     __pbssBANK1:
   280                           	callstack 0
   281  000100                     _dbuf:
   282                           	callstack 0
   283  000100                     	ds	32
   284                           
   285                           	psect	cstackBANK0
   286  000060                     __pcstackBANK0:
   287                           	callstack 0
   288  000060                     vfprintf@cfmt:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x0
   292  000060                     	ds	2
   293  000062                     ?_sprintf:
   294                           	callstack 0
   295  000062                     sprintf@s:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2
   299  000062                     	ds	2
   300  000064                     sprintf@fmt:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x4
   304  000064                     	ds	10
   305  00006E                     sprintf@ap:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xE
   309  00006E                     	ds	2
   310  000070                     sprintf@f:
   311                           	callstack 0
   312                           
   313                           ; 11 bytes @ 0x10
   314  000070                     	ds	11
   315  00007B                     LCD_setlines@ch:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x1B
   319  00007B                     	ds	1
   320  00007C                     LCD_setlines@cmin:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x1C
   324  00007C                     	ds	1
   325  00007D                     LCD_setlines@cs:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x1D
   329  00007D                     	ds	1
   330  00007E                     LCD_setlines@cd:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x1E
   334  00007E                     	ds	1
   335  00007F                     LCD_setlines@cm:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x1F
   339  00007F                     	ds	1
   340  000080                     LCD_setlines@cy:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x20
   344  000080                     	ds	2
   345  000082                     LCD_setlines@cBST:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x22
   349  000082                     	ds	1
   350  000083                     ??_LCD_setlines:
   351                           
   352                           ; 1 bytes @ 0x23
   353  000083                     	ds	2
   354  000085                     LCD_setlines@line1:
   355                           	callstack 0
   356                           
   357                           ; 20 bytes @ 0x25
   358  000085                     	ds	20
   359  000099                     LCD_setlines@line2:
   360                           	callstack 0
   361                           
   362                           ; 20 bytes @ 0x39
   363  000099                     	ds	20
   364  0000AD                     LCD_setlines@cname:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x4D
   368  0000AD                     	ds	1
   369  0000AE                     ??_main:
   370                           
   371                           ; 1 bytes @ 0x4E
   372  0000AE                     	ds	8
   373  0000B6                     main@dim:
   374                           	callstack 0
   375                           
   376                           ; 24 bytes @ 0x56
   377  0000B6                     	ds	24
   378  0000CE                     main@min_length:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x6E
   382  0000CE                     	ds	2
   383  0000D0                     main@hour_length:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x70
   387  0000D0                     	ds	2
   388  0000D2                     main@hours_in_day:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x72
   392  0000D2                     	ds	2
   393  0000D4                     main@ds:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x74
   397  0000D4                     	ds	1
   398  0000D5                     main@dmin:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x75
   402  0000D5                     	ds	1
   403  0000D6                     main@dBST:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x76
   407  0000D6                     	ds	1
   408  0000D7                     main@dy:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x77
   412  0000D7                     	ds	2
   413  0000D9                     main@dname:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x79
   417  0000D9                     	ds	1
   418  0000DA                     main@dh:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x7A
   422  0000DA                     	ds	1
   423  0000DB                     main@dd:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x7B
   427  0000DB                     	ds	1
   428  0000DC                     main@dm:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x7C
   432  0000DC                     	ds	1
   433                           
   434                           	psect	cstackCOMRAM
   435  000001                     __pcstackCOMRAM:
   436                           	callstack 0
   437  000001                     ??_HighISR:
   438  000001                     
   439                           ; 1 bytes @ 0x0
   440  000001                     	ds	1
   441  000002                     ?_strlen:
   442                           	callstack 0
   443  000002                     ?_isdigit:
   444                           	callstack 0
   445  000002                     ?_isspace:
   446                           	callstack 0
   447  000002                     ?_LDR_val:
   448                           	callstack 0
   449  000002                     ?___wmul:
   450                           	callstack 0
   451  000002                     ?___awdiv:
   452                           	callstack 0
   453  000002                     ?___lwmod:
   454                           	callstack 0
   455  000002                     ?___aodiv:
   456                           	callstack 0
   457  000002                     ?___aomod:
   458                           	callstack 0
   459  000002                     LCD_sendnibble@number:
   460                           	callstack 0
   461  000002                     LEDarray_disp_bin@number:
   462                           	callstack 0
   463  000002                     ___wmul@multiplier:
   464                           	callstack 0
   465  000002                     ___awdiv@dividend:
   466                           	callstack 0
   467  000002                     ___lwmod@dividend:
   468                           	callstack 0
   469  000002                     isdigit@c:
   470                           	callstack 0
   471  000002                     isspace@c:
   472                           	callstack 0
   473  000002                     fputc@c:
   474                           	callstack 0
   475  000002                     strlen@s:
   476                           	callstack 0
   477  000002                     ___aodiv@dividend:
   478                           	callstack 0
   479  000002                     ___aomod@dividend:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x1
   483  000002                     	ds	1
   484  000003                     LCD_sendbyte@type:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x2
   488  000003                     	ds	1
   489  000004                     ??_isdigit:
   490  000004                     ??_isspace:
   491  000004                     LCD_sendbyte@HB:
   492                           	callstack 0
   493  000004                     LDR_val@temp:
   494                           	callstack 0
   495  000004                     ___wmul@multiplicand:
   496                           	callstack 0
   497  000004                     ___awdiv@divisor:
   498                           	callstack 0
   499  000004                     ___lwmod@divisor:
   500                           	callstack 0
   501  000004                     fputc@fp:
   502                           	callstack 0
   503  000004                     strlen@a:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x3
   507  000004                     	ds	1
   508  000005                     LCD_sendbyte@LB:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x4
   512  000005                     	ds	1
   513  000006                     ??_fputc:
   514  000006                     LDR_thres@hour:
   515                           	callstack 0
   516  000006                     LCD_sendbyte@Byte:
   517                           	callstack 0
   518  000006                     ___awdiv@counter:
   519                           	callstack 0
   520  000006                     ___lwmod@counter:
   521                           	callstack 0
   522  000006                     ___wmul@product:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x5
   526  000006                     	ds	1
   527  000007                     ??_LCD_Init:
   528  000007                     LDR_thres@val:
   529                           	callstack 0
   530  000007                     LCD_setline@line:
   531                           	callstack 0
   532  000007                     ___awdiv@sign:
   533                           	callstack 0
   534  000007                     LCD_sendstring@string:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x6
   538  000007                     	ds	1
   539  000008                     _isspace$1969:
   540                           	callstack 0
   541  000008                     ___awdiv@quotient:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x7
   545  000008                     	ds	1
   546  000009                     ?_atoi:
   547                           	callstack 0
   548  000009                     atoi@s:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x8
   552  000009                     	ds	1
   553  00000A                     daylight_save@s:
   554                           	callstack 0
   555  00000A                     ___aodiv@divisor:
   556                           	callstack 0
   557  00000A                     ___aomod@divisor:
   558                           	callstack 0
   559                           
   560                           ; 8 bytes @ 0x9
   561  00000A                     	ds	1
   562  00000B                     ??_atoi:
   563  00000B                     daylight_save@h:
   564                           	callstack 0
   565  00000B                     fputs@s:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0xA
   569  00000B                     	ds	1
   570  00000C                     daylight_save@BST:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xB
   574  00000C                     	ds	1
   575  00000D                     daylight_save@du_s:
   576                           	callstack 0
   577  00000D                     fputs@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00000D                     	ds	1
   582  00000E                     daylight_save@du_h:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0xD
   586  00000E                     	ds	1
   587  00000F                     daylight_save@da_s:
   588                           	callstack 0
   589  00000F                     fputs@c:
   590                           	callstack 0
   591  00000F                     atoi@neg:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xE
   595  00000F                     	ds	1
   596  000010                     daylight_save@da_h:
   597                           	callstack 0
   598  000010                     fputs@i:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0xF
   602  000010                     	ds	1
   603  000011                     daylight_save@sol_noon:
   604                           	callstack 0
   605  000011                     atoi@n:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x10
   609  000011                     	ds	1
   610  000012                     ?_pad:
   611                           	callstack 0
   612  000012                     ___aodiv@counter:
   613                           	callstack 0
   614  000012                     ___aomod@counter:
   615                           	callstack 0
   616  000012                     daylight_save@offset_s:
   617                           	callstack 0
   618  000012                     pad@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x11
   622  000012                     	ds	1
   623  000013                     ___aodiv@sign:
   624                           	callstack 0
   625  000013                     ___aomod@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x12
   629  000013                     	ds	1
   630  000014                     ?_abs:
   631                           	callstack 0
   632  000014                     pad@buf:
   633                           	callstack 0
   634  000014                     abs@a:
   635                           	callstack 0
   636  000014                     ___aodiv@quotient:
   637                           	callstack 0
   638                           
   639                           ; 8 bytes @ 0x13
   640  000014                     	ds	2
   641  000016                     ??_abs:
   642  000016                     pad@p:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x15
   646  000016                     	ds	2
   647  000018                     ??_pad:
   648                           
   649                           ; 1 bytes @ 0x17
   650  000018                     	ds	1
   651  000019                     pad@i:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x18
   655  000019                     	ds	2
   656  00001B                     pad@w:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x1A
   660  00001B                     	ds	2
   661  00001D                     ?_dtoa:
   662                           	callstack 0
   663  00001D                     dtoa@fp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x1C
   667  00001D                     	ds	2
   668  00001F                     dtoa@d:
   669                           	callstack 0
   670                           
   671                           ; 8 bytes @ 0x1E
   672  00001F                     	ds	8
   673  000027                     ??_dtoa:
   674                           
   675                           ; 1 bytes @ 0x26
   676  000027                     	ds	8
   677  00002F                     _dtoa$1920:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x2E
   681  00002F                     	ds	2
   682  000031                     dtoa@p:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x30
   686  000031                     	ds	2
   687  000033                     dtoa@w:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x32
   691  000033                     	ds	2
   692  000035                     dtoa@s:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x34
   696  000035                     	ds	2
   697  000037                     dtoa@n:
   698                           	callstack 0
   699                           
   700                           ; 8 bytes @ 0x36
   701  000037                     	ds	8
   702  00003F                     dtoa@i:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x3E
   706  00003F                     	ds	2
   707  000041                     ?_vfpfcnvrt:
   708                           	callstack 0
   709  000041                     vfpfcnvrt@fp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x40
   713  000041                     	ds	2
   714  000043                     vfpfcnvrt@fmt:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x42
   718  000043                     	ds	2
   719  000045                     vfpfcnvrt@ap:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x44
   723  000045                     	ds	2
   724  000047                     ??_vfpfcnvrt:
   725                           
   726                           ; 1 bytes @ 0x46
   727  000047                     	ds	4
   728  00004B                     vfpfcnvrt@ll:
   729                           	callstack 0
   730                           
   731                           ; 8 bytes @ 0x4A
   732  00004B                     	ds	8
   733  000053                     vfpfcnvrt@done:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x52
   737  000053                     	ds	2
   738  000055                     ?_vfprintf:
   739                           	callstack 0
   740  000055                     vfprintf@fp:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x54
   744  000055                     	ds	2
   745  000057                     vfprintf@fmt:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x56
   749  000057                     	ds	2
   750  000059                     vfprintf@ap:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x58
   754  000059                     	ds	2
   755  00005B                     
   756                           ; 1 bytes @ 0x5A
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 20 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  dim            24   86[BANK0 ] unsigned int [12]
   767 ;;  dy              2  119[BANK0 ] unsigned int 
   768 ;;  hours_in_day    2  114[BANK0 ] unsigned int 
   769 ;;  hour_length     2  112[BANK0 ] unsigned int 
   770 ;;  min_length      2  110[BANK0 ] unsigned int 
   771 ;;  dm              1  124[BANK0 ] unsigned char 
   772 ;;  dd              1  123[BANK0 ] char 
   773 ;;  dh              1  122[BANK0 ] char 
   774 ;;  dname           1  121[BANK0 ] char 
   775 ;;  dBST            1  118[BANK0 ] unsigned char 
   776 ;;  dmin            1  117[BANK0 ] unsigned char 
   777 ;;  ds              1  116[BANK0 ] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   788 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   789 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   790 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   791 ;;Total ram usage:       47 bytes
   792 ;; Hardware stack levels required when called: 10
   793 ;; This function calls:
   794 ;;		_Comp1_init
   795 ;;		_DAC_init
   796 ;;		_Interrupts_init
   797 ;;		_LCD_Init
   798 ;;		_LCD_setlines
   799 ;;		_LDR_init
   800 ;;		_LDR_thres
   801 ;;		_LDR_val
   802 ;;		_LED_init
   803 ;;		_LEDarray_disp_bin
   804 ;;		_Timer0_init
   805 ;;		___lwmod
   806 ;;		_daylight_save
   807 ;; This function is called by:
   808 ;;		Startup code after reset
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text0
   813  000E26                     __ptext0:
   814                           	callstack 0
   815  000E26                     _main:
   816                           	callstack 21
   817  000E26                     
   818                           ;main.c: 22:     LED_init();
   819  000E26  EC6C  F013         	call	_LED_init	;wreg free
   820  000E2A                     
   821                           ;main.c: 23:     LDR_init();
   822  000E2A  EC9D  F013         	call	_LDR_init	;wreg free
   823  000E2E                     
   824                           ;main.c: 24:     Interrupts_init();
   825  000E2E  ECCB  F013         	call	_Interrupts_init	;wreg free
   826                           
   827                           ;main.c: 25:     DAC_init();
   828  000E32  ECC1  F013         	call	_DAC_init	;wreg free
   829                           
   830                           ;main.c: 26:     Comp1_init();
   831  000E36  EC5A  F013         	call	_Comp1_init	;wreg free
   832  000E3A                     
   833                           ;main.c: 27:     LCD_Init();
   834  000E3A  ECC4  F010         	call	_LCD_Init	;wreg free
   835  000E3E                     
   836                           ;main.c: 28:     Timer0_init();
   837  000E3E  EC7D  F013         	call	_Timer0_init	;wreg free
   838  000E42                     
   839                           ;main.c: 34:     char ds = 0;
   840  000E42  0E00               	movlw	0
   841  000E44  0100               	movlb	0	; () banked
   842  000E46  6FD4               	movwf	main@ds& (0+255),b
   843  000E48                     
   844                           ; BSR set to: 0
   845                           ;main.c: 35:     char dmin = 0;
   846  000E48  0E00               	movlw	0
   847  000E4A  6FD5               	movwf	main@dmin& (0+255),b
   848  000E4C                     
   849                           ; BSR set to: 0
   850                           ;main.c: 36:     signed char dh = 4;
   851  000E4C  0E04               	movlw	4
   852  000E4E  6FDA               	movwf	main@dh& (0+255),b
   853  000E50                     
   854                           ; BSR set to: 0
   855                           ;main.c: 37:     signed char dname = 6 ;
   856  000E50  0E06               	movlw	6
   857  000E52  6FD9               	movwf	main@dname& (0+255),b
   858  000E54                     
   859                           ; BSR set to: 0
   860                           ;main.c: 38:     signed char dd = 26;
   861  000E54  0E1A               	movlw	26
   862  000E56  6FDB               	movwf	main@dd& (0+255),b
   863  000E58                     
   864                           ; BSR set to: 0
   865                           ;main.c: 39:     char dm = 3;
   866  000E58  0E03               	movlw	3
   867  000E5A  6FDC               	movwf	main@dm& (0+255),b
   868  000E5C                     
   869                           ; BSR set to: 0
   870                           ;main.c: 40:     unsigned int dy = 2019;
   871  000E5C  0E07               	movlw	7
   872  000E5E  6FD8               	movwf	(main@dy+1)& (0+255),b
   873  000E60  0EE3               	movlw	227
   874  000E62  6FD7               	movwf	main@dy& (0+255),b
   875  000E64                     
   876                           ; BSR set to: 0
   877                           ;main.c: 41:     char dBST = 0;
   878  000E64  0E00               	movlw	0
   879  000E66  6FD6               	movwf	main@dBST& (0+255),b
   880  000E68                     
   881                           ; BSR set to: 0
   882                           ;main.c: 42:     unsigned int min_length = 1;
   883  000E68  0E00               	movlw	0
   884  000E6A  6FCF               	movwf	(main@min_length+1)& (0+255),b
   885  000E6C  0E01               	movlw	1
   886  000E6E  6FCE               	movwf	main@min_length& (0+255),b
   887  000E70                     
   888                           ; BSR set to: 0
   889                           ;main.c: 43:     unsigned int hour_length = 1;
   890  000E70  0E00               	movlw	0
   891  000E72  6FD1               	movwf	(main@hour_length+1)& (0+255),b
   892  000E74  0E01               	movlw	1
   893  000E76  6FD0               	movwf	main@hour_length& (0+255),b
   894  000E78                     
   895                           ; BSR set to: 0
   896                           ;main.c: 44:     unsigned int hours_in_day = 24;
   897  000E78  0E00               	movlw	0
   898  000E7A  6FD3               	movwf	(main@hours_in_day+1)& (0+255),b
   899  000E7C  0E18               	movlw	24
   900  000E7E  6FD2               	movwf	main@hours_in_day& (0+255),b
   901  000E80                     
   902                           ; BSR set to: 0
   903                           ;main.c: 45:     unsigned int dim[] = {31,28,31,30,31,30,31,31,30,31,30,31};
   904  000E80  EE20  F0DD         	lfsr	2,main@F14271
   905  000E84  EE10  F0B6         	lfsr	1,main@dim
   906  000E88  0E17               	movlw	23
   907  000E8A                     u2971:
   908  000E8A  CFDB FFE3          	movff	plusw2,plusw1
   909  000E8E  06E8               	decf	wreg,f,c
   910  000E90  E2FC               	bc	u2971
   911  000E92                     l3233:
   912                           
   913                           ;main.c: 52:         if ((dy%4==0 && dy%100!=0) || (dy%400==0)) {
   914  000E92  0E03               	movlw	3
   915  000E94  0100               	movlb	0	; () banked
   916  000E96  15D7               	andwf	main@dy& (0+255),w,b
   917  000E98  6FAE               	movwf	??_main& (0+255),b
   918  000E9A  0E00               	movlw	0
   919  000E9C  15D8               	andwf	(main@dy+1)& (0+255),w,b
   920  000E9E  6FAF               	movwf	(??_main+1)& (0+255),b
   921  000EA0  51AE               	movf	??_main& (0+255),w,b
   922  000EA2  11AF               	iorwf	(??_main+1)& (0+255),w,b
   923  000EA4  A4D8               	btfss	status,2,c
   924  000EA6  EF57  F007         	goto	u2981
   925  000EAA  EF59  F007         	goto	u2980
   926  000EAE                     u2981:
   927  000EAE  EF6C  F007         	goto	l3237
   928  000EB2                     u2980:
   929  000EB2                     
   930                           ; BSR set to: 0
   931  000EB2  C0D7  F002         	movff	main@dy,___lwmod@dividend
   932  000EB6  C0D8  F003         	movff	main@dy+1,___lwmod@dividend+1
   933  000EBA  0E00               	movlw	0
   934  000EBC  6E05               	movwf	(___lwmod@divisor+1)^0,c
   935  000EBE  0E64               	movlw	100
   936  000EC0  6E04               	movwf	___lwmod@divisor^0,c
   937  000EC2  ECAE  F011         	call	___lwmod	;wreg free
   938  000EC6  5002               	movf	?___lwmod^0,w,c
   939  000EC8  1003               	iorwf	(?___lwmod+1)^0,w,c
   940  000ECA  A4D8               	btfss	status,2,c
   941  000ECC  EF6A  F007         	goto	u2991
   942  000ED0  EF6C  F007         	goto	u2990
   943  000ED4                     u2991:
   944  000ED4  EF7F  F007         	goto	l3239
   945  000ED8                     u2990:
   946  000ED8                     l3237:
   947  000ED8  C0D7  F002         	movff	main@dy,___lwmod@dividend
   948  000EDC  C0D8  F003         	movff	main@dy+1,___lwmod@dividend+1
   949  000EE0  0E01               	movlw	1
   950  000EE2  6E05               	movwf	(___lwmod@divisor+1)^0,c
   951  000EE4  0E90               	movlw	144
   952  000EE6  6E04               	movwf	___lwmod@divisor^0,c
   953  000EE8  ECAE  F011         	call	___lwmod	;wreg free
   954  000EEC  5002               	movf	?___lwmod^0,w,c
   955  000EEE  1003               	iorwf	(?___lwmod+1)^0,w,c
   956  000EF0  A4D8               	btfss	status,2,c
   957  000EF2  EF7D  F007         	goto	u3001
   958  000EF6  EF7F  F007         	goto	u3000
   959  000EFA                     u3001:
   960  000EFA  EF86  F007         	goto	l3241
   961  000EFE                     u3000:
   962  000EFE                     l3239:
   963                           
   964                           ;main.c: 53:             dim[1] = 29;
   965  000EFE  0E00               	movlw	0
   966  000F00  0100               	movlb	0	; () banked
   967  000F02  6FB9               	movwf	(main@dim+3)& (0+255),b
   968  000F04  0E1D               	movlw	29
   969  000F06  6FB8               	movwf	(main@dim+2)& (0+255),b
   970                           
   971                           ;main.c: 54:             }
   972  000F08  EF8B  F007         	goto	l3243
   973  000F0C                     l3241:
   974                           
   975                           ;main.c: 56:             dim[1] = 28;
   976  000F0C  0E00               	movlw	0
   977  000F0E  0100               	movlb	0	; () banked
   978  000F10  6FB9               	movwf	(main@dim+3)& (0+255),b
   979  000F12  0E1C               	movlw	28
   980  000F14  6FB8               	movwf	(main@dim+2)& (0+255),b
   981  000F16                     l3243:
   982                           
   983                           ; BSR set to: 0
   984                           ;main.c: 60:         if (LATHbits.LATH3){
   985  000F16  A680               	btfss	128,3,c	;volatile
   986  000F18  EF90  F007         	goto	u3011
   987  000F1C  EF92  F007         	goto	u3010
   988  000F20                     u3011:
   989  000F20  EF51  F009         	goto	l3345
   990  000F24                     u3010:
   991  000F24                     
   992                           ; BSR set to: 0
   993                           ;main.c: 61:         LATHbits.LATH3=0;
   994  000F24  9680               	bcf	128,3,c	;volatile
   995  000F26                     
   996                           ; BSR set to: 0
   997                           ;main.c: 62:         ds++;
   998  000F26  2BD4               	incf	main@ds& (0+255),f,b
   999  000F28                     
  1000                           ; BSR set to: 0
  1001                           ;main.c: 63:         if (ds>=min_length){
  1002  000F28  51D4               	movf	main@ds& (0+255),w,b
  1003  000F2A  6FAE               	movwf	??_main& (0+255),b
  1004  000F2C  6BAF               	clrf	(??_main+1)& (0+255),b
  1005  000F2E  51CE               	movf	main@min_length& (0+255),w,b
  1006  000F30  5DAE               	subwf	??_main& (0+255),w,b
  1007  000F32  51CF               	movf	(main@min_length+1)& (0+255),w,b
  1008  000F34  59AF               	subwfb	(??_main+1)& (0+255),w,b
  1009  000F36  A0D8               	btfss	status,0,c
  1010  000F38  EFA0  F007         	goto	u3021
  1011  000F3C  EFA2  F007         	goto	u3020
  1012  000F40                     u3021:
  1013  000F40  EF51  F009         	goto	l3345
  1014  000F44                     u3020:
  1015  000F44                     
  1016                           ; BSR set to: 0
  1017                           ;main.c: 64:             ds = 0;
  1018  000F44  0E00               	movlw	0
  1019  000F46  6FD4               	movwf	main@ds& (0+255),b
  1020  000F48                     
  1021                           ; BSR set to: 0
  1022                           ;main.c: 65:            if (dmin<(hour_length-1)) {
  1023  000F48  0EFF               	movlw	255
  1024  000F4A  6FAE               	movwf	??_main& (0+255),b
  1025  000F4C  0EFF               	movlw	255
  1026  000F4E  6FAF               	movwf	(??_main+1)& (0+255),b
  1027  000F50  C0D0  F0B0         	movff	main@hour_length,??_main+2
  1028  000F54  C0D1  F0B1         	movff	main@hour_length+1,??_main+3
  1029  000F58  51AE               	movf	??_main& (0+255),w,b
  1030  000F5A  27B0               	addwf	(??_main+2)& (0+255),f,b
  1031  000F5C  51AF               	movf	(??_main+1)& (0+255),w,b
  1032  000F5E  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1033  000F60  51D5               	movf	main@dmin& (0+255),w,b
  1034  000F62  6FB2               	movwf	(??_main+4)& (0+255),b
  1035  000F64  6BB3               	clrf	(??_main+5)& (0+255),b
  1036  000F66  51B0               	movf	(??_main+2)& (0+255),w,b
  1037  000F68  5DB2               	subwf	(??_main+4)& (0+255),w,b
  1038  000F6A  51B1               	movf	(??_main+3)& (0+255),w,b
  1039  000F6C  59B3               	subwfb	(??_main+5)& (0+255),w,b
  1040  000F6E  B0D8               	btfsc	status,0,c
  1041  000F70  EFBC  F007         	goto	u3031
  1042  000F74  EFBE  F007         	goto	u3030
  1043  000F78                     u3031:
  1044  000F78  EFC1  F007         	goto	l3257
  1045  000F7C                     u3030:
  1046  000F7C                     
  1047                           ; BSR set to: 0
  1048                           ;main.c: 66:                 dmin ++;
  1049  000F7C  2BD5               	incf	main@dmin& (0+255),f,b
  1050                           
  1051                           ;main.c: 67:            }
  1052  000F7E  EF51  F009         	goto	l3345
  1053  000F82                     l3257:
  1054                           
  1055                           ; BSR set to: 0
  1056  000F82  0EFF               	movlw	255
  1057  000F84  6FAE               	movwf	??_main& (0+255),b
  1058  000F86  0EFF               	movlw	255
  1059  000F88  6FAF               	movwf	(??_main+1)& (0+255),b
  1060  000F8A  C0D0  F0B0         	movff	main@hour_length,??_main+2
  1061  000F8E  C0D1  F0B1         	movff	main@hour_length+1,??_main+3
  1062  000F92  51AE               	movf	??_main& (0+255),w,b
  1063  000F94  27B0               	addwf	(??_main+2)& (0+255),f,b
  1064  000F96  51AF               	movf	(??_main+1)& (0+255),w,b
  1065  000F98  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1066  000F9A  51D5               	movf	main@dmin& (0+255),w,b
  1067  000F9C  6FB2               	movwf	(??_main+4)& (0+255),b
  1068  000F9E  6BB3               	clrf	(??_main+5)& (0+255),b
  1069  000FA0  51B0               	movf	(??_main+2)& (0+255),w,b
  1070  000FA2  5DB2               	subwf	(??_main+4)& (0+255),w,b
  1071  000FA4  51B1               	movf	(??_main+3)& (0+255),w,b
  1072  000FA6  59B3               	subwfb	(??_main+5)& (0+255),w,b
  1073  000FA8  A0D8               	btfss	status,0,c
  1074  000FAA  EFD9  F007         	goto	u3041
  1075  000FAE  EFDB  F007         	goto	u3040
  1076  000FB2                     u3041:
  1077  000FB2  EF51  F009         	goto	l3345
  1078  000FB6                     u3040:
  1079  000FB6                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 69:                dmin = 0;
  1082  000FB6  0E00               	movlw	0
  1083  000FB8  6FD5               	movwf	main@dmin& (0+255),b
  1084  000FBA                     
  1085                           ; BSR set to: 0
  1086                           ;main.c: 70:                 if (dh<(hours_in_day-1)) {
  1087  000FBA  0EFF               	movlw	255
  1088  000FBC  6FAE               	movwf	??_main& (0+255),b
  1089  000FBE  0EFF               	movlw	255
  1090  000FC0  6FAF               	movwf	(??_main+1)& (0+255),b
  1091  000FC2  C0D2  F0B0         	movff	main@hours_in_day,??_main+2
  1092  000FC6  C0D3  F0B1         	movff	main@hours_in_day+1,??_main+3
  1093  000FCA  51AE               	movf	??_main& (0+255),w,b
  1094  000FCC  27B0               	addwf	(??_main+2)& (0+255),f,b
  1095  000FCE  51AF               	movf	(??_main+1)& (0+255),w,b
  1096  000FD0  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1097  000FD2  C0DA  F0B2         	movff	main@dh,??_main+4
  1098  000FD6  6BB3               	clrf	(??_main+5)& (0+255),b
  1099  000FD8  BFB2               	btfsc	(??_main+4)& (0+255),7,b
  1100  000FDA  07B3               	decf	(??_main+5)& (0+255),f,b
  1101  000FDC  51B0               	movf	(??_main+2)& (0+255),w,b
  1102  000FDE  5DB2               	subwf	(??_main+4)& (0+255),w,b
  1103  000FE0  51B1               	movf	(??_main+3)& (0+255),w,b
  1104  000FE2  59B3               	subwfb	(??_main+5)& (0+255),w,b
  1105  000FE4  B0D8               	btfsc	status,0,c
  1106  000FE6  EFF7  F007         	goto	u3051
  1107  000FEA  EFF9  F007         	goto	u3050
  1108  000FEE                     u3051:
  1109  000FEE  EFFC  F007         	goto	l3265
  1110  000FF2                     u3050:
  1111  000FF2                     
  1112                           ; BSR set to: 0
  1113                           ;main.c: 71:                     dh++;
  1114  000FF2  2BDA               	incf	main@dh& (0+255),f,b
  1115                           
  1116                           ;main.c: 72:                 }
  1117  000FF4  EF51  F009         	goto	l3345
  1118  000FF8                     l3265:
  1119                           
  1120                           ; BSR set to: 0
  1121  000FF8  0EFF               	movlw	255
  1122  000FFA  6FAE               	movwf	??_main& (0+255),b
  1123  000FFC  0EFF               	movlw	255
  1124  000FFE  6FAF               	movwf	(??_main+1)& (0+255),b
  1125  001000  C0D2  F0B0         	movff	main@hours_in_day,??_main+2
  1126  001004  C0D3  F0B1         	movff	main@hours_in_day+1,??_main+3
  1127  001008  51AE               	movf	??_main& (0+255),w,b
  1128  00100A  27B0               	addwf	(??_main+2)& (0+255),f,b
  1129  00100C  51AF               	movf	(??_main+1)& (0+255),w,b
  1130  00100E  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1131  001010  C0DA  F0B2         	movff	main@dh,??_main+4
  1132  001014  6BB3               	clrf	(??_main+5)& (0+255),b
  1133  001016  BFB2               	btfsc	(??_main+4)& (0+255),7,b
  1134  001018  07B3               	decf	(??_main+5)& (0+255),f,b
  1135  00101A  51B0               	movf	(??_main+2)& (0+255),w,b
  1136  00101C  5DB2               	subwf	(??_main+4)& (0+255),w,b
  1137  00101E  51B1               	movf	(??_main+3)& (0+255),w,b
  1138  001020  59B3               	subwfb	(??_main+5)& (0+255),w,b
  1139  001022  A0D8               	btfss	status,0,c
  1140  001024  EF16  F008         	goto	u3061
  1141  001028  EF18  F008         	goto	u3060
  1142  00102C                     u3061:
  1143  00102C  EF51  F009         	goto	l3345
  1144  001030                     u3060:
  1145  001030                     
  1146                           ; BSR set to: 0
  1147                           ;main.c: 74:                     dh = 0;
  1148  001030  0E00               	movlw	0
  1149  001032  6FDA               	movwf	main@dh& (0+255),b
  1150  001034                     
  1151                           ; BSR set to: 0
  1152                           ;main.c: 75:                    if ((dname<6)&& (dd<dim[dm-1])){
  1153  001034  51D9               	movf	main@dname& (0+255),w,b
  1154  001036  0A80               	xorlw	128
  1155  001038  0F7A               	addlw	-134
  1156  00103A  B0D8               	btfsc	status,0,c
  1157  00103C  EF22  F008         	goto	u3071
  1158  001040  EF24  F008         	goto	u3070
  1159  001044                     u3071:
  1160  001044  EF4C  F008         	goto	l3275
  1161  001048                     u3070:
  1162  001048                     
  1163                           ; BSR set to: 0
  1164  001048  0EFE               	movlw	254
  1165  00104A  6FAE               	movwf	??_main& (0+255),b
  1166  00104C  0EFF               	movlw	255
  1167  00104E  6FAF               	movwf	(??_main+1)& (0+255),b
  1168  001050  51DC               	movf	main@dm& (0+255),w,b
  1169  001052  6FB0               	movwf	(??_main+2)& (0+255),b
  1170  001054  6BB1               	clrf	(??_main+3)& (0+255),b
  1171  001056  90D8               	bcf	status,0,c
  1172  001058  37B0               	rlcf	(??_main+2)& (0+255),f,b
  1173  00105A  37B1               	rlcf	(??_main+3)& (0+255),f,b
  1174  00105C  51AE               	movf	??_main& (0+255),w,b
  1175  00105E  27B0               	addwf	(??_main+2)& (0+255),f,b
  1176  001060  51AF               	movf	(??_main+1)& (0+255),w,b
  1177  001062  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1178  001064  0EB6               	movlw	low main@dim
  1179  001066  25B0               	addwf	(??_main+2)& (0+255),w,b
  1180  001068  6ED9               	movwf	fsr2l,c
  1181  00106A  0E00               	movlw	high main@dim
  1182  00106C  21B1               	addwfc	(??_main+3)& (0+255),w,b
  1183  00106E  6EDA               	movwf	fsr2h,c
  1184  001070  C0DB  F0B4         	movff	main@dd,??_main+6
  1185  001074  6BB5               	clrf	(??_main+7)& (0+255),b
  1186  001076  BFB4               	btfsc	(??_main+6)& (0+255),7,b
  1187  001078  07B5               	decf	(??_main+7)& (0+255),f,b
  1188  00107A  50DE               	movf	postinc2,w,c
  1189  00107C  5DB4               	subwf	(??_main+6)& (0+255),w,b
  1190  00107E  50DE               	movf	postinc2,w,c
  1191  001080  59B5               	subwfb	(??_main+7)& (0+255),w,b
  1192  001082  B0D8               	btfsc	status,0,c
  1193  001084  EF46  F008         	goto	u3081
  1194  001088  EF48  F008         	goto	u3080
  1195  00108C                     u3081:
  1196  00108C  EF4C  F008         	goto	l3275
  1197  001090                     u3080:
  1198  001090                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 76:                         dname ++;
  1201  001090  2BD9               	incf	main@dname& (0+255),f,b
  1202                           
  1203                           ;main.c: 77:                         dd ++;
  1204  001092  2BDB               	incf	main@dd& (0+255),f,b
  1205                           
  1206                           ;main.c: 78:                    }
  1207  001094  EF51  F009         	goto	l3345
  1208  001098                     l3275:
  1209                           
  1210                           ; BSR set to: 0
  1211  001098  0E06               	movlw	6
  1212  00109A  19D9               	xorwf	main@dname& (0+255),w,b
  1213  00109C  A4D8               	btfss	status,2,c
  1214  00109E  EF53  F008         	goto	u3091
  1215  0010A2  EF55  F008         	goto	u3090
  1216  0010A6                     u3091:
  1217  0010A6  EFBE  F008         	goto	l3311
  1218  0010AA                     u3090:
  1219  0010AA                     
  1220                           ; BSR set to: 0
  1221  0010AA  0EFE               	movlw	254
  1222  0010AC  6FAE               	movwf	??_main& (0+255),b
  1223  0010AE  0EFF               	movlw	255
  1224  0010B0  6FAF               	movwf	(??_main+1)& (0+255),b
  1225  0010B2  51DC               	movf	main@dm& (0+255),w,b
  1226  0010B4  6FB0               	movwf	(??_main+2)& (0+255),b
  1227  0010B6  6BB1               	clrf	(??_main+3)& (0+255),b
  1228  0010B8  90D8               	bcf	status,0,c
  1229  0010BA  37B0               	rlcf	(??_main+2)& (0+255),f,b
  1230  0010BC  37B1               	rlcf	(??_main+3)& (0+255),f,b
  1231  0010BE  51AE               	movf	??_main& (0+255),w,b
  1232  0010C0  27B0               	addwf	(??_main+2)& (0+255),f,b
  1233  0010C2  51AF               	movf	(??_main+1)& (0+255),w,b
  1234  0010C4  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1235  0010C6  0EB6               	movlw	low main@dim
  1236  0010C8  25B0               	addwf	(??_main+2)& (0+255),w,b
  1237  0010CA  6ED9               	movwf	fsr2l,c
  1238  0010CC  0E00               	movlw	high main@dim
  1239  0010CE  21B1               	addwfc	(??_main+3)& (0+255),w,b
  1240  0010D0  6EDA               	movwf	fsr2h,c
  1241  0010D2  C0DB  F0B4         	movff	main@dd,??_main+6
  1242  0010D6  6BB5               	clrf	(??_main+7)& (0+255),b
  1243  0010D8  BFB4               	btfsc	(??_main+6)& (0+255),7,b
  1244  0010DA  07B5               	decf	(??_main+7)& (0+255),f,b
  1245  0010DC  50DE               	movf	postinc2,w,c
  1246  0010DE  5DB4               	subwf	(??_main+6)& (0+255),w,b
  1247  0010E0  50DE               	movf	postinc2,w,c
  1248  0010E2  59B5               	subwfb	(??_main+7)& (0+255),w,b
  1249  0010E4  B0D8               	btfsc	status,0,c
  1250  0010E6  EF77  F008         	goto	u3101
  1251  0010EA  EF79  F008         	goto	u3100
  1252  0010EE                     u3101:
  1253  0010EE  EFBE  F008         	goto	l3311
  1254  0010F2                     u3100:
  1255  0010F2                     
  1256                           ; BSR set to: 0
  1257                           ;main.c: 80:                        dname = 0;
  1258  0010F2  0E00               	movlw	0
  1259  0010F4  6FD9               	movwf	main@dname& (0+255),b
  1260  0010F6                     
  1261                           ; BSR set to: 0
  1262                           ;main.c: 81:                        dd ++;
  1263  0010F6  2BDB               	incf	main@dd& (0+255),f,b
  1264  0010F8                     
  1265                           ; BSR set to: 0
  1266                           ;main.c: 82:                             if (dm==3){
  1267  0010F8  0E03               	movlw	3
  1268  0010FA  19DC               	xorwf	main@dm& (0+255),w,b
  1269  0010FC  A4D8               	btfss	status,2,c
  1270  0010FE  EF83  F008         	goto	u3111
  1271  001102  EF85  F008         	goto	u3110
  1272  001106                     u3111:
  1273  001106  EF9B  F008         	goto	l3295
  1274  00110A                     u3110:
  1275  00110A                     
  1276                           ; BSR set to: 0
  1277  00110A  51DB               	movf	main@dd& (0+255),w,b
  1278  00110C  0A80               	xorlw	128
  1279  00110E  0F67               	addlw	-153
  1280  001110  A0D8               	btfss	status,0,c
  1281  001112  EF8D  F008         	goto	u3121
  1282  001116  EF8F  F008         	goto	u3120
  1283  00111A                     u3121:
  1284  00111A  EF51  F009         	goto	l123
  1285  00111E                     u3120:
  1286  00111E                     
  1287                           ; BSR set to: 0
  1288  00111E  51D6               	movf	main@dBST& (0+255),w,b
  1289  001120  A4D8               	btfss	status,2,c
  1290  001122  EF95  F008         	goto	u3131
  1291  001126  EF97  F008         	goto	u3130
  1292  00112A                     u3131:
  1293  00112A  EF51  F009         	goto	l123
  1294  00112E                     u3130:
  1295  00112E                     
  1296                           ; BSR set to: 0
  1297                           ;main.c: 85:                                     dh=1;
  1298  00112E  0E01               	movlw	1
  1299  001130  6FDA               	movwf	main@dh& (0+255),b
  1300  001132  EF51  F009         	goto	l3345
  1301  001136                     l3295:
  1302                           
  1303                           ; BSR set to: 0
  1304  001136  0E0A               	movlw	10
  1305  001138  19DC               	xorwf	main@dm& (0+255),w,b
  1306  00113A  A4D8               	btfss	status,2,c
  1307  00113C  EFA2  F008         	goto	u3141
  1308  001140  EFA4  F008         	goto	u3140
  1309  001144                     u3141:
  1310  001144  EF51  F009         	goto	l123
  1311  001148                     u3140:
  1312  001148                     
  1313                           ; BSR set to: 0
  1314  001148  51DB               	movf	main@dd& (0+255),w,b
  1315  00114A  0A80               	xorlw	128
  1316  00114C  0F67               	addlw	-153
  1317  00114E  A0D8               	btfss	status,0,c
  1318  001150  EFAC  F008         	goto	u3151
  1319  001154  EFAE  F008         	goto	u3150
  1320  001158                     u3151:
  1321  001158  EF51  F009         	goto	l123
  1322  00115C                     u3150:
  1323  00115C                     
  1324                           ; BSR set to: 0
  1325  00115C  05D6               	decf	main@dBST& (0+255),w,b
  1326  00115E  A4D8               	btfss	status,2,c
  1327  001160  EFB4  F008         	goto	u3161
  1328  001164  EFB6  F008         	goto	u3160
  1329  001168                     u3161:
  1330  001168  EF51  F009         	goto	l123
  1331  00116C                     u3160:
  1332  00116C                     
  1333                           ; BSR set to: 0
  1334                           ;main.c: 91:                                     dh=-1;
  1335  00116C  69DA               	setf	main@dh& (0+255),b
  1336                           
  1337                           ;main.c: 92:                                     dname = -1;
  1338  00116E  69D9               	setf	main@dname& (0+255),b
  1339  001170                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 93:                                     dd = dd-1;
  1342  001170  05DB               	decf	main@dd& (0+255),w,b
  1343  001172  6FDB               	movwf	main@dd& (0+255),b
  1344  001174                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 94:                                     dBST=0;
  1347  001174  0E00               	movlw	0
  1348  001176  6FD6               	movwf	main@dBST& (0+255),b
  1349  001178  EF51  F009         	goto	l3345
  1350  00117C                     l3311:
  1351                           
  1352                           ; BSR set to: 0
  1353  00117C  51D9               	movf	main@dname& (0+255),w,b
  1354  00117E  0A80               	xorlw	128
  1355  001180  0F7A               	addlw	-134
  1356  001182  B0D8               	btfsc	status,0,c
  1357  001184  EFC6  F008         	goto	u3171
  1358  001188  EFC8  F008         	goto	u3170
  1359  00118C                     u3171:
  1360  00118C  EF0A  F009         	goto	l3329
  1361  001190                     u3170:
  1362  001190                     
  1363                           ; BSR set to: 0
  1364  001190  0EFE               	movlw	254
  1365  001192  6FAE               	movwf	??_main& (0+255),b
  1366  001194  0EFF               	movlw	255
  1367  001196  6FAF               	movwf	(??_main+1)& (0+255),b
  1368  001198  51DC               	movf	main@dm& (0+255),w,b
  1369  00119A  6FB0               	movwf	(??_main+2)& (0+255),b
  1370  00119C  6BB1               	clrf	(??_main+3)& (0+255),b
  1371  00119E  90D8               	bcf	status,0,c
  1372  0011A0  37B0               	rlcf	(??_main+2)& (0+255),f,b
  1373  0011A2  37B1               	rlcf	(??_main+3)& (0+255),f,b
  1374  0011A4  51AE               	movf	??_main& (0+255),w,b
  1375  0011A6  27B0               	addwf	(??_main+2)& (0+255),f,b
  1376  0011A8  51AF               	movf	(??_main+1)& (0+255),w,b
  1377  0011AA  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1378  0011AC  0EB6               	movlw	low main@dim
  1379  0011AE  25B0               	addwf	(??_main+2)& (0+255),w,b
  1380  0011B0  6ED9               	movwf	fsr2l,c
  1381  0011B2  0E00               	movlw	high main@dim
  1382  0011B4  21B1               	addwfc	(??_main+3)& (0+255),w,b
  1383  0011B6  6EDA               	movwf	fsr2h,c
  1384  0011B8  C0DB  F0B4         	movff	main@dd,??_main+6
  1385  0011BC  6BB5               	clrf	(??_main+7)& (0+255),b
  1386  0011BE  BFB4               	btfsc	(??_main+6)& (0+255),7,b
  1387  0011C0  07B5               	decf	(??_main+7)& (0+255),f,b
  1388  0011C2  50DE               	movf	postinc2,w,c
  1389  0011C4  19B4               	xorwf	(??_main+6)& (0+255),w,b
  1390  0011C6  E107               	bnz	u3181
  1391  0011C8  50DE               	movf	postinc2,w,c
  1392  0011CA  19B5               	xorwf	(??_main+7)& (0+255),w,b
  1393  0011CC  A4D8               	btfss	status,2,c
  1394  0011CE  EFEB  F008         	goto	u3181
  1395  0011D2  EFED  F008         	goto	u3180
  1396  0011D6                     u3181:
  1397  0011D6  EF0A  F009         	goto	l3329
  1398  0011DA                     u3180:
  1399  0011DA                     
  1400                           ; BSR set to: 0
  1401                           ;main.c: 101:                         dname ++;
  1402  0011DA  2BD9               	incf	main@dname& (0+255),f,b
  1403  0011DC                     
  1404                           ; BSR set to: 0
  1405                           ;main.c: 102:                        dd = 1;
  1406  0011DC  0E01               	movlw	1
  1407  0011DE  6FDB               	movwf	main@dd& (0+255),b
  1408  0011E0                     
  1409                           ; BSR set to: 0
  1410                           ;main.c: 103:                         if (dm<12) {
  1411  0011E0  0E0C               	movlw	12
  1412  0011E2  61DC               	cpfslt	main@dm& (0+255),b
  1413  0011E4  EFF6  F008         	goto	u3191
  1414  0011E8  EFF8  F008         	goto	u3190
  1415  0011EC                     u3191:
  1416  0011EC  EFFB  F008         	goto	l3323
  1417  0011F0                     u3190:
  1418  0011F0                     l3321:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;main.c: 104:                            dm++;
  1422  0011F0  2BDC               	incf	main@dm& (0+255),f,b
  1423                           
  1424                           ;main.c: 105:                         }
  1425  0011F2  EF51  F009         	goto	l3345
  1426  0011F6                     l3323:
  1427                           
  1428                           ; BSR set to: 0
  1429  0011F6  0E0C               	movlw	12
  1430  0011F8  19DC               	xorwf	main@dm& (0+255),w,b
  1431  0011FA  A4D8               	btfss	status,2,c
  1432  0011FC  EF02  F009         	goto	u3201
  1433  001200  EF04  F009         	goto	u3200
  1434  001204                     u3201:
  1435  001204  EF51  F009         	goto	l123
  1436  001208                     u3200:
  1437  001208                     l3325:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 107:                             dm=1;
  1441  001208  0E01               	movlw	1
  1442  00120A  6FDC               	movwf	main@dm& (0+255),b
  1443  00120C                     
  1444                           ; BSR set to: 0
  1445                           ;main.c: 108:                            dy++;
  1446  00120C  4BD7               	infsnz	main@dy& (0+255),f,b
  1447  00120E  2BD8               	incf	(main@dy+1)& (0+255),f,b
  1448  001210  EF51  F009         	goto	l3345
  1449  001214                     l3329:
  1450                           
  1451                           ; BSR set to: 0
  1452  001214  0E06               	movlw	6
  1453  001216  19D9               	xorwf	main@dname& (0+255),w,b
  1454  001218  A4D8               	btfss	status,2,c
  1455  00121A  EF11  F009         	goto	u3211
  1456  00121E  EF13  F009         	goto	u3210
  1457  001222                     u3211:
  1458  001222  EF51  F009         	goto	l123
  1459  001226                     u3210:
  1460  001226                     
  1461                           ; BSR set to: 0
  1462  001226  0EFE               	movlw	254
  1463  001228  6FAE               	movwf	??_main& (0+255),b
  1464  00122A  0EFF               	movlw	255
  1465  00122C  6FAF               	movwf	(??_main+1)& (0+255),b
  1466  00122E  51DC               	movf	main@dm& (0+255),w,b
  1467  001230  6FB0               	movwf	(??_main+2)& (0+255),b
  1468  001232  6BB1               	clrf	(??_main+3)& (0+255),b
  1469  001234  90D8               	bcf	status,0,c
  1470  001236  37B0               	rlcf	(??_main+2)& (0+255),f,b
  1471  001238  37B1               	rlcf	(??_main+3)& (0+255),f,b
  1472  00123A  51AE               	movf	??_main& (0+255),w,b
  1473  00123C  27B0               	addwf	(??_main+2)& (0+255),f,b
  1474  00123E  51AF               	movf	(??_main+1)& (0+255),w,b
  1475  001240  23B1               	addwfc	(??_main+3)& (0+255),f,b
  1476  001242  0EB6               	movlw	low main@dim
  1477  001244  25B0               	addwf	(??_main+2)& (0+255),w,b
  1478  001246  6ED9               	movwf	fsr2l,c
  1479  001248  0E00               	movlw	high main@dim
  1480  00124A  21B1               	addwfc	(??_main+3)& (0+255),w,b
  1481  00124C  6EDA               	movwf	fsr2h,c
  1482  00124E  C0DB  F0B4         	movff	main@dd,??_main+6
  1483  001252  6BB5               	clrf	(??_main+7)& (0+255),b
  1484  001254  BFB4               	btfsc	(??_main+6)& (0+255),7,b
  1485  001256  07B5               	decf	(??_main+7)& (0+255),f,b
  1486  001258  50DE               	movf	postinc2,w,c
  1487  00125A  19B4               	xorwf	(??_main+6)& (0+255),w,b
  1488  00125C  E107               	bnz	u3221
  1489  00125E  50DE               	movf	postinc2,w,c
  1490  001260  19B5               	xorwf	(??_main+7)& (0+255),w,b
  1491  001262  A4D8               	btfss	status,2,c
  1492  001264  EF36  F009         	goto	u3221
  1493  001268  EF38  F009         	goto	u3220
  1494  00126C                     u3221:
  1495  00126C  EF51  F009         	goto	l123
  1496  001270                     u3220:
  1497  001270                     
  1498                           ; BSR set to: 0
  1499                           ;main.c: 114:                         dname = 0;
  1500  001270  0E00               	movlw	0
  1501  001272  6FD9               	movwf	main@dname& (0+255),b
  1502                           
  1503                           ;main.c: 115:                       dd = 1;
  1504  001274  0E01               	movlw	1
  1505  001276  6FDB               	movwf	main@dd& (0+255),b
  1506  001278                     
  1507                           ; BSR set to: 0
  1508                           ;main.c: 116:                         if (dm<12) {
  1509  001278  0E0C               	movlw	12
  1510  00127A  61DC               	cpfslt	main@dm& (0+255),b
  1511  00127C  EF42  F009         	goto	u3231
  1512  001280  EF44  F009         	goto	u3230
  1513  001284                     u3231:
  1514  001284  EF46  F009         	goto	l3339
  1515  001288                     u3230:
  1516  001288  EFF8  F008         	goto	l3321
  1517  00128C                     l3339:
  1518                           
  1519                           ; BSR set to: 0
  1520  00128C  0E0C               	movlw	12
  1521  00128E  19DC               	xorwf	main@dm& (0+255),w,b
  1522  001290  A4D8               	btfss	status,2,c
  1523  001292  EF4D  F009         	goto	u3241
  1524  001296  EF4F  F009         	goto	u3240
  1525  00129A                     u3241:
  1526  00129A  EF51  F009         	goto	l123
  1527  00129E                     u3240:
  1528  00129E  EF04  F009         	goto	l3325
  1529  0012A2                     l123:
  1530  0012A2                     l3345:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 128:         daylight_save(dBST,ds,dh);
  1534  0012A2  C0D4  F00A         	movff	main@ds,daylight_save@s
  1535  0012A6  C0DA  F00B         	movff	main@dh,daylight_save@h
  1536  0012AA  51D6               	movf	main@dBST& (0+255),w,b
  1537  0012AC  EC64  F010         	call	_daylight_save
  1538  0012B0                     
  1539                           ;main.c: 129:         LCD_setlines(dname,dh,dmin,ds,dd,dm,dy,dBST);
  1540  0012B0  C0DA  F07B         	movff	main@dh,LCD_setlines@ch
  1541  0012B4  C0D5  F07C         	movff	main@dmin,LCD_setlines@cmin
  1542  0012B8  C0D4  F07D         	movff	main@ds,LCD_setlines@cs
  1543  0012BC  C0DB  F07E         	movff	main@dd,LCD_setlines@cd
  1544  0012C0  C0DC  F07F         	movff	main@dm,LCD_setlines@cm
  1545  0012C4  C0D7  F080         	movff	main@dy,LCD_setlines@cy
  1546  0012C8  C0D8  F081         	movff	main@dy+1,LCD_setlines@cy+1
  1547  0012CC  C0D6  F082         	movff	main@dBST,LCD_setlines@cBST
  1548  0012D0  0100               	movlb	0	; () banked
  1549  0012D2  51D9               	movf	main@dname& (0+255),w,b
  1550  0012D4  ECD5  F00E         	call	_LCD_setlines
  1551  0012D8                     
  1552                           ;main.c: 130:         LEDarray_disp_bin(dh);
  1553  0012D8  0100               	movlb	0	; () banked
  1554  0012DA  51DA               	movf	main@dh& (0+255),w,b
  1555  0012DC  6E02               	movwf	LEDarray_disp_bin@number^0,c
  1556  0012DE  6A03               	clrf	(LEDarray_disp_bin@number+1)^0,c
  1557  0012E0  BE02               	btfsc	LEDarray_disp_bin@number^0,7,c
  1558  0012E2  0603               	decf	(LEDarray_disp_bin@number+1)^0,f,c
  1559  0012E4  EC0F  F011         	call	_LEDarray_disp_bin	;wreg free
  1560  0012E8                     
  1561                           ;main.c: 131:         LDR_val();
  1562  0012E8  EC8D  F013         	call	_LDR_val	;wreg free
  1563  0012EC                     
  1564                           ;main.c: 132:         LDR_thres(LDR_val(),dh);
  1565  0012EC  C0DA  F006         	movff	main@dh,LDR_thres@hour
  1566  0012F0  EC8D  F013         	call	_LDR_val	;wreg free
  1567  0012F4  5002               	movf	?_LDR_val^0,w,c
  1568  0012F6  ECE0  F011         	call	_LDR_thres
  1569  0012FA  EF49  F007         	goto	l3233
  1570  0012FE  EF23  F000         	goto	start
  1571  001302                     __end_of_main:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _daylight_save *****************
  1575 ;; Defined at:
  1576 ;;		line 16 in file "calender.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  BST             1    wreg     unsigned char 
  1579 ;;  s               1    9[COMRAM] unsigned char 
  1580 ;;  h               1   10[COMRAM] unsigned char 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  BST             1   11[COMRAM] unsigned char 
  1583 ;;  offset_s        2   17[COMRAM] unsigned int 
  1584 ;;  tol             2    0        unsigned int 
  1585 ;;  sol_noon        1   16[COMRAM] unsigned char 
  1586 ;;  da_h            1   15[COMRAM] unsigned char 
  1587 ;;  da_s            1   14[COMRAM] unsigned char 
  1588 ;;  du_h            1   13[COMRAM] unsigned char 
  1589 ;;  du_s            1   12[COMRAM] unsigned char 
  1590 ;;  offset_h        1    0        unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;Total ram usage:       10 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 2
  1607 ;; This function calls:
  1608 ;;		___awdiv
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text1
  1615  0020C8                     __ptext1:
  1616                           	callstack 0
  1617  0020C8                     _daylight_save:
  1618                           	callstack 28
  1619                           
  1620                           ;incstack = 0
  1621                           ;daylight_save@BST stored from wreg
  1622  0020C8  6E0C               	movwf	daylight_save@BST^0,c
  1623  0020CA                     
  1624                           ;calender.c: 19:     unsigned int offset_s;;calender.c: 20:     char offset_h;;calender.
      +                          c: 21:     unsigned char du_s;;calender.c: 22:     unsigned char du_h;;calender.c: 23:  
      +                             unsigned char da_s;;calender.c: 24:     unsigned char da_h;;calender.c: 25:     unsig
      +                          ned char sol_noon;;calender.c: 28:     if (BST==1){sol_noon = 13;}
  1625  0020CA  040C               	decf	daylight_save@BST^0,w,c
  1626  0020CC  A4D8               	btfss	status,2,c
  1627  0020CE  EF6B  F010         	goto	u2031
  1628  0020D2  EF6D  F010         	goto	u2030
  1629  0020D6                     u2031:
  1630  0020D6  EF71  F010         	goto	l2539
  1631  0020DA                     u2030:
  1632  0020DA  0E0D               	movlw	13
  1633  0020DC  6E11               	movwf	daylight_save@sol_noon^0,c
  1634  0020DE  EF73  F010         	goto	l2541
  1635  0020E2                     l2539:
  1636  0020E2  0E0C               	movlw	12
  1637  0020E4  6E11               	movwf	daylight_save@sol_noon^0,c
  1638  0020E6                     l2541:
  1639                           
  1640                           ;calender.c: 35:         if (h>=5 && h<=10) {
  1641  0020E6  0E04               	movlw	4
  1642  0020E8  640B               	cpfsgt	daylight_save@h^0,c
  1643  0020EA  EF79  F010         	goto	u2041
  1644  0020EE  EF7B  F010         	goto	u2040
  1645  0020F2                     u2041:
  1646  0020F2  EF86  F010         	goto	l2549
  1647  0020F6                     u2040:
  1648  0020F6  0E0B               	movlw	11
  1649  0020F8  600B               	cpfslt	daylight_save@h^0,c
  1650  0020FA  EF81  F010         	goto	u2051
  1651  0020FE  EF83  F010         	goto	u2050
  1652  002102                     u2051:
  1653  002102  EF86  F010         	goto	l2549
  1654  002106                     u2050:
  1655  002106                     
  1656                           ;calender.c: 36:                 if (LATDbits.LATD7=0){
  1657  002106  9E7C               	bcf	124,7,c	;volatile
  1658  002108  EF9B  F010         	goto	l2555
  1659  00210C                     l2549:
  1660  00210C  0E0E               	movlw	14
  1661  00210E  640B               	cpfsgt	daylight_save@h^0,c
  1662  002110  EF8C  F010         	goto	u2061
  1663  002114  EF8E  F010         	goto	u2060
  1664  002118                     u2061:
  1665  002118  EF9B  F010         	goto	l2555
  1666  00211C                     u2060:
  1667  00211C  0E17               	movlw	23
  1668  00211E  600B               	cpfslt	daylight_save@h^0,c
  1669  002120  EF94  F010         	goto	u2071
  1670  002124  EF96  F010         	goto	u2070
  1671  002128                     u2071:
  1672  002128  EF9B  F010         	goto	l2555
  1673  00212C                     u2070:
  1674  00212C                     
  1675                           ;calender.c: 44:                 if (LATDbits.LATD7=1){
  1676  00212C  8E7C               	bsf	124,7,c	;volatile
  1677                           
  1678                           ;calender.c: 45:                     da_s = s;
  1679  00212E  C00A  F00F         	movff	daylight_save@s,daylight_save@da_s
  1680                           
  1681                           ;calender.c: 46:                     da_h = h;
  1682  002132  C00B  F010         	movff	daylight_save@h,daylight_save@da_h
  1683  002136                     l2555:
  1684                           
  1685                           ;calender.c: 50:         offset_s = ((du_s)+(da_s))/2 ;
  1686  002136  500D               	movf	daylight_save@du_s^0,w,c
  1687  002138  240F               	addwf	daylight_save@da_s^0,w,c
  1688  00213A  6E02               	movwf	___awdiv@dividend^0,c
  1689  00213C  6A03               	clrf	(___awdiv@dividend+1)^0,c
  1690  00213E  3603               	rlcf	(___awdiv@dividend+1)^0,f,c
  1691  002140  0E00               	movlw	0
  1692  002142  6E05               	movwf	(___awdiv@divisor+1)^0,c
  1693  002144  0E02               	movlw	2
  1694  002146  6E04               	movwf	___awdiv@divisor^0,c
  1695  002148  ECA1  F00F         	call	___awdiv	;wreg free
  1696  00214C  C002  F012         	movff	?___awdiv,daylight_save@offset_s
  1697  002150  C003  F013         	movff	?___awdiv+1,daylight_save@offset_s+1
  1698  002154  500E               	movf	daylight_save@du_h^0,w,c
  1699  002156  2410               	addwf	daylight_save@da_h^0,w,c
  1700  002158  6E02               	movwf	___awdiv@dividend^0,c
  1701  00215A  6A03               	clrf	(___awdiv@dividend+1)^0,c
  1702  00215C  3603               	rlcf	(___awdiv@dividend+1)^0,f,c
  1703  00215E  0E00               	movlw	0
  1704  002160  6E05               	movwf	(___awdiv@divisor+1)^0,c
  1705  002162  0E02               	movlw	2
  1706  002164  6E04               	movwf	___awdiv@divisor^0,c
  1707  002166  ECA1  F00F         	call	___awdiv	;wreg free
  1708  00216A                     
  1709                           ;calender.c: 52:         if (offset_s > tol) {
  1710  00216A  5013               	movf	(daylight_save@offset_s+1)^0,w,c
  1711  00216C  E109               	bnz	u2080
  1712  00216E  0E65               	movlw	101
  1713  002170  5C12               	subwf	daylight_save@offset_s^0,w,c
  1714  002172  A0D8               	btfss	status,0,c
  1715  002174  EFBE  F010         	goto	u2081
  1716  002178  EFC0  F010         	goto	u2080
  1717  00217C                     u2081:
  1718  00217C  EFC3  F010         	goto	l201
  1719  002180                     u2080:
  1720  002180                     
  1721                           ;calender.c: 55:                 s = s - offset_s;
  1722  002180  5012               	movf	daylight_save@offset_s^0,w,c
  1723  002182  5C0A               	subwf	daylight_save@s^0,w,c
  1724  002184  6E0A               	movwf	daylight_save@s^0,c
  1725  002186                     l201:
  1726  002186  0012               	return		;funcret
  1727  002188                     __end_of_daylight_save:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function ___awdiv *****************
  1731 ;; Defined at:
  1732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  dividend        2    1[COMRAM] int 
  1735 ;;  divisor         2    3[COMRAM] int 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  quotient        2    7[COMRAM] int 
  1738 ;;  sign            1    6[COMRAM] unsigned char 
  1739 ;;  counter         1    5[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2    1[COMRAM] int 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;Total ram usage:        8 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_daylight_save
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text2
  1764  001F42                     __ptext2:
  1765                           	callstack 0
  1766  001F42                     ___awdiv:
  1767                           	callstack 28
  1768  001F42  0E00               	movlw	0
  1769  001F44  6E07               	movwf	___awdiv@sign^0,c
  1770  001F46  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  1771  001F48  EFAA  F00F         	goto	u1870
  1772  001F4C  EFA8  F00F         	goto	u1871
  1773  001F50                     u1871:
  1774  001F50  EFB0  F00F         	goto	l2403
  1775  001F54                     u1870:
  1776  001F54  6C04               	negf	___awdiv@divisor^0,c
  1777  001F56  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  1778  001F58  B0D8               	btfsc	status,0,c
  1779  001F5A  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  1780  001F5C  0E01               	movlw	1
  1781  001F5E  6E07               	movwf	___awdiv@sign^0,c
  1782  001F60                     l2403:
  1783  001F60  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  1784  001F62  EFB7  F00F         	goto	u1880
  1785  001F66  EFB5  F00F         	goto	u1881
  1786  001F6A                     u1881:
  1787  001F6A  EFBD  F00F         	goto	l2409
  1788  001F6E                     u1880:
  1789  001F6E  6C02               	negf	___awdiv@dividend^0,c
  1790  001F70  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  1791  001F72  B0D8               	btfsc	status,0,c
  1792  001F74  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  1793  001F76  0E01               	movlw	1
  1794  001F78  1A07               	xorwf	___awdiv@sign^0,f,c
  1795  001F7A                     l2409:
  1796  001F7A  0E00               	movlw	0
  1797  001F7C  6E09               	movwf	(___awdiv@quotient+1)^0,c
  1798  001F7E  0E00               	movlw	0
  1799  001F80  6E08               	movwf	___awdiv@quotient^0,c
  1800  001F82  5004               	movf	___awdiv@divisor^0,w,c
  1801  001F84  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  1802  001F86  B4D8               	btfsc	status,2,c
  1803  001F88  EFC8  F00F         	goto	u1891
  1804  001F8C  EFCA  F00F         	goto	u1890
  1805  001F90                     u1891:
  1806  001F90  EFF2  F00F         	goto	l2431
  1807  001F94                     u1890:
  1808  001F94  0E01               	movlw	1
  1809  001F96  6E06               	movwf	___awdiv@counter^0,c
  1810  001F98  EFD2  F00F         	goto	l2417
  1811  001F9C                     l2415:
  1812  001F9C  90D8               	bcf	status,0,c
  1813  001F9E  3604               	rlcf	___awdiv@divisor^0,f,c
  1814  001FA0  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  1815  001FA2  2A06               	incf	___awdiv@counter^0,f,c
  1816  001FA4                     l2417:
  1817  001FA4  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  1818  001FA6  EFD7  F00F         	goto	u1901
  1819  001FAA  EFD9  F00F         	goto	u1900
  1820  001FAE                     u1901:
  1821  001FAE  EFCE  F00F         	goto	l2415
  1822  001FB2                     u1900:
  1823  001FB2                     l2419:
  1824  001FB2  90D8               	bcf	status,0,c
  1825  001FB4  3608               	rlcf	___awdiv@quotient^0,f,c
  1826  001FB6  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  1827  001FB8  5004               	movf	___awdiv@divisor^0,w,c
  1828  001FBA  5C02               	subwf	___awdiv@dividend^0,w,c
  1829  001FBC  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1830  001FBE  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  1831  001FC0  A0D8               	btfss	status,0,c
  1832  001FC2  EFE5  F00F         	goto	u1911
  1833  001FC6  EFE7  F00F         	goto	u1910
  1834  001FCA                     u1911:
  1835  001FCA  EFEC  F00F         	goto	l2427
  1836  001FCE                     u1910:
  1837  001FCE  5004               	movf	___awdiv@divisor^0,w,c
  1838  001FD0  5E02               	subwf	___awdiv@dividend^0,f,c
  1839  001FD2  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1840  001FD4  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  1841  001FD6  8008               	bsf	___awdiv@quotient^0,0,c
  1842  001FD8                     l2427:
  1843  001FD8  90D8               	bcf	status,0,c
  1844  001FDA  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  1845  001FDC  3204               	rrcf	___awdiv@divisor^0,f,c
  1846  001FDE  2E06               	decfsz	___awdiv@counter^0,f,c
  1847  001FE0  EFD9  F00F         	goto	l2419
  1848  001FE4                     l2431:
  1849  001FE4  5007               	movf	___awdiv@sign^0,w,c
  1850  001FE6  B4D8               	btfsc	status,2,c
  1851  001FE8  EFF8  F00F         	goto	u1921
  1852  001FEC  EFFA  F00F         	goto	u1920
  1853  001FF0                     u1921:
  1854  001FF0  EFFE  F00F         	goto	l2435
  1855  001FF4                     u1920:
  1856  001FF4  6C08               	negf	___awdiv@quotient^0,c
  1857  001FF6  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  1858  001FF8  B0D8               	btfsc	status,0,c
  1859  001FFA  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  1860  001FFC                     l2435:
  1861  001FFC  C008  F002         	movff	___awdiv@quotient,?___awdiv
  1862  002000  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  1863  002004  0012               	return		;funcret
  1864  002006                     __end_of___awdiv:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function ___lwmod *****************
  1868 ;; Defined at:
  1869 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lwmod.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  dividend        2    1[COMRAM] unsigned int 
  1872 ;;  divisor         2    3[COMRAM] unsigned int 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  counter         1    5[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2    1[COMRAM] unsigned int 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;Total ram usage:        5 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text3
  1899  00235C                     __ptext3:
  1900                           	callstack 0
  1901  00235C                     ___lwmod:
  1902                           	callstack 29
  1903  00235C  5004               	movf	___lwmod@divisor^0,w,c
  1904  00235E  1005               	iorwf	(___lwmod@divisor+1)^0,w,c
  1905  002360  B4D8               	btfsc	status,2,c
  1906  002362  EFB5  F011         	goto	u2091
  1907  002366  EFB7  F011         	goto	u2090
  1908  00236A                     u2091:
  1909  00236A  EFDB  F011         	goto	l761
  1910  00236E                     u2090:
  1911  00236E  0E01               	movlw	1
  1912  002370  6E06               	movwf	___lwmod@counter^0,c
  1913  002372  EFBF  F011         	goto	l2589
  1914  002376                     l2587:
  1915  002376  90D8               	bcf	status,0,c
  1916  002378  3604               	rlcf	___lwmod@divisor^0,f,c
  1917  00237A  3605               	rlcf	(___lwmod@divisor+1)^0,f,c
  1918  00237C  2A06               	incf	___lwmod@counter^0,f,c
  1919  00237E                     l2589:
  1920  00237E  AE05               	btfss	(___lwmod@divisor+1)^0,7,c
  1921  002380  EFC4  F011         	goto	u2101
  1922  002384  EFC6  F011         	goto	u2100
  1923  002388                     u2101:
  1924  002388  EFBB  F011         	goto	l2587
  1925  00238C                     u2100:
  1926  00238C                     l2591:
  1927  00238C  5004               	movf	___lwmod@divisor^0,w,c
  1928  00238E  5C02               	subwf	___lwmod@dividend^0,w,c
  1929  002390  5005               	movf	(___lwmod@divisor+1)^0,w,c
  1930  002392  5803               	subwfb	(___lwmod@dividend+1)^0,w,c
  1931  002394  A0D8               	btfss	status,0,c
  1932  002396  EFCF  F011         	goto	u2111
  1933  00239A  EFD1  F011         	goto	u2110
  1934  00239E                     u2111:
  1935  00239E  EFD5  F011         	goto	l2595
  1936  0023A2                     u2110:
  1937  0023A2  5004               	movf	___lwmod@divisor^0,w,c
  1938  0023A4  5E02               	subwf	___lwmod@dividend^0,f,c
  1939  0023A6  5005               	movf	(___lwmod@divisor+1)^0,w,c
  1940  0023A8  5A03               	subwfb	(___lwmod@dividend+1)^0,f,c
  1941  0023AA                     l2595:
  1942  0023AA  90D8               	bcf	status,0,c
  1943  0023AC  3205               	rrcf	(___lwmod@divisor+1)^0,f,c
  1944  0023AE  3204               	rrcf	___lwmod@divisor^0,f,c
  1945  0023B0  2E06               	decfsz	___lwmod@counter^0,f,c
  1946  0023B2  EFC6  F011         	goto	l2591
  1947  0023B6                     l761:
  1948  0023B6  C002  F002         	movff	___lwmod@dividend,?___lwmod
  1949  0023BA  C003  F003         	movff	___lwmod@dividend+1,?___lwmod+1
  1950  0023BE  0012               	return		;funcret
  1951  0023C0                     __end_of___lwmod:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _Timer0_init *****************
  1955 ;; Defined at:
  1956 ;;		line 4 in file "timer.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text4
  1985  0026FA                     __ptext4:
  1986                           	callstack 0
  1987  0026FA                     _Timer0_init:
  1988                           	callstack 29
  1989  0026FA                     
  1990                           ;timer.c: 5:     T0CON1bits.T0CS=0b010;
  1991  0026FA  50D6               	movf	214,w,c	;volatile
  1992  0026FC  0B1F               	andlw	-225
  1993  0026FE  0940               	iorlw	64
  1994  002700  6ED6               	movwf	214,c	;volatile
  1995  002702                     
  1996                           ;timer.c: 6:     T0CON1bits.T0ASYNC=1;
  1997  002702  88D6               	bsf	214,4,c	;volatile
  1998                           
  1999                           ;timer.c: 7:     T0CON1bits.T0CKPS=0b1000;
  2000  002704  50D6               	movf	214,w,c	;volatile
  2001  002706  0BF0               	andlw	-16
  2002  002708  0908               	iorlw	8
  2003  00270A  6ED6               	movwf	214,c	;volatile
  2004  00270C                     
  2005                           ;timer.c: 12:     T0CON0bits.T016BIT=1;
  2006  00270C  88D5               	bsf	213,4,c	;volatile
  2007                           
  2008                           ;timer.c: 13:     TMR0H=3035>>8;
  2009  00270E  0E0B               	movlw	11
  2010  002710  6ED4               	movwf	212,c	;volatile
  2011                           
  2012                           ;timer.c: 14:     TMR0L=3035&0b11111111;
  2013  002712  0EDB               	movlw	219
  2014  002714  6ED3               	movwf	211,c	;volatile
  2015  002716                     
  2016                           ;timer.c: 15:     T0CON0bits.T0EN=1;
  2017  002716  8ED5               	bsf	213,7,c	;volatile
  2018  002718  0012               	return		;funcret
  2019  00271A                     __end_of_Timer0_init:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _LEDarray_disp_bin *****************
  2023 ;; Defined at:
  2024 ;;		line 27 in file "LEDarray.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  number          2    1[COMRAM] unsigned int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		None
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text5
  2053  00221E                     __ptext5:
  2054                           	callstack 0
  2055  00221E                     _LEDarray_disp_bin:
  2056                           	callstack 29
  2057  00221E                     
  2058                           ;LEDarray.c: 32:     if (number & 0b00001) {LATGbits.LATG0=1;} else {LATGbits.LATG0=0;}
  2059  00221E  A002               	btfss	LEDarray_disp_bin@number^0,0,c
  2060  002220  EF14  F011         	goto	u1981
  2061  002224  EF16  F011         	goto	u1980
  2062  002228                     u1981:
  2063  002228  EF19  F011         	goto	l57
  2064  00222C                     u1980:
  2065  00222C  807F               	bsf	127,0,c	;volatile
  2066  00222E  EF1A  F011         	goto	l58
  2067  002232                     l57:
  2068  002232  907F               	bcf	127,0,c	;volatile
  2069  002234                     l58:
  2070                           
  2071                           ;LEDarray.c: 33:     if (number & 0b00010) {LATGbits.LATG1=1;} else {LATGbits.LATG1=0;}
  2072  002234  A202               	btfss	LEDarray_disp_bin@number^0,1,c
  2073  002236  EF1F  F011         	goto	u1991
  2074  00223A  EF21  F011         	goto	u1990
  2075  00223E                     u1991:
  2076  00223E  EF24  F011         	goto	l59
  2077  002242                     u1990:
  2078  002242  827F               	bsf	127,1,c	;volatile
  2079  002244  EF25  F011         	goto	l60
  2080  002248                     l59:
  2081  002248  927F               	bcf	127,1,c	;volatile
  2082  00224A                     l60:
  2083                           
  2084                           ;LEDarray.c: 34:     if (number & 0b00100) {LATAbits.LATA2=1;} else {LATAbits.LATA2=0;}
  2085  00224A  A402               	btfss	LEDarray_disp_bin@number^0,2,c
  2086  00224C  EF2A  F011         	goto	u2001
  2087  002250  EF2C  F011         	goto	u2000
  2088  002254                     u2001:
  2089  002254  EF2F  F011         	goto	l61
  2090  002258                     u2000:
  2091  002258  8479               	bsf	121,2,c	;volatile
  2092  00225A  EF30  F011         	goto	l62
  2093  00225E                     l61:
  2094  00225E  9479               	bcf	121,2,c	;volatile
  2095  002260                     l62:
  2096                           
  2097                           ;LEDarray.c: 35:     if (number & 0b01000) {LATFbits.LATF6=1;} else {LATFbits.LATF6=0;}
  2098  002260  A602               	btfss	LEDarray_disp_bin@number^0,3,c
  2099  002262  EF35  F011         	goto	u2011
  2100  002266  EF37  F011         	goto	u2010
  2101  00226A                     u2011:
  2102  00226A  EF3A  F011         	goto	l63
  2103  00226E                     u2010:
  2104  00226E  8C7E               	bsf	126,6,c	;volatile
  2105  002270  EF3B  F011         	goto	l64
  2106  002274                     l63:
  2107  002274  9C7E               	bcf	126,6,c	;volatile
  2108  002276                     l64:
  2109                           
  2110                           ;LEDarray.c: 36:     if (number & 0b10000) {LATAbits.LATA4=1;} else {LATAbits.LATA4=0;}
  2111  002276  A802               	btfss	LEDarray_disp_bin@number^0,4,c
  2112  002278  EF40  F011         	goto	u2021
  2113  00227C  EF42  F011         	goto	u2020
  2114  002280                     u2021:
  2115  002280  EF45  F011         	goto	l65
  2116  002284                     u2020:
  2117  002284  8879               	bsf	121,4,c	;volatile
  2118  002286  EF46  F011         	goto	l67
  2119  00228A                     l65:
  2120  00228A  9879               	bcf	121,4,c	;volatile
  2121  00228C                     l67:
  2122  00228C  0012               	return		;funcret
  2123  00228E                     __end_of_LEDarray_disp_bin:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _LED_init *****************
  2127 ;; Defined at:
  2128 ;;		line 4 in file "LEDarray.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		None
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text6
  2157  0026D8                     __ptext6:
  2158                           	callstack 0
  2159  0026D8                     _LED_init:
  2160                           	callstack 29
  2161  0026D8                     
  2162                           ;LEDarray.c: 6:     TRISDbits.TRISD7 = 0;
  2163  0026D8  9E84               	bcf	132,7,c	;volatile
  2164                           
  2165                           ;LEDarray.c: 8:     TRISAbits.TRISA5 = 0;
  2166  0026DA  9A81               	bcf	129,5,c	;volatile
  2167                           
  2168                           ;LEDarray.c: 9:     TRISHbits.TRISH3 = 0;
  2169  0026DC  9688               	bcf	136,3,c	;volatile
  2170                           
  2171                           ;LEDarray.c: 10:     TRISGbits.TRISG0 = 0;
  2172  0026DE  9087               	bcf	135,0,c	;volatile
  2173                           
  2174                           ;LEDarray.c: 11:     TRISGbits.TRISG1 = 0;
  2175  0026E0  9287               	bcf	135,1,c	;volatile
  2176                           
  2177                           ;LEDarray.c: 12:     TRISAbits.TRISA2 = 0;
  2178  0026E2  9481               	bcf	129,2,c	;volatile
  2179                           
  2180                           ;LEDarray.c: 13:     TRISFbits.TRISF6 = 0;
  2181  0026E4  9C86               	bcf	134,6,c	;volatile
  2182                           
  2183                           ;LEDarray.c: 14:     TRISAbits.TRISA4 = 0;
  2184  0026E6  9881               	bcf	129,4,c	;volatile
  2185                           
  2186                           ;LEDarray.c: 17:     LATDbits.LATD7 = 0;
  2187  0026E8  9E7C               	bcf	124,7,c	;volatile
  2188                           
  2189                           ;LEDarray.c: 18:     LATHbits.LATH3 = 0;
  2190  0026EA  9680               	bcf	128,3,c	;volatile
  2191                           
  2192                           ;LEDarray.c: 19:     LATAbits.LATA5 = 0;
  2193  0026EC  9A79               	bcf	121,5,c	;volatile
  2194                           
  2195                           ;LEDarray.c: 20:     LATGbits.LATG0 = 0;
  2196  0026EE  907F               	bcf	127,0,c	;volatile
  2197                           
  2198                           ;LEDarray.c: 21:     LATGbits.LATG1 = 0;
  2199  0026F0  927F               	bcf	127,1,c	;volatile
  2200                           
  2201                           ;LEDarray.c: 22:     LATAbits.LATA2 = 0;
  2202  0026F2  9479               	bcf	121,2,c	;volatile
  2203                           
  2204                           ;LEDarray.c: 23:     LATFbits.LATF6 = 0;
  2205  0026F4  9C7E               	bcf	126,6,c	;volatile
  2206                           
  2207                           ;LEDarray.c: 24:     LATAbits.LATA4 = 0;
  2208  0026F6  9879               	bcf	121,4,c	;volatile
  2209  0026F8  0012               	return		;funcret
  2210  0026FA                     __end_of_LED_init:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _LDR_val *****************
  2214 ;; Defined at:
  2215 ;;		line 23 in file "LDR.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  temp            2    3[COMRAM] unsigned int 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2    1[COMRAM] unsigned int 
  2222 ;; Registers used:
  2223 ;;		None
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;Total ram usage:        4 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text7
  2244  00271A                     __ptext7:
  2245                           	callstack 0
  2246  00271A                     _LDR_val:
  2247                           	callstack 29
  2248  00271A                     
  2249                           ;LDR.c: 24:     unsigned int temp;;LDR.c: 25:     ADCON0bits.GO= 1;
  2250  00271A  8060               	bsf	96,0,c	;volatile
  2251  00271C                     l20:
  2252  00271C  B060               	btfsc	96,0,c	;volatile
  2253  00271E  EF93  F013         	goto	u1931
  2254  002722  EF95  F013         	goto	u1930
  2255  002726                     u1931:
  2256  002726  EF8E  F013         	goto	l20
  2257  00272A                     u1930:
  2258  00272A                     
  2259                           ;LDR.c: 30:     temp = ADRESH;
  2260  00272A  CF64 F004          	movff	3940,LDR_val@temp	;volatile
  2261  00272E  6A05               	clrf	(LDR_val@temp+1)^0,c
  2262                           
  2263                           ;LDR.c: 32:     return temp ;
  2264  002730  C004  F002         	movff	LDR_val@temp,?_LDR_val
  2265  002734  C005  F003         	movff	LDR_val@temp+1,?_LDR_val+1
  2266  002738  0012               	return		;funcret
  2267  00273A                     __end_of_LDR_val:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _LDR_thres *****************
  2271 ;; Defined at:
  2272 ;;		line 35 in file "LDR.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  val             1    wreg     unsigned char 
  2275 ;;  hour            1    5[COMRAM] unsigned char 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  val             1    6[COMRAM] unsigned char 
  2278 ;;  thres           2    0        unsigned int 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2288 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;Total ram usage:        2 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text8
  2303  0023C0                     __ptext8:
  2304                           	callstack 0
  2305  0023C0                     _LDR_thres:
  2306                           	callstack 29
  2307                           
  2308                           ;incstack = 0
  2309                           ;LDR_thres@val stored from wreg
  2310  0023C0  6E07               	movwf	LDR_thres@val^0,c
  2311  0023C2                     
  2312                           ;LDR.c: 37:     if (hour>=1 && hour<=5) {
  2313  0023C2  5006               	movf	LDR_thres@hour^0,w,c
  2314  0023C4  B4D8               	btfsc	status,2,c
  2315  0023C6  EFE7  F011         	goto	u1941
  2316  0023CA  EFE9  F011         	goto	u1940
  2317  0023CE                     u1941:
  2318  0023CE  EFF4  F011         	goto	l2459
  2319  0023D2                     u1940:
  2320  0023D2  0E06               	movlw	6
  2321  0023D4  6006               	cpfslt	LDR_thres@hour^0,c
  2322  0023D6  EFEF  F011         	goto	u1951
  2323  0023DA  EFF1  F011         	goto	u1950
  2324  0023DE                     u1951:
  2325  0023DE  EFF4  F011         	goto	l2459
  2326  0023E2                     u1950:
  2327  0023E2                     
  2328                           ;LDR.c: 38:             LATDbits.LATD7 = 0;
  2329  0023E2  9E7C               	bcf	124,7,c	;volatile
  2330                           
  2331                           ;LDR.c: 39:         }
  2332  0023E4  EF08  F012         	goto	l31
  2333  0023E8                     l2459:
  2334  0023E8  0E96               	movlw	150
  2335  0023EA  6007               	cpfslt	LDR_thres@val^0,c
  2336  0023EC  EFFA  F011         	goto	u1961
  2337  0023F0  EFFC  F011         	goto	u1960
  2338  0023F4                     u1961:
  2339  0023F4  EFFF  F011         	goto	l2463
  2340  0023F8                     u1960:
  2341  0023F8                     
  2342                           ;LDR.c: 41:             LATDbits.LATD7 = 0;
  2343  0023F8  9E7C               	bcf	124,7,c	;volatile
  2344                           
  2345                           ;LDR.c: 42:         }
  2346  0023FA  EF08  F012         	goto	l31
  2347  0023FE                     l2463:
  2348  0023FE  0E96               	movlw	150
  2349  002400  6407               	cpfsgt	LDR_thres@val^0,c
  2350  002402  EF05  F012         	goto	u1971
  2351  002406  EF07  F012         	goto	u1970
  2352  00240A                     u1971:
  2353  00240A  EF08  F012         	goto	l31
  2354  00240E                     u1970:
  2355  00240E                     
  2356                           ;LDR.c: 44:             LATDbits.LATD7 = 1;
  2357  00240E  8E7C               	bsf	124,7,c	;volatile
  2358  002410                     l31:
  2359  002410  0012               	return		;funcret
  2360  002412                     __end_of_LDR_thres:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _LDR_init *****************
  2364 ;; Defined at:
  2365 ;;		line 10 in file "LDR.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text9
  2394  00273A                     __ptext9:
  2395                           	callstack 0
  2396  00273A                     _LDR_init:
  2397                           	callstack 29
  2398  00273A                     
  2399                           ;LDR.c: 11:     TRISAbits.TRISA3=1;
  2400  00273A  8681               	bsf	129,3,c	;volatile
  2401                           
  2402                           ;LDR.c: 12:     ANSELAbits.ANSELA3=1;
  2403  00273C  010E               	movlb	14	; () banked
  2404  00273E  8792               	bsf	146,3,b	;volatile
  2405                           
  2406                           ;LDR.c: 15:     ADREFbits.ADNREF = 0;
  2407  002740  010F               	movlb	15	; () banked
  2408  002742  9958               	bcf	88,4,b	;volatile
  2409  002744                     
  2410                           ; BSR set to: 15
  2411                           ;LDR.c: 16:     ADREFbits.ADPREF = 0b00;
  2412  002744  0EFC               	movlw	-4
  2413  002746  1758               	andwf	88,f,b	;volatile
  2414                           
  2415                           ;LDR.c: 17:     ADPCH = 0b11 ;
  2416  002748  0E03               	movlw	3
  2417  00274A  6F5F               	movwf	95,b	;volatile
  2418  00274C                     
  2419                           ; BSR set to: 15
  2420                           ;LDR.c: 18:     ADCON0bits.ADFM = 0;
  2421  00274C  9460               	bcf	96,2,c	;volatile
  2422  00274E                     
  2423                           ; BSR set to: 15
  2424                           ;LDR.c: 19:     ADCON0bits.ADCS = 1;
  2425  00274E  8860               	bsf	96,4,c	;volatile
  2426  002750                     
  2427                           ; BSR set to: 15
  2428                           ;LDR.c: 20:     ADCON0bits.ADON = 1;
  2429  002750  8E60               	bsf	96,7,c	;volatile
  2430  002752                     
  2431                           ; BSR set to: 15
  2432  002752  0012               	return		;funcret
  2433  002754                     __end_of_LDR_init:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _LCD_setlines *****************
  2437 ;; Defined at:
  2438 ;;		line 166 in file "LCD.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  cname           1    wreg     unsigned char 
  2441 ;;  ch              1   27[BANK0 ] unsigned char 
  2442 ;;  cmin            1   28[BANK0 ] char 
  2443 ;;  cs              1   29[BANK0 ] char 
  2444 ;;  cd              1   30[BANK0 ] char 
  2445 ;;  cm              1   31[BANK0 ] unsigned char 
  2446 ;;  cy              2   32[BANK0 ] unsigned int 
  2447 ;;  cBST            1   34[BANK0 ] unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  cname           1   77[BANK0 ] unsigned char 
  2450 ;;  line2          20   57[BANK0 ] unsigned char [20]
  2451 ;;  line1          20   37[BANK0 ] unsigned char [20]
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:       51 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 9
  2468 ;; This function calls:
  2469 ;;		_LCD_sendbyte
  2470 ;;		_LCD_sendstring
  2471 ;;		_LCD_setline
  2472 ;;		_sprintf
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text10
  2479  001DAA                     __ptext10:
  2480                           	callstack 0
  2481  001DAA                     _LCD_setlines:
  2482                           	callstack 21
  2483                           
  2484                           ; BSR set to: 15
  2485                           ;incstack = 0
  2486                           ;LCD_setlines@cname stored from wreg
  2487  001DAA  0100               	movlb	0	; () banked
  2488  001DAC  6FAD               	movwf	LCD_setlines@cname& (0+255),b
  2489  001DAE                     
  2490                           ;LCD.c: 167:    char line1[20];;LCD.c: 168:    char line2[20];;LCD.c: 169:     sprintf(l
      +                          ine1,"%d   %d: %d: %d" ,cname,ch,cmin,cs);
  2491  001DAE  0E85               	movlw	low LCD_setlines@line1
  2492  001DB0  0100               	movlb	0	; () banked
  2493  001DB2  6F62               	movwf	sprintf@s& (0+255),b
  2494  001DB4  0E00               	movlw	high LCD_setlines@line1
  2495  001DB6  6F63               	movwf	(sprintf@s+1)& (0+255),b
  2496  001DB8  0E01               	movlw	low STR_2
  2497  001DBA  6F64               	movwf	sprintf@fmt& (0+255),b
  2498  001DBC  0E0E               	movlw	high STR_2
  2499  001DBE  6F65               	movwf	(sprintf@fmt+1)& (0+255),b
  2500  001DC0  C0AD  F066         	movff	LCD_setlines@cname,?_sprintf+4
  2501  001DC4  6B67               	clrf	(?_sprintf+5)& (0+255),b
  2502  001DC6  C07B  F068         	movff	LCD_setlines@ch,?_sprintf+6
  2503  001DCA  6B69               	clrf	(?_sprintf+7)& (0+255),b
  2504  001DCC  517C               	movf	LCD_setlines@cmin& (0+255),w,b
  2505  001DCE  6F6A               	movwf	(?_sprintf+8)& (0+255),b
  2506  001DD0  6B6B               	clrf	(?_sprintf+9)& (0+255),b
  2507  001DD2  BF6A               	btfsc	(?_sprintf+8)& (0+255),7,b
  2508  001DD4  076B               	decf	(?_sprintf+9)& (0+255),f,b
  2509  001DD6  517D               	movf	LCD_setlines@cs& (0+255),w,b
  2510  001DD8  6F6C               	movwf	(?_sprintf+10)& (0+255),b
  2511  001DDA  6B6D               	clrf	(?_sprintf+11)& (0+255),b
  2512  001DDC  BF6C               	btfsc	(?_sprintf+10)& (0+255),7,b
  2513  001DDE  076D               	decf	(?_sprintf+11)& (0+255),f,b
  2514  001DE0  EC09  F012         	call	_sprintf	;wreg free
  2515                           
  2516                           ;LCD.c: 170:     sprintf(line2,"%d %d %d %d",cd,cm,cy,cBST);
  2517  001DE4  0E99               	movlw	low LCD_setlines@line2
  2518  001DE6  0100               	movlb	0	; () banked
  2519  001DE8  6F62               	movwf	sprintf@s& (0+255),b
  2520  001DEA  0E00               	movlw	high LCD_setlines@line2
  2521  001DEC  6F63               	movwf	(sprintf@s+1)& (0+255),b
  2522  001DEE  0E11               	movlw	low STR_3
  2523  001DF0  6F64               	movwf	sprintf@fmt& (0+255),b
  2524  001DF2  0E0E               	movlw	high STR_3
  2525  001DF4  6F65               	movwf	(sprintf@fmt+1)& (0+255),b
  2526  001DF6  517E               	movf	LCD_setlines@cd& (0+255),w,b
  2527  001DF8  6F66               	movwf	(?_sprintf+4)& (0+255),b
  2528  001DFA  6B67               	clrf	(?_sprintf+5)& (0+255),b
  2529  001DFC  BF66               	btfsc	(?_sprintf+4)& (0+255),7,b
  2530  001DFE  0767               	decf	(?_sprintf+5)& (0+255),f,b
  2531  001E00  C07F  F068         	movff	LCD_setlines@cm,?_sprintf+6
  2532  001E04  6B69               	clrf	(?_sprintf+7)& (0+255),b
  2533  001E06  C080  F06A         	movff	LCD_setlines@cy,?_sprintf+8
  2534  001E0A  C081  F06B         	movff	LCD_setlines@cy+1,?_sprintf+9
  2535  001E0E  C082  F06C         	movff	LCD_setlines@cBST,?_sprintf+10
  2536  001E12  6B6D               	clrf	(?_sprintf+11)& (0+255),b
  2537  001E14  EC09  F012         	call	_sprintf	;wreg free
  2538  001E18                     
  2539                           ;LCD.c: 171:     LCD_sendbyte(0b00001100,0);
  2540  001E18  0E00               	movlw	0
  2541  001E1A  6E03               	movwf	LCD_sendbyte@type^0,c
  2542  001E1C  0E0C               	movlw	12
  2543  001E1E  EC2F  F013         	call	_LCD_sendbyte
  2544  001E22                     
  2545                           ;LCD.c: 172:     LCD_sendstring(line1);
  2546  001E22  0E85               	movlw	low LCD_setlines@line1
  2547  001E24  6E07               	movwf	LCD_sendstring@string^0,c
  2548  001E26  0E00               	movlw	high LCD_setlines@line1
  2549  001E28  6E08               	movwf	(LCD_sendstring@string+1)^0,c
  2550  001E2A  EC15  F013         	call	_LCD_sendstring	;wreg free
  2551  001E2E                     
  2552                           ;LCD.c: 173:     LCD_setline(2);
  2553  001E2E  0E02               	movlw	2
  2554  001E30  ECC1  F012         	call	_LCD_setline
  2555  001E34                     
  2556                           ;LCD.c: 174:     LCD_sendstring(line2);
  2557  001E34  0E99               	movlw	low LCD_setlines@line2
  2558  001E36  6E07               	movwf	LCD_sendstring@string^0,c
  2559  001E38  0E00               	movlw	high LCD_setlines@line2
  2560  001E3A  6E08               	movwf	(LCD_sendstring@string+1)^0,c
  2561  001E3C  EC15  F013         	call	_LCD_sendstring	;wreg free
  2562  001E40                     
  2563                           ;LCD.c: 175:     _delay((unsigned long)((20)*(64000000/4000.0)));
  2564  001E40  0E02               	movlw	2
  2565  001E42  0100               	movlb	0	; () banked
  2566  001E44  6F84               	movwf	(??_LCD_setlines+1)& (0+255),b
  2567  001E46  0EA0               	movlw	160
  2568  001E48  6F83               	movwf	??_LCD_setlines& (0+255),b
  2569  001E4A  0E92               	movlw	146
  2570  001E4C                     u3257:
  2571  001E4C  2EE8               	decfsz	wreg,f,c
  2572  001E4E  D7FE               	bra	u3257
  2573  001E50  2F83               	decfsz	??_LCD_setlines& (0+255),f,b
  2574  001E52  D7FC               	bra	u3257
  2575  001E54  2F84               	decfsz	(??_LCD_setlines+1)& (0+255),f,b
  2576  001E56  D7FA               	bra	u3257
  2577  001E58  F000               	nop	
  2578  001E5A                     
  2579                           ;LCD.c: 176:     LCD_sendbyte(0b00000001,0);
  2580  001E5A  0E00               	movlw	0
  2581  001E5C  6E03               	movwf	LCD_sendbyte@type^0,c
  2582  001E5E  0E01               	movlw	1
  2583  001E60  EC2F  F013         	call	_LCD_sendbyte
  2584  001E64                     
  2585                           ;LCD.c: 177:    _delay((unsigned long)((2)*(64000000/4000.0)));
  2586  001E64  0E2A               	movlw	42
  2587  001E66  0100               	movlb	0	; () banked
  2588  001E68  6F83               	movwf	??_LCD_setlines& (0+255),b
  2589  001E6A  0E8D               	movlw	141
  2590  001E6C                     u3267:
  2591  001E6C  2EE8               	decfsz	wreg,f,c
  2592  001E6E  D7FE               	bra	u3267
  2593  001E70  2F83               	decfsz	??_LCD_setlines& (0+255),f,b
  2594  001E72  D7FC               	bra	u3267
  2595  001E74  D000               	nop2	
  2596  001E76  0012               	return		;funcret
  2597  001E78                     __end_of_LCD_setlines:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _sprintf *****************
  2601 ;; Defined at:
  2602 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  s               2    2[BANK0 ] PTR unsigned char 
  2605 ;;		 -> LCD_setlines@line2(20), LCD_setlines@line1(20), 
  2606 ;;  fmt             2    4[BANK0 ] PTR const unsigned char 
  2607 ;;		 -> STR_3(12), STR_2(16), STR_1(8), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  f              11   16[BANK0 ] struct _IO_FILE
  2610 ;;  ap              2   14[BANK0 ] PTR void [1]
  2611 ;;		 -> ?_sprintf(2), 
  2612 ;;  ret             2    0        int 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    2[BANK0 ] int 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2622 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;Total ram usage:       25 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 8
  2629 ;; This function calls:
  2630 ;;		_vfprintf
  2631 ;; This function is called by:
  2632 ;;		_LCD_setlines
  2633 ;;		_ADC2String
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text11
  2638  002412                     __ptext11:
  2639                           	callstack 0
  2640  002412                     _sprintf:
  2641                           	callstack 21
  2642  002412  0E66               	movlw	low (?_sprintf+4)
  2643  002414  0100               	movlb	0	; () banked
  2644  002416  6F6E               	movwf	sprintf@ap& (0+255),b
  2645  002418  0E00               	movlw	high (?_sprintf+4)
  2646  00241A  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  2647  00241C  C062  F070         	movff	sprintf@s,sprintf@f
  2648  002420  C063  F071         	movff	sprintf@s+1,sprintf@f+1
  2649  002424                     
  2650                           ; BSR set to: 0
  2651  002424  0E00               	movlw	0
  2652  002426  6F74               	movwf	(sprintf@f+4)& (0+255),b
  2653  002428  0E00               	movlw	0
  2654  00242A  6F73               	movwf	(sprintf@f+3)& (0+255),b
  2655  00242C                     
  2656                           ; BSR set to: 0
  2657  00242C  0E00               	movlw	0
  2658  00242E  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  2659  002430  0E00               	movlw	0
  2660  002432  6F79               	movwf	(sprintf@f+9)& (0+255),b
  2661  002434                     
  2662                           ; BSR set to: 0
  2663  002434  0E70               	movlw	low sprintf@f
  2664  002436  6E55               	movwf	vfprintf@fp^0,c
  2665  002438  0E00               	movlw	high sprintf@f
  2666  00243A  6E56               	movwf	(vfprintf@fp+1)^0,c
  2667  00243C  C064  F057         	movff	sprintf@fmt,vfprintf@fmt
  2668  002440  C065  F058         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2669  002444  0E6E               	movlw	low sprintf@ap
  2670  002446  6E59               	movwf	vfprintf@ap^0,c
  2671  002448  0E00               	movlw	high sprintf@ap
  2672  00244A  6E5A               	movwf	(vfprintf@ap+1)^0,c
  2673  00244C  EC7B  F011         	call	_vfprintf	;wreg free
  2674  002450  0100               	movlb	0	; () banked
  2675  002452  5173               	movf	(sprintf@f+3)& (0+255),w,b
  2676  002454  2562               	addwf	sprintf@s& (0+255),w,b
  2677  002456  6ED9               	movwf	fsr2l,c
  2678  002458  5174               	movf	(sprintf@f+4)& (0+255),w,b
  2679  00245A  2163               	addwfc	(sprintf@s+1)& (0+255),w,b
  2680  00245C  6EDA               	movwf	fsr2h,c
  2681  00245E  0E00               	movlw	0
  2682  002460  6EDF               	movwf	indf2,c
  2683  002462                     
  2684                           ; BSR set to: 0
  2685  002462  0012               	return		;funcret
  2686  002464                     __end_of_sprintf:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _vfprintf *****************
  2690 ;; Defined at:
  2691 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2694 ;;		 -> sprintf@f(11), 
  2695 ;;  fmt             2   86[COMRAM] PTR const unsigned char 
  2696 ;;		 -> STR_3(12), STR_2(16), STR_1(8), 
  2697 ;;  ap              2   88[COMRAM] PTR PTR void 
  2698 ;;		 -> sprintf@ap(2), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  2701 ;;		 -> STR_3(12), STR_2(16), STR_1(8), 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2   84[COMRAM] int 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2711 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;Total ram usage:        8 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 7
  2718 ;; This function calls:
  2719 ;;		_vfpfcnvrt
  2720 ;; This function is called by:
  2721 ;;		_sprintf
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text12
  2726  0022F6                     __ptext12:
  2727                           	callstack 0
  2728  0022F6                     _vfprintf:
  2729                           	callstack 21
  2730  0022F6                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2732  0022F6  C057  F060         	movff	vfprintf@fmt,vfprintf@cfmt
  2733  0022FA  C058  F061         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2734  0022FE                     
  2735                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2736  0022FE  0E00               	movlw	0
  2737  002300  0100               	movlb	0	; () banked
  2738  002302  6FF6               	movwf	(_nout+1)& (0+255),b
  2739  002304  0E00               	movlw	0
  2740  002306  6FF5               	movwf	_nout& (0+255),b
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2743  002308  EF99  F011         	goto	l3169
  2744  00230C                     l3167:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2748  00230C  C055  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  2749  002310  C056  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2750  002314  0E60               	movlw	low vfprintf@cfmt
  2751  002316  6E43               	movwf	vfpfcnvrt@fmt^0,c
  2752  002318  0E00               	movlw	high vfprintf@cfmt
  2753  00231A  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2754  00231C  C059  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  2755  002320  C05A  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2756  002324  EC81  F009         	call	_vfpfcnvrt	;wreg free
  2757  002328  5041               	movf	?_vfpfcnvrt^0,w,c
  2758  00232A  0100               	movlb	0	; () banked
  2759  00232C  27F5               	addwf	_nout& (0+255),f,b
  2760  00232E  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  2761  002330  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2762  002332                     l3169:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2766  002332  C060  FFF6         	movff	vfprintf@cfmt,tblptrl
  2767  002336  C061  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2768  00233A                     	if	0	;tblptru may be non-zero
  2769  00233A                     	endif
  2770  00233A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2771  00233A  0E00               	movlw	low (__mediumconst shr (0+16))
  2772  00233C  6EF8               	movwf	tblptru,c
  2773  00233E                     	endif
  2774  00233E  0008               	tblrd		*
  2775  002340  50F5               	movf	tablat,w,c
  2776  002342  0900               	iorlw	0
  2777  002344  A4D8               	btfss	status,2,c
  2778  002346  EFA7  F011         	goto	u2961
  2779  00234A  EFA9  F011         	goto	u2960
  2780  00234E                     u2961:
  2781  00234E  EF86  F011         	goto	l3167
  2782  002352                     u2960:
  2783  002352                     
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2786  002352  C0F5  F055         	movff	_nout,?_vfprintf
  2787  002356  C0F6  F056         	movff	_nout+1,?_vfprintf+1
  2788  00235A                     
  2789                           ; BSR set to: 0
  2790  00235A  0012               	return		;funcret
  2791  00235C                     __end_of_vfprintf:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _vfpfcnvrt *****************
  2795 ;; Defined at:
  2796 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  2799 ;;		 -> sprintf@f(11), 
  2800 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  2801 ;;		 -> vfprintf@cfmt(2), 
  2802 ;;  ap              2   68[COMRAM] PTR PTR void 
  2803 ;;		 -> sprintf@ap(2), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  ll              8   74[COMRAM] long long 
  2806 ;;  llu             8    0        unsigned long long 
  2807 ;;  f               4    0        unsigned long long 
  2808 ;;  vp              3    0        PTR void 
  2809 ;;  ct              3    0        unsigned char [3]
  2810 ;;  cp              3    0        PTR unsigned char 
  2811 ;;  done            2   82[COMRAM] int 
  2812 ;;  i               2    0        int 
  2813 ;;  c               1    0        unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2   64[COMRAM] int 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;Total ram usage:       20 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 6
  2830 ;; This function calls:
  2831 ;;		_atoi
  2832 ;;		_dtoa
  2833 ;;		_fputc
  2834 ;;		_isdigit
  2835 ;; This function is called by:
  2836 ;;		_vfprintf
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text13
  2841  001302                     __ptext13:
  2842                           	callstack 0
  2843  001302                     _vfpfcnvrt:
  2844                           	callstack 21
  2845  001302                     
  2846                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2847  001302  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2848  001306  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2849  00130A  CFDE FFF6          	movff	postinc2,tblptrl
  2850  00130E  CFDD FFF7          	movff	postdec2,tblptrh
  2851  001312                     	if	0	;tblptru may be non-zero
  2852  001312                     	endif
  2853  001312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2854  001312  0E00               	movlw	low (__mediumconst shr (0+16))
  2855  001314  6EF8               	movwf	tblptru,c
  2856  001316                     	endif
  2857  001316  0008               	tblrd		*
  2858  001318  50F5               	movf	tablat,w,c
  2859  00131A  0A25               	xorlw	37
  2860  00131C  A4D8               	btfss	status,2,c
  2861  00131E  EF93  F009         	goto	u2871
  2862  001322  EF95  F009         	goto	u2870
  2863  001326                     u2871:
  2864  001326  EF1C  F00B         	goto	l3151
  2865  00132A                     u2870:
  2866  00132A                     
  2867                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2868  00132A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2869  00132E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2870  001332  2ADE               	incf	postinc2,f,c
  2871  001334  0E00               	movlw	0
  2872  001336  22DD               	addwfc	postdec2,f,c
  2873  001338                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2875  001338  0E00               	movlw	0
  2876  00133A  0100               	movlb	0	; () banked
  2877  00133C  6FF8               	movwf	(_width+1)& (0+255),b
  2878  00133E  0E00               	movlw	0
  2879  001340  6FF7               	movwf	_width& (0+255),b
  2880  001342  C0F7  F05B         	movff	_width,_flags
  2881  001346  C0F8  F05C         	movff	_width+1,_flags+1
  2882  00134A                     
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2885  00134A  69F9               	setf	_prec& (0+255),b
  2886  00134C  69FA               	setf	(_prec+1)& (0+255),b
  2887  00134E                     
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2890  00134E  0E00               	movlw	0
  2891  001350  6E54               	movwf	(vfpfcnvrt@done+1)^0,c
  2892  001352  0E00               	movlw	0
  2893  001354  6E53               	movwf	vfpfcnvrt@done^0,c
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2896  001356  EFF5  F009         	goto	l3105
  2897  00135A                     l3079:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2900  00135A  805B               	bsf	_flags^0,0,c
  2901  00135C                     l3081:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2904  00135C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2905  001360  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2906  001364  2ADE               	incf	postinc2,f,c
  2907  001366  0E00               	movlw	0
  2908  001368  22DD               	addwfc	postdec2,f,c
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2911  00136A  EFF5  F009         	goto	l3105
  2912  00136E                     l3083:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2915  00136E  825B               	bsf	_flags^0,1,c
  2916  001370  EFAE  F009         	goto	l3081
  2917  001374                     l3087:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2920  001374  845B               	bsf	_flags^0,2,c
  2921  001376  EFAE  F009         	goto	l3081
  2922  00137A                     l3091:
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2925  00137A  865B               	bsf	_flags^0,3,c
  2926  00137C  EFAE  F009         	goto	l3081
  2927  001380                     l3095:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2930  001380  885B               	bsf	_flags^0,4,c
  2931  001382  EFAE  F009         	goto	l3081
  2932  001386                     l3099:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2935  001386  0E00               	movlw	0
  2936  001388  6E54               	movwf	(vfpfcnvrt@done+1)^0,c
  2937  00138A  0E01               	movlw	1
  2938  00138C  6E53               	movwf	vfpfcnvrt@done^0,c
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2941  00138E  EFF5  F009         	goto	l3105
  2942  001392                     l3103:
  2943  001392  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2944  001396  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2945  00139A  CFDE FFF6          	movff	postinc2,tblptrl
  2946  00139E  CFDD FFF7          	movff	postdec2,tblptrh
  2947  0013A2                     	if	0	;tblptru may be non-zero
  2948  0013A2                     	endif
  2949  0013A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2950  0013A2  0E00               	movlw	low (__mediumconst shr (0+16))
  2951  0013A4  6EF8               	movwf	tblptru,c
  2952  0013A6                     	endif
  2953  0013A6  0008               	tblrd		*
  2954  0013A8  50F5               	movf	tablat,w,c
  2955  0013AA  6E47               	movwf	??_vfpfcnvrt^0,c
  2956  0013AC  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  2957                           
  2958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2959                           ; Switch size 1, requested type "simple"
  2960                           ; Number of cases is 1, Range of values is 0 to 0
  2961                           ; switch strategies available:
  2962                           ; Name         Instructions Cycles
  2963                           ; simple_byte            4     3 (average)
  2964                           ;	Chosen strategy is simple_byte
  2965  0013AE  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  2966  0013B0  0A00               	xorlw	0	; case 0
  2967  0013B2  B4D8               	btfsc	status,2,c
  2968  0013B4  EFDE  F009         	goto	l3411
  2969  0013B8  EFC3  F009         	goto	l3099
  2970  0013BC                     l3411:
  2971                           
  2972                           ; Switch size 1, requested type "simple"
  2973                           ; Number of cases is 5, Range of values is 32 to 48
  2974                           ; switch strategies available:
  2975                           ; Name         Instructions Cycles
  2976                           ; simple_byte           16     9 (average)
  2977                           ;	Chosen strategy is simple_byte
  2978  0013BC  5047               	movf	??_vfpfcnvrt^0,w,c
  2979  0013BE  0A20               	xorlw	32	; case 32
  2980  0013C0  B4D8               	btfsc	status,2,c
  2981  0013C2  EFBD  F009         	goto	l3091
  2982  0013C6  0A03               	xorlw	3	; case 35
  2983  0013C8  B4D8               	btfsc	status,2,c
  2984  0013CA  EFC0  F009         	goto	l3095
  2985  0013CE  0A08               	xorlw	8	; case 43
  2986  0013D0  B4D8               	btfsc	status,2,c
  2987  0013D2  EFBA  F009         	goto	l3087
  2988  0013D6  0A06               	xorlw	6	; case 45
  2989  0013D8  B4D8               	btfsc	status,2,c
  2990  0013DA  EFAD  F009         	goto	l3079
  2991  0013DE  0A1D               	xorlw	29	; case 48
  2992  0013E0  B4D8               	btfsc	status,2,c
  2993  0013E2  EFB7  F009         	goto	l3083
  2994  0013E6  EFC3  F009         	goto	l3099
  2995  0013EA                     l3105:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2998  0013EA  5053               	movf	vfpfcnvrt@done^0,w,c
  2999  0013EC  1054               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3000  0013EE  B4D8               	btfsc	status,2,c
  3001  0013F0  EFFC  F009         	goto	u2881
  3002  0013F4  EFFE  F009         	goto	u2880
  3003  0013F8                     u2881:
  3004  0013F8  EFC9  F009         	goto	l3103
  3005  0013FC                     u2880:
  3006  0013FC                     
  3007                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3008  0013FC  A05B               	btfss	_flags^0,0,c
  3009  0013FE  EF03  F00A         	goto	u2891
  3010  001402  EF05  F00A         	goto	u2890
  3011  001406                     u2891:
  3012  001406  EF06  F00A         	goto	l3109
  3013  00140A                     u2890:
  3014  00140A                     
  3015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3016  00140A  925B               	bcf	_flags^0,1,c
  3017  00140C                     l3109:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  3020  00140C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3021  001410  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3022  001414  CFDE FFF6          	movff	postinc2,tblptrl
  3023  001418  CFDD FFF7          	movff	postdec2,tblptrh
  3024  00141C                     	if	0	;tblptru may be non-zero
  3025  00141C                     	endif
  3026  00141C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3027  00141C  0E00               	movlw	low (__mediumconst shr (0+16))
  3028  00141E  6EF8               	movwf	tblptru,c
  3029  001420                     	endif
  3030  001420  0008               	tblrd		*
  3031  001422  50F5               	movf	tablat,w,c
  3032  001424  0A2A               	xorlw	42
  3033  001426  A4D8               	btfss	status,2,c
  3034  001428  EF18  F00A         	goto	u2901
  3035  00142C  EF1A  F00A         	goto	u2900
  3036  001430                     u2901:
  3037  001430  EF44  F00A         	goto	l3117
  3038  001434                     u2900:
  3039  001434                     
  3040                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  3041  001434  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3042  001438  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3043  00143C  2ADE               	incf	postinc2,f,c
  3044  00143E  0E00               	movlw	0
  3045  001440  22DD               	addwfc	postdec2,f,c
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3048  001442  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3049  001446  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3050  00144A  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3051  00144E  0E02               	movlw	2
  3052  001450  26DE               	addwf	postinc2,f,c
  3053  001452  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3054  001456  0E00               	movlw	0
  3055  001458  22DD               	addwfc	postdec2,f,c
  3056  00145A  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3057  00145E  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3058  001462  CFDE F0F7          	movff	postinc2,_width
  3059  001466  CFDD F0F8          	movff	postdec2,_width+1
  3060  00146A                     
  3061                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  3062  00146A  0100               	movlb	0	; () banked
  3063  00146C  BFF8               	btfsc	(_width+1)& (0+255),7,b
  3064  00146E  EF3D  F00A         	goto	u2910
  3065  001472  EF3B  F00A         	goto	u2911
  3066  001476                     u2911:
  3067  001476  EF7C  F00A         	goto	l3125
  3068  00147A                     u2910:
  3069  00147A                     
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  3072  00147A  805B               	bsf	_flags^0,0,c
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  3075  00147C  6DF7               	negf	_width& (0+255),b
  3076  00147E  1FF8               	comf	(_width+1)& (0+255),f,b
  3077  001480  B0D8               	btfsc	status,0,c
  3078  001482  2BF8               	incf	(_width+1)& (0+255),f,b
  3079  001484  EF7C  F00A         	goto	l3125
  3080  001488                     l3117:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  3083  001488  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3084  00148C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3085  001490  CFDE F009          	movff	postinc2,atoi@s
  3086  001494  CFDD F00A          	movff	postdec2,atoi@s+1
  3087  001498  EC6E  F00D         	call	_atoi	;wreg free
  3088  00149C  C009  F0F7         	movff	?_atoi,_width
  3089  0014A0  C00A  F0F8         	movff	?_atoi+1,_width+1
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3092  0014A4  EF5B  F00A         	goto	l3123
  3093  0014A8                     l3119:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  3096  0014A8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097  0014AC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098  0014B0  2ADE               	incf	postinc2,f,c
  3099  0014B2  0E00               	movlw	0
  3100  0014B4  22DD               	addwfc	postdec2,f,c
  3101  0014B6                     l3123:
  3102  0014B6  0ED0               	movlw	208
  3103  0014B8  6E47               	movwf	??_vfpfcnvrt^0,c
  3104  0014BA  0EFF               	movlw	255
  3105  0014BC  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  3106  0014BE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3107  0014C2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3108  0014C6  CFDE FFF6          	movff	postinc2,tblptrl
  3109  0014CA  CFDD FFF7          	movff	postdec2,tblptrh
  3110  0014CE                     	if	0	;tblptru may be non-zero
  3111  0014CE                     	endif
  3112  0014CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3113  0014CE  0E00               	movlw	low (__mediumconst shr (0+16))
  3114  0014D0  6EF8               	movwf	tblptru,c
  3115  0014D2                     	endif
  3116  0014D2  0008               	tblrd		*
  3117  0014D4  50F5               	movf	tablat,w,c
  3118  0014D6  6E49               	movwf	(??_vfpfcnvrt+2)^0,c
  3119  0014D8  6A4A               	clrf	(??_vfpfcnvrt+3)^0,c
  3120  0014DA  5047               	movf	??_vfpfcnvrt^0,w,c
  3121  0014DC  2649               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3122  0014DE  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  3123  0014E0  224A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3124  0014E2  504A               	movf	(??_vfpfcnvrt+3)^0,w,c
  3125  0014E4  E109               	bnz	u2920
  3126  0014E6  0E0A               	movlw	10
  3127  0014E8  5C49               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3128  0014EA  A0D8               	btfss	status,0,c
  3129  0014EC  EF7A  F00A         	goto	u2921
  3130  0014F0  EF7C  F00A         	goto	u2920
  3131  0014F4                     u2921:
  3132  0014F4  EF54  F00A         	goto	l3119
  3133  0014F8                     u2920:
  3134  0014F8                     l3125:
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3137  0014F8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3138  0014FC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3139  001500  CFDE FFF6          	movff	postinc2,tblptrl
  3140  001504  CFDD FFF7          	movff	postdec2,tblptrh
  3141  001508                     	if	0	;tblptru may be non-zero
  3142  001508                     	endif
  3143  001508                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3144  001508  0E00               	movlw	low (__mediumconst shr (0+16))
  3145  00150A  6EF8               	movwf	tblptru,c
  3146  00150C                     	endif
  3147  00150C  0008               	tblrd		*
  3148  00150E  50F5               	movf	tablat,w,c
  3149  001510  0A64               	xorlw	100
  3150  001512  B4D8               	btfsc	status,2,c
  3151  001514  EF8E  F00A         	goto	u2931
  3152  001518  EF90  F00A         	goto	u2930
  3153  00151C                     u2931:
  3154  00151C  EFA4  F00A         	goto	l3129
  3155  001520                     u2930:
  3156  001520  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3157  001524  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3158  001528  CFDE FFF6          	movff	postinc2,tblptrl
  3159  00152C  CFDD FFF7          	movff	postdec2,tblptrh
  3160  001530                     	if	0	;tblptru may be non-zero
  3161  001530                     	endif
  3162  001530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3163  001530  0E00               	movlw	low (__mediumconst shr (0+16))
  3164  001532  6EF8               	movwf	tblptru,c
  3165  001534                     	endif
  3166  001534  0008               	tblrd		*
  3167  001536  50F5               	movf	tablat,w,c
  3168  001538  0A69               	xorlw	105
  3169  00153A  A4D8               	btfss	status,2,c
  3170  00153C  EFA2  F00A         	goto	u2941
  3171  001540  EFA4  F00A         	goto	u2940
  3172  001544                     u2941:
  3173  001544  EFE4  F00A         	goto	l3135
  3174  001548                     u2940:
  3175  001548                     l3129:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3178  001548  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3179  00154C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3180  001550  2ADE               	incf	postinc2,f,c
  3181  001552  0E00               	movlw	0
  3182  001554  22DD               	addwfc	postdec2,f,c
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3185  001556  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3186  00155A  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3187  00155E  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3188  001562  0E02               	movlw	2
  3189  001564  26DE               	addwf	postinc2,f,c
  3190  001566  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3191  00156A  0E00               	movlw	0
  3192  00156C  22DD               	addwfc	postdec2,f,c
  3193  00156E  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3194  001572  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3195  001576  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  3196  00157A  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  3197  00157E  0E00               	movlw	0
  3198  001580  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3199  001582  0EFF               	movlw	-1
  3200  001584  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  3201  001586  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  3202  001588  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  3203  00158A  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  3204  00158C  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  3205  00158E  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  3206  001590                     
  3207                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3208  001590  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  3209  001594  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3210  001598  C04B  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  3211  00159C  C04C  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3212  0015A0  C04D  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3213  0015A4  C04E  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3214  0015A8  C04F  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3215  0015AC  C050  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3216  0015B0  C051  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3217  0015B4  C052  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3218  0015B8  EC3A  F00B         	call	_dtoa	;wreg free
  3219  0015BC  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  3220  0015C0  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3221  0015C4  EF39  F00B         	goto	l1027
  3222  0015C8                     l3135:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3225  0015C8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3226  0015CC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3227  0015D0  CFDE FFF6          	movff	postinc2,tblptrl
  3228  0015D4  CFDD FFF7          	movff	postdec2,tblptrh
  3229  0015D8                     	if	0	;tblptru may be non-zero
  3230  0015D8                     	endif
  3231  0015D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3232  0015D8  0E00               	movlw	low (__mediumconst shr (0+16))
  3233  0015DA  6EF8               	movwf	tblptru,c
  3234  0015DC                     	endif
  3235  0015DC  0008               	tblrd		*
  3236  0015DE  50F5               	movf	tablat,w,c
  3237  0015E0  0A25               	xorlw	37
  3238  0015E2  A4D8               	btfss	status,2,c
  3239  0015E4  EFF6  F00A         	goto	u2951
  3240  0015E8  EFF8  F00A         	goto	u2950
  3241  0015EC                     u2951:
  3242  0015EC  EF0F  F00B         	goto	l3145
  3243  0015F0                     u2950:
  3244  0015F0                     
  3245                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3246  0015F0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3247  0015F4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3248  0015F8  2ADE               	incf	postinc2,f,c
  3249  0015FA  0E00               	movlw	0
  3250  0015FC  22DD               	addwfc	postdec2,f,c
  3251  0015FE                     
  3252                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3253  0015FE  0E00               	movlw	0
  3254  001600  6E03               	movwf	(fputc@c+1)^0,c
  3255  001602  0E25               	movlw	37
  3256  001604  6E02               	movwf	fputc@c^0,c
  3257  001606  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3258  00160A  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3259  00160E  EC3C  F00F         	call	_fputc	;wreg free
  3260  001612                     l3141:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3263  001612  0E00               	movlw	0
  3264  001614  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  3265  001616  0E01               	movlw	1
  3266  001618  6E41               	movwf	?_vfpfcnvrt^0,c
  3267  00161A  EF39  F00B         	goto	l1027
  3268  00161E                     l3145:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3271  00161E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3272  001622  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3273  001626  2ADE               	incf	postinc2,f,c
  3274  001628  0E00               	movlw	0
  3275  00162A  22DD               	addwfc	postdec2,f,c
  3276  00162C                     
  3277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3278  00162C  0E00               	movlw	0
  3279  00162E  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  3280  001630  0E00               	movlw	0
  3281  001632  6E41               	movwf	?_vfpfcnvrt^0,c
  3282  001634  EF39  F00B         	goto	l1027
  3283  001638                     l3151:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3286  001638  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3287  00163C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3288  001640  CFDE FFF6          	movff	postinc2,tblptrl
  3289  001644  CFDD FFF7          	movff	postdec2,tblptrh
  3290  001648                     	if	0	;tblptru may be non-zero
  3291  001648                     	endif
  3292  001648                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3293  001648  0E00               	movlw	low (__mediumconst shr (0+16))
  3294  00164A  6EF8               	movwf	tblptru,c
  3295  00164C                     	endif
  3296  00164C  0008               	tblrd		*
  3297  00164E  50F5               	movf	tablat,w,c
  3298  001650  6E02               	movwf	fputc@c^0,c
  3299  001652  6A03               	clrf	(fputc@c+1)^0,c
  3300  001654  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3301  001658  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3302  00165C  EC3C  F00F         	call	_fputc	;wreg free
  3303  001660                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3305  001660  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3306  001664  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  001668  2ADE               	incf	postinc2,f,c
  3308  00166A  0E00               	movlw	0
  3309  00166C  22DD               	addwfc	postdec2,f,c
  3310  00166E  EF09  F00B         	goto	l3141
  3311  001672                     l1027:
  3312  001672  0012               	return		;funcret
  3313  001674                     __end_of_vfpfcnvrt:
  3314                           	callstack 0
  3315                           
  3316 ;; *************** function _dtoa *****************
  3317 ;; Defined at:
  3318 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3321 ;;		 -> sprintf@f(11), 
  3322 ;;  d               8   30[COMRAM] long long 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  n               8   54[COMRAM] long long 
  3325 ;;  i               2   62[COMRAM] int 
  3326 ;;  s               2   52[COMRAM] int 
  3327 ;;  w               2   50[COMRAM] int 
  3328 ;;  p               2   48[COMRAM] int 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   28[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3338 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3339 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3340 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;Total ram usage:       36 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 5
  3345 ;; This function calls:
  3346 ;;		___aodiv
  3347 ;;		___aomod
  3348 ;;		_abs
  3349 ;;		_pad
  3350 ;; This function is called by:
  3351 ;;		_vfpfcnvrt
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text14
  3356  001674                     __ptext14:
  3357                           	callstack 0
  3358  001674                     _dtoa:
  3359                           	callstack 21
  3360  001674                     
  3361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3362  001674  C01F  F037         	movff	dtoa@d,dtoa@n
  3363  001678  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  3364  00167C  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  3365  001680  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  3366  001684  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  3367  001688  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  3368  00168C  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  3369  001690  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  3370  001694                     
  3371                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3372  001694  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  3373  001696  EF4F  F00B         	goto	u2681
  3374  00169A  EF52  F00B         	goto	u2680
  3375  00169E                     u2681:
  3376  00169E  0E01               	movlw	1
  3377  0016A0  EF53  F00B         	goto	u2690
  3378  0016A4                     u2680:
  3379  0016A4  0E00               	movlw	0
  3380  0016A6                     u2690:
  3381  0016A6  6E35               	movwf	dtoa@s^0,c
  3382  0016A8  6A36               	clrf	(dtoa@s+1)^0,c
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3385  0016AA  5035               	movf	dtoa@s^0,w,c
  3386  0016AC  1036               	iorwf	(dtoa@s+1)^0,w,c
  3387  0016AE  B4D8               	btfsc	status,2,c
  3388  0016B0  EF5C  F00B         	goto	u2701
  3389  0016B4  EF5E  F00B         	goto	u2700
  3390  0016B8                     u2701:
  3391  0016B8  EF6E  F00B         	goto	l2981
  3392  0016BC                     u2700:
  3393  0016BC                     
  3394                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3395  0016BC  1E3E               	comf	(dtoa@n+7)^0,f,c
  3396  0016BE  1E3D               	comf	(dtoa@n+6)^0,f,c
  3397  0016C0  1E3C               	comf	(dtoa@n+5)^0,f,c
  3398  0016C2  1E3B               	comf	(dtoa@n+4)^0,f,c
  3399  0016C4  1E3A               	comf	(dtoa@n+3)^0,f,c
  3400  0016C6  1E39               	comf	(dtoa@n+2)^0,f,c
  3401  0016C8  1E38               	comf	(dtoa@n+1)^0,f,c
  3402  0016CA  6C37               	negf	dtoa@n^0,c
  3403  0016CC  0E00               	movlw	0
  3404  0016CE  2238               	addwfc	(dtoa@n+1)^0,f,c
  3405  0016D0  2239               	addwfc	(dtoa@n+2)^0,f,c
  3406  0016D2  223A               	addwfc	(dtoa@n+3)^0,f,c
  3407  0016D4  223B               	addwfc	(dtoa@n+4)^0,f,c
  3408  0016D6  223C               	addwfc	(dtoa@n+5)^0,f,c
  3409  0016D8  223D               	addwfc	(dtoa@n+6)^0,f,c
  3410  0016DA  223E               	addwfc	(dtoa@n+7)^0,f,c
  3411  0016DC                     l2981:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3414  0016DC  0100               	movlb	0	; () banked
  3415  0016DE  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3416  0016E0  EF74  F00B         	goto	u2711
  3417  0016E4  EF76  F00B         	goto	u2710
  3418  0016E8                     u2711:
  3419  0016E8  EF77  F00B         	goto	l2985
  3420  0016EC                     u2710:
  3421  0016EC                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3424  0016EC  925B               	bcf	_flags^0,1,c
  3425  0016EE                     l2985:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3429  0016EE  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3430  0016F0  EF84  F00B         	goto	u2720
  3431  0016F4  51FA               	movf	(_prec+1)& (0+255),w,b
  3432  0016F6  E106               	bnz	u2721
  3433  0016F8  05F9               	decf	_prec& (0+255),w,b
  3434  0016FA  B0D8               	btfsc	status,0,c
  3435  0016FC  EF82  F00B         	goto	u2721
  3436  001700  EF84  F00B         	goto	u2720
  3437  001704                     u2721:
  3438  001704  EF8A  F00B         	goto	l980
  3439  001708                     u2720:
  3440  001708                     
  3441                           ; BSR set to: 0
  3442  001708  0E00               	movlw	0
  3443  00170A  6E32               	movwf	(dtoa@p+1)^0,c
  3444  00170C  0E01               	movlw	1
  3445  00170E  6E31               	movwf	dtoa@p^0,c
  3446  001710  EF8E  F00B         	goto	l982
  3447  001714                     l980:
  3448                           
  3449                           ; BSR set to: 0
  3450  001714  C0F9  F031         	movff	_prec,dtoa@p
  3451  001718  C0FA  F032         	movff	_prec+1,dtoa@p+1
  3452  00171C                     l982:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3456  00171C  C0F7  F033         	movff	_width,dtoa@w
  3457  001720  C0F8  F034         	movff	_width+1,dtoa@w+1
  3458  001724                     
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3461  001724  5035               	movf	dtoa@s^0,w,c
  3462  001726  1036               	iorwf	(dtoa@s+1)^0,w,c
  3463  001728  A4D8               	btfss	status,2,c
  3464  00172A  EF99  F00B         	goto	u2731
  3465  00172E  EF9B  F00B         	goto	u2730
  3466  001732                     u2731:
  3467  001732  EFA2  F00B         	goto	l2993
  3468  001736                     u2730:
  3469  001736                     
  3470                           ; BSR set to: 0
  3471  001736  A45B               	btfss	_flags^0,2,c
  3472  001738  EFA0  F00B         	goto	u2741
  3473  00173C  EFA2  F00B         	goto	u2740
  3474  001740                     u2741:
  3475  001740  EFA5  F00B         	goto	l2995
  3476  001744                     u2740:
  3477  001744                     l2993:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  3481  001744  0633               	decf	dtoa@w^0,f,c
  3482  001746  A0D8               	btfss	status,0,c
  3483  001748  0634               	decf	(dtoa@w+1)^0,f,c
  3484  00174A                     l2995:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3488  00174A  0E00               	movlw	0
  3489  00174C  6E40               	movwf	(dtoa@i+1)^0,c
  3490  00174E  0E1F               	movlw	31
  3491  001750  6E3F               	movwf	dtoa@i^0,c
  3492  001752                     
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3495  001752  0E00               	movlw	0
  3496  001754  0101               	movlb	1	; () banked
  3497  001756  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3498                           
  3499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3500  001758  EF2A  F00C         	goto	l3009
  3501  00175C                     l2999:
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  3504  00175C  063F               	decf	dtoa@i^0,f,c
  3505  00175E  A0D8               	btfss	status,0,c
  3506  001760  0640               	decf	(dtoa@i+1)^0,f,c
  3507  001762                     
  3508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3509  001762  0E00               	movlw	low _dbuf
  3510  001764  243F               	addwf	dtoa@i^0,w,c
  3511  001766  6ED9               	movwf	fsr2l,c
  3512  001768  0E01               	movlw	high _dbuf
  3513  00176A  2040               	addwfc	(dtoa@i+1)^0,w,c
  3514  00176C  6EDA               	movwf	fsr2h,c
  3515  00176E  C037  F002         	movff	dtoa@n,___aomod@dividend
  3516  001772  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  3517  001776  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  3518  00177A  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  3519  00177E  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  3520  001782  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  3521  001786  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  3522  00178A  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  3523  00178E  0E0A               	movlw	10
  3524  001790  6E0A               	movwf	___aomod@divisor^0,c
  3525  001792  0E00               	movlw	0
  3526  001794  6E0B               	movwf	(___aomod@divisor+1)^0,c
  3527  001796  0E00               	movlw	0
  3528  001798  6E0C               	movwf	(___aomod@divisor+2)^0,c
  3529  00179A  0E00               	movlw	0
  3530  00179C  6E0D               	movwf	(___aomod@divisor+3)^0,c
  3531  00179E  0E00               	movlw	0
  3532  0017A0  6E0E               	movwf	(___aomod@divisor+4)^0,c
  3533  0017A2  0E00               	movlw	0
  3534  0017A4  6E0F               	movwf	(___aomod@divisor+5)^0,c
  3535  0017A6  0E00               	movlw	0
  3536  0017A8  6E10               	movwf	(___aomod@divisor+6)^0,c
  3537  0017AA  0E00               	movlw	0
  3538  0017AC  6E11               	movwf	(___aomod@divisor+7)^0,c
  3539  0017AE  EC23  F00E         	call	___aomod	;wreg free
  3540  0017B2  C002  F027         	movff	?___aomod,??_dtoa
  3541  0017B6  C003  F028         	movff	?___aomod+1,??_dtoa+1
  3542  0017BA  C004  F029         	movff	?___aomod+2,??_dtoa+2
  3543  0017BE  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  3544  0017C2  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  3545  0017C6  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  3546  0017CA  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  3547  0017CE  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  3548  0017D2  C027  F014         	movff	??_dtoa,abs@a
  3549  0017D6  C029  F015         	movff	??_dtoa+2,abs@a+1
  3550  0017DA  ECA1  F012         	call	_abs	;wreg free
  3551  0017DE  5014               	movf	?_abs^0,w,c
  3552  0017E0  0F30               	addlw	48
  3553  0017E2  6EDF               	movwf	indf2,c
  3554  0017E4                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  3556  0017E4  0631               	decf	dtoa@p^0,f,c
  3557  0017E6  A0D8               	btfss	status,0,c
  3558  0017E8  0632               	decf	(dtoa@p+1)^0,f,c
  3559  0017EA                     
  3560                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  3561  0017EA  0633               	decf	dtoa@w^0,f,c
  3562  0017EC  A0D8               	btfss	status,0,c
  3563  0017EE  0634               	decf	(dtoa@w+1)^0,f,c
  3564  0017F0                     
  3565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3566  0017F0  C037  F002         	movff	dtoa@n,___aodiv@dividend
  3567  0017F4  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  3568  0017F8  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  3569  0017FC  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  3570  001800  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  3571  001804  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  3572  001808  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  3573  00180C  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  3574  001810  0E0A               	movlw	10
  3575  001812  6E0A               	movwf	___aodiv@divisor^0,c
  3576  001814  0E00               	movlw	0
  3577  001816  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  3578  001818  0E00               	movlw	0
  3579  00181A  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  3580  00181C  0E00               	movlw	0
  3581  00181E  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  3582  001820  0E00               	movlw	0
  3583  001822  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  3584  001824  0E00               	movlw	0
  3585  001826  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  3586  001828  0E00               	movlw	0
  3587  00182A  6E10               	movwf	(___aodiv@divisor+6)^0,c
  3588  00182C  0E00               	movlw	0
  3589  00182E  6E11               	movwf	(___aodiv@divisor+7)^0,c
  3590  001830  ECAA  F00C         	call	___aodiv	;wreg free
  3591  001834  C002  F037         	movff	?___aodiv,dtoa@n
  3592  001838  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  3593  00183C  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  3594  001840  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  3595  001844  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  3596  001848  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  3597  00184C  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  3598  001850  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  3599  001854                     l3009:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3602  001854  BE40               	btfsc	(dtoa@i+1)^0,7,c
  3603  001856  EF35  F00C         	goto	u2751
  3604  00185A  5040               	movf	(dtoa@i+1)^0,w,c
  3605  00185C  E108               	bnz	u2750
  3606  00185E  043F               	decf	dtoa@i^0,w,c
  3607  001860  A0D8               	btfss	status,0,c
  3608  001862  EF35  F00C         	goto	u2751
  3609  001866  EF37  F00C         	goto	u2750
  3610  00186A                     u2751:
  3611  00186A  EF67  F00C         	goto	l3019
  3612  00186E                     u2750:
  3613  00186E  5037               	movf	dtoa@n^0,w,c
  3614  001870  1038               	iorwf	(dtoa@n+1)^0,w,c
  3615  001872  1039               	iorwf	(dtoa@n+2)^0,w,c
  3616  001874  103A               	iorwf	(dtoa@n+3)^0,w,c
  3617  001876  103B               	iorwf	(dtoa@n+4)^0,w,c
  3618  001878  103C               	iorwf	(dtoa@n+5)^0,w,c
  3619  00187A  103D               	iorwf	(dtoa@n+6)^0,w,c
  3620  00187C  103E               	iorwf	(dtoa@n+7)^0,w,c
  3621  00187E  A4D8               	btfss	status,2,c
  3622  001880  EF44  F00C         	goto	u2761
  3623  001884  EF46  F00C         	goto	u2760
  3624  001888                     u2761:
  3625  001888  EFAE  F00B         	goto	l2999
  3626  00188C                     u2760:
  3627  00188C  BE32               	btfsc	(dtoa@p+1)^0,7,c
  3628  00188E  EF53  F00C         	goto	u2770
  3629  001892  5032               	movf	(dtoa@p+1)^0,w,c
  3630  001894  E106               	bnz	u2771
  3631  001896  0431               	decf	dtoa@p^0,w,c
  3632  001898  B0D8               	btfsc	status,0,c
  3633  00189A  EF51  F00C         	goto	u2771
  3634  00189E  EF53  F00C         	goto	u2770
  3635  0018A2                     u2771:
  3636  0018A2  EFAE  F00B         	goto	l2999
  3637  0018A6                     u2770:
  3638  0018A6  BE34               	btfsc	(dtoa@w+1)^0,7,c
  3639  0018A8  EF5E  F00C         	goto	u2781
  3640  0018AC  5034               	movf	(dtoa@w+1)^0,w,c
  3641  0018AE  E108               	bnz	u2780
  3642  0018B0  0433               	decf	dtoa@w^0,w,c
  3643  0018B2  A0D8               	btfss	status,0,c
  3644  0018B4  EF5E  F00C         	goto	u2781
  3645  0018B8  EF60  F00C         	goto	u2780
  3646  0018BC                     u2781:
  3647  0018BC  EF67  F00C         	goto	l3019
  3648  0018C0                     u2780:
  3649  0018C0  B25B               	btfsc	_flags^0,1,c
  3650  0018C2  EF65  F00C         	goto	u2791
  3651  0018C6  EF67  F00C         	goto	u2790
  3652  0018CA                     u2791:
  3653  0018CA  EFAE  F00B         	goto	l2999
  3654  0018CE                     u2790:
  3655  0018CE                     l3019:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3658  0018CE  5035               	movf	dtoa@s^0,w,c
  3659  0018D0  1036               	iorwf	(dtoa@s+1)^0,w,c
  3660  0018D2  A4D8               	btfss	status,2,c
  3661  0018D4  EF6E  F00C         	goto	u2801
  3662  0018D8  EF70  F00C         	goto	u2800
  3663  0018DC                     u2801:
  3664  0018DC  EF77  F00C         	goto	l3023
  3665  0018E0                     u2800:
  3666  0018E0  A45B               	btfss	_flags^0,2,c
  3667  0018E2  EF75  F00C         	goto	u2811
  3668  0018E6  EF77  F00C         	goto	u2810
  3669  0018EA                     u2811:
  3670  0018EA  EF95  F00C         	goto	l3033
  3671  0018EE                     u2810:
  3672  0018EE                     l3023:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  3675  0018EE  063F               	decf	dtoa@i^0,f,c
  3676  0018F0  A0D8               	btfss	status,0,c
  3677  0018F2  0640               	decf	(dtoa@i+1)^0,f,c
  3678  0018F4                     
  3679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3680  0018F4  5035               	movf	dtoa@s^0,w,c
  3681  0018F6  1036               	iorwf	(dtoa@s+1)^0,w,c
  3682  0018F8  A4D8               	btfss	status,2,c
  3683  0018FA  EF81  F00C         	goto	u2821
  3684  0018FE  EF83  F00C         	goto	u2820
  3685  001902                     u2821:
  3686  001902  EF89  F00C         	goto	l3029
  3687  001906                     u2820:
  3688  001906  0E00               	movlw	0
  3689  001908  6E30               	movwf	(_dtoa$1920+1)^0,c
  3690  00190A  0E2B               	movlw	43
  3691  00190C  6E2F               	movwf	_dtoa$1920^0,c
  3692  00190E  EF8D  F00C         	goto	l3031
  3693  001912                     l3029:
  3694  001912  0E00               	movlw	0
  3695  001914  6E30               	movwf	(_dtoa$1920+1)^0,c
  3696  001916  0E2D               	movlw	45
  3697  001918  6E2F               	movwf	_dtoa$1920^0,c
  3698  00191A                     l3031:
  3699  00191A  0E00               	movlw	low _dbuf
  3700  00191C  243F               	addwf	dtoa@i^0,w,c
  3701  00191E  6ED9               	movwf	fsr2l,c
  3702  001920  0E01               	movlw	high _dbuf
  3703  001922  2040               	addwfc	(dtoa@i+1)^0,w,c
  3704  001924  6EDA               	movwf	fsr2h,c
  3705  001926  C02F  FFDF         	movff	_dtoa$1920,indf2
  3706  00192A                     l3033:
  3707                           
  3708                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3709  00192A  C01D  F012         	movff	dtoa@fp,pad@fp
  3710  00192E  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  3711  001932  0E00               	movlw	low _dbuf
  3712  001934  243F               	addwf	dtoa@i^0,w,c
  3713  001936  6E14               	movwf	pad@buf^0,c
  3714  001938  0E01               	movlw	high _dbuf
  3715  00193A  2040               	addwfc	(dtoa@i+1)^0,w,c
  3716  00193C  6E15               	movwf	(pad@buf+1)^0,c
  3717  00193E  C033  F016         	movff	dtoa@w,pad@p
  3718  001942  C034  F017         	movff	dtoa@w+1,pad@p+1
  3719  001946  EC03  F010         	call	_pad	;wreg free
  3720  00194A  C012  F01D         	movff	?_pad,?_dtoa
  3721  00194E  C013  F01E         	movff	?_pad+1,?_dtoa+1
  3722  001952  0012               	return		;funcret
  3723  001954                     __end_of_dtoa:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _pad *****************
  3727 ;; Defined at:
  3728 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3731 ;;		 -> sprintf@f(11), 
  3732 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3733 ;;		 -> dbuf(32), 
  3734 ;;  p               2   21[COMRAM] int 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  w               2   26[COMRAM] int 
  3737 ;;  i               2   24[COMRAM] int 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2   17[COMRAM] int 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3747 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;Total ram usage:       11 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 4
  3754 ;; This function calls:
  3755 ;;		_fputc
  3756 ;;		_fputs
  3757 ;;		_strlen
  3758 ;; This function is called by:
  3759 ;;		_dtoa
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text15
  3764  002006                     __ptext15:
  3765                           	callstack 0
  3766  002006                     _pad:
  3767                           	callstack 21
  3768  002006                     
  3769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3770  002006  A05B               	btfss	_flags^0,0,c
  3771  002008  EF08  F010         	goto	u2591
  3772  00200C  EF0A  F010         	goto	u2590
  3773  002010                     u2591:
  3774  002010  EF14  F010         	goto	l2937
  3775  002014                     u2590:
  3776  002014                     
  3777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3778  002014  C014  F00B         	movff	pad@buf,fputs@s
  3779  002018  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3780  00201C  C012  F00D         	movff	pad@fp,fputs@fp
  3781  002020  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3782  002024  EC7F  F012         	call	_fputs	;wreg free
  3783  002028                     l2937:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3786  002028  BE17               	btfsc	(pad@p+1)^0,7,c
  3787  00202A  EF19  F010         	goto	u2601
  3788  00202E  EF1B  F010         	goto	u2600
  3789  002032                     u2601:
  3790  002032  EF21  F010         	goto	l2941
  3791  002036                     u2600:
  3792  002036  C016  F01B         	movff	pad@p,pad@w
  3793  00203A  C017  F01C         	movff	pad@p+1,pad@w+1
  3794  00203E  EF25  F010         	goto	l969
  3795  002042                     l2941:
  3796  002042  0E00               	movlw	0
  3797  002044  6E1C               	movwf	(pad@w+1)^0,c
  3798  002046  0E00               	movlw	0
  3799  002048  6E1B               	movwf	pad@w^0,c
  3800  00204A                     l969:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3803  00204A  0E00               	movlw	0
  3804  00204C  6E1A               	movwf	(pad@i+1)^0,c
  3805  00204E  0E00               	movlw	0
  3806  002050  6E19               	movwf	pad@i^0,c
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3809  002052  EF37  F010         	goto	l2947
  3810  002056                     l2943:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3813  002056  0E00               	movlw	0
  3814  002058  6E03               	movwf	(fputc@c+1)^0,c
  3815  00205A  0E20               	movlw	32
  3816  00205C  6E02               	movwf	fputc@c^0,c
  3817  00205E  C012  F004         	movff	pad@fp,fputc@fp
  3818  002062  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3819  002066  EC3C  F00F         	call	_fputc	;wreg free
  3820  00206A                     
  3821                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3822  00206A  4A19               	infsnz	pad@i^0,f,c
  3823  00206C  2A1A               	incf	(pad@i+1)^0,f,c
  3824  00206E                     l2947:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3827  00206E  501B               	movf	pad@w^0,w,c
  3828  002070  5C19               	subwf	pad@i^0,w,c
  3829  002072  501A               	movf	(pad@i+1)^0,w,c
  3830  002074  0A80               	xorlw	128
  3831  002076  6E18               	movwf	??_pad^0,c
  3832  002078  501C               	movf	(pad@w+1)^0,w,c
  3833  00207A  0A80               	xorlw	128
  3834  00207C  5818               	subwfb	??_pad^0,w,c
  3835  00207E  A0D8               	btfss	status,0,c
  3836  002080  EF44  F010         	goto	u2611
  3837  002084  EF46  F010         	goto	u2610
  3838  002088                     u2611:
  3839  002088  EF2B  F010         	goto	l2943
  3840  00208C                     u2610:
  3841  00208C                     
  3842                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3843  00208C  B05B               	btfsc	_flags^0,0,c
  3844  00208E  EF4B  F010         	goto	u2621
  3845  002092  EF4D  F010         	goto	u2620
  3846  002096                     u2621:
  3847  002096  EF57  F010         	goto	l2951
  3848  00209A                     u2620:
  3849  00209A                     
  3850                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3851  00209A  C014  F00B         	movff	pad@buf,fputs@s
  3852  00209E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3853  0020A2  C012  F00D         	movff	pad@fp,fputs@fp
  3854  0020A6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3855  0020AA  EC7F  F012         	call	_fputs	;wreg free
  3856  0020AE                     l2951:
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3859  0020AE  C014  F002         	movff	pad@buf,strlen@s
  3860  0020B2  C015  F003         	movff	pad@buf+1,strlen@s+1
  3861  0020B6  ECFA  F012         	call	_strlen	;wreg free
  3862  0020BA  501B               	movf	pad@w^0,w,c
  3863  0020BC  2402               	addwf	?_strlen^0,w,c
  3864  0020BE  6E12               	movwf	?_pad^0,c
  3865  0020C0  501C               	movf	(pad@w+1)^0,w,c
  3866  0020C2  2003               	addwfc	(?_strlen+1)^0,w,c
  3867  0020C4  6E13               	movwf	(?_pad+1)^0,c
  3868  0020C6  0012               	return		;funcret
  3869  0020C8                     __end_of_pad:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _strlen *****************
  3873 ;; Defined at:
  3874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  s               2    1[COMRAM] PTR const unsigned char 
  3877 ;;		 -> dbuf(32), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  a               2    3[COMRAM] PTR const unsigned char 
  3880 ;;		 -> dbuf(32), 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  2    1[COMRAM] unsigned int 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;Total ram usage:        4 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_pad
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text16
  3905  0025F4                     __ptext16:
  3906                           	callstack 0
  3907  0025F4                     _strlen:
  3908                           	callstack 23
  3909  0025F4  C002  F004         	movff	strlen@s,strlen@a
  3910  0025F8  C003  F005         	movff	strlen@s+1,strlen@a+1
  3911  0025FC  EF02  F013         	goto	l2841
  3912  002600                     l2839:
  3913  002600  4A02               	infsnz	strlen@s^0,f,c
  3914  002602  2A03               	incf	(strlen@s+1)^0,f,c
  3915  002604                     l2841:
  3916  002604  C002  FFD9         	movff	strlen@s,fsr2l
  3917  002608  C003  FFDA         	movff	strlen@s+1,fsr2h
  3918  00260C  50DF               	movf	indf2,w,c
  3919  00260E  A4D8               	btfss	status,2,c
  3920  002610  EF0C  F013         	goto	u2451
  3921  002614  EF0E  F013         	goto	u2450
  3922  002618                     u2451:
  3923  002618  EF00  F013         	goto	l2839
  3924  00261C                     u2450:
  3925  00261C  5004               	movf	strlen@a^0,w,c
  3926  00261E  5C02               	subwf	strlen@s^0,w,c
  3927  002620  6E02               	movwf	?_strlen^0,c
  3928  002622  5005               	movf	(strlen@a+1)^0,w,c
  3929  002624  5803               	subwfb	(strlen@s+1)^0,w,c
  3930  002626  6E03               	movwf	(?_strlen+1)^0,c
  3931  002628  0012               	return		;funcret
  3932  00262A                     __end_of_strlen:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function _fputs *****************
  3936 ;; Defined at:
  3937 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3940 ;;		 -> dbuf(32), 
  3941 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3942 ;;		 -> sprintf@f(11), 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  i               2   15[COMRAM] int 
  3945 ;;  c               1   14[COMRAM] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2   10[COMRAM] int 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        7 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 3
  3962 ;; This function calls:
  3963 ;;		_fputc
  3964 ;; This function is called by:
  3965 ;;		_pad
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text17
  3970  0024FE                     __ptext17:
  3971                           	callstack 0
  3972  0024FE                     _fputs:
  3973                           	callstack 21
  3974  0024FE  0E00               	movlw	0
  3975  002500  6E11               	movwf	(fputs@i+1)^0,c
  3976  002502  0E00               	movlw	0
  3977  002504  6E10               	movwf	fputs@i^0,c
  3978  002506  EF90  F012         	goto	l2835
  3979  00250A                     l2831:
  3980  00250A  C00F  F002         	movff	fputs@c,fputc@c
  3981  00250E  6A03               	clrf	(fputc@c+1)^0,c
  3982  002510  C00D  F004         	movff	fputs@fp,fputc@fp
  3983  002514  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3984  002518  EC3C  F00F         	call	_fputc	;wreg free
  3985  00251C  4A10               	infsnz	fputs@i^0,f,c
  3986  00251E  2A11               	incf	(fputs@i+1)^0,f,c
  3987  002520                     l2835:
  3988  002520  5010               	movf	fputs@i^0,w,c
  3989  002522  240B               	addwf	fputs@s^0,w,c
  3990  002524  6ED9               	movwf	fsr2l,c
  3991  002526  5011               	movf	(fputs@i+1)^0,w,c
  3992  002528  200C               	addwfc	(fputs@s+1)^0,w,c
  3993  00252A  6EDA               	movwf	fsr2h,c
  3994  00252C  50DF               	movf	indf2,w,c
  3995  00252E  6E0F               	movwf	fputs@c^0,c
  3996  002530  500F               	movf	fputs@c^0,w,c
  3997  002532  A4D8               	btfss	status,2,c
  3998  002534  EF9E  F012         	goto	u2441
  3999  002538  EFA0  F012         	goto	u2440
  4000  00253C                     u2441:
  4001  00253C  EF85  F012         	goto	l2831
  4002  002540                     u2440:
  4003  002540  0012               	return		;funcret
  4004  002542                     __end_of_fputs:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _fputc *****************
  4008 ;; Defined at:
  4009 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  c               2    1[COMRAM] int 
  4012 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  4013 ;;		 -> sprintf@f(11), 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  2    1[COMRAM] int 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;Total ram usage:        9 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; Hardware stack levels required when called: 2
  4032 ;; This function calls:
  4033 ;;		_putch
  4034 ;; This function is called by:
  4035 ;;		_pad
  4036 ;;		_vfpfcnvrt
  4037 ;;		_fputs
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text18
  4042  001E78                     __ptext18:
  4043                           	callstack 0
  4044  001E78                     _fputc:
  4045                           	callstack 24
  4046  001E78  5004               	movf	fputc@fp^0,w,c
  4047  001E7A  1005               	iorwf	(fputc@fp+1)^0,w,c
  4048  001E7C  B4D8               	btfsc	status,2,c
  4049  001E7E  EF43  F00F         	goto	u2401
  4050  001E82  EF45  F00F         	goto	u2400
  4051  001E86                     u2401:
  4052  001E86  EF4E  F00F         	goto	l2819
  4053  001E8A                     u2400:
  4054  001E8A  5004               	movf	fputc@fp^0,w,c
  4055  001E8C  1005               	iorwf	(fputc@fp+1)^0,w,c
  4056  001E8E  A4D8               	btfss	status,2,c
  4057  001E90  EF4C  F00F         	goto	u2411
  4058  001E94  EF4E  F00F         	goto	u2410
  4059  001E98                     u2411:
  4060  001E98  EF53  F00F         	goto	l2821
  4061  001E9C                     u2410:
  4062  001E9C                     l2819:
  4063  001E9C  5002               	movf	fputc@c^0,w,c
  4064  001E9E  ECD1  F013         	call	_putch
  4065  001EA2  EFA0  F00F         	goto	l1092
  4066  001EA6                     l2821:
  4067  001EA6  EE20 F009          	lfsr	2,9
  4068  001EAA  5004               	movf	fputc@fp^0,w,c
  4069  001EAC  26D9               	addwf	fsr2l,f,c
  4070  001EAE  5005               	movf	(fputc@fp+1)^0,w,c
  4071  001EB0  22DA               	addwfc	fsr2h,f,c
  4072  001EB2  50DE               	movf	postinc2,w,c
  4073  001EB4  10DE               	iorwf	postinc2,w,c
  4074  001EB6  B4D8               	btfsc	status,2,c
  4075  001EB8  EF60  F00F         	goto	u2421
  4076  001EBC  EF62  F00F         	goto	u2420
  4077  001EC0                     u2421:
  4078  001EC0  EF7D  F00F         	goto	l2825
  4079  001EC4                     u2420:
  4080  001EC4  EE20 F009          	lfsr	2,9
  4081  001EC8  5004               	movf	fputc@fp^0,w,c
  4082  001ECA  26D9               	addwf	fsr2l,f,c
  4083  001ECC  5005               	movf	(fputc@fp+1)^0,w,c
  4084  001ECE  22DA               	addwfc	fsr2h,f,c
  4085  001ED0  EE10 F003          	lfsr	1,3
  4086  001ED4  5004               	movf	fputc@fp^0,w,c
  4087  001ED6  26E1               	addwf	fsr1l,f,c
  4088  001ED8  5005               	movf	(fputc@fp+1)^0,w,c
  4089  001EDA  22E2               	addwfc	fsr1h,f,c
  4090  001EDC  50DE               	movf	postinc2,w,c
  4091  001EDE  5CE6               	subwf	postinc1,w,c
  4092  001EE0  50E6               	movf	postinc1,w,c
  4093  001EE2  0A80               	xorlw	128
  4094  001EE4  6E0A               	movwf	(??_fputc+4)^0,c
  4095  001EE6  50DE               	movf	postinc2,w,c
  4096  001EE8  0A80               	xorlw	128
  4097  001EEA  580A               	subwfb	(??_fputc+4)^0,w,c
  4098  001EEC  B0D8               	btfsc	status,0,c
  4099  001EEE  EF7B  F00F         	goto	u2431
  4100  001EF2  EF7D  F00F         	goto	u2430
  4101  001EF6                     u2431:
  4102  001EF6  EFA0  F00F         	goto	l1092
  4103  001EFA                     u2430:
  4104  001EFA                     l2825:
  4105  001EFA  EE20 F003          	lfsr	2,3
  4106  001EFE  5004               	movf	fputc@fp^0,w,c
  4107  001F00  26D9               	addwf	fsr2l,f,c
  4108  001F02  5005               	movf	(fputc@fp+1)^0,w,c
  4109  001F04  22DA               	addwfc	fsr2h,f,c
  4110  001F06  CFDE F006          	movff	postinc2,??_fputc
  4111  001F0A  CFDD F007          	movff	postdec2,??_fputc+1
  4112  001F0E  C004  FFD9         	movff	fputc@fp,fsr2l
  4113  001F12  C005  FFDA         	movff	fputc@fp+1,fsr2h
  4114  001F16  CFDE F008          	movff	postinc2,??_fputc+2
  4115  001F1A  CFDD F009          	movff	postdec2,??_fputc+3
  4116  001F1E  5006               	movf	??_fputc^0,w,c
  4117  001F20  2408               	addwf	(??_fputc+2)^0,w,c
  4118  001F22  6ED9               	movwf	fsr2l,c
  4119  001F24  5007               	movf	(??_fputc+1)^0,w,c
  4120  001F26  2009               	addwfc	(??_fputc+3)^0,w,c
  4121  001F28  6EDA               	movwf	fsr2h,c
  4122  001F2A  C002  FFDF         	movff	fputc@c,indf2
  4123  001F2E  EE20 F003          	lfsr	2,3
  4124  001F32  5004               	movf	fputc@fp^0,w,c
  4125  001F34  26D9               	addwf	fsr2l,f,c
  4126  001F36  5005               	movf	(fputc@fp+1)^0,w,c
  4127  001F38  22DA               	addwfc	fsr2h,f,c
  4128  001F3A  2ADE               	incf	postinc2,f,c
  4129  001F3C  0E00               	movlw	0
  4130  001F3E  22DD               	addwfc	postdec2,f,c
  4131  001F40                     l1092:
  4132  001F40  0012               	return		;funcret
  4133  001F42                     __end_of_fputc:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _putch *****************
  4137 ;; Defined at:
  4138 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  c               1    wreg     unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  c               1    0[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_fputc
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text19
  4167  0027A2                     __ptext19:
  4168                           	callstack 0
  4169  0027A2                     _putch:
  4170                           	callstack 24
  4171  0027A2  0012               	return		;funcret
  4172  0027A4                     __end_of_putch:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _abs *****************
  4176 ;; Defined at:
  4177 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  a               2   19[COMRAM] int 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2   19[COMRAM] int 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;Total ram usage:        4 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_dtoa
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text20
  4206  002542                     __ptext20:
  4207                           	callstack 0
  4208  002542                     _abs:
  4209                           	callstack 24
  4210  002542  BE15               	btfsc	(abs@a+1)^0,7,c
  4211  002544  EFAE  F012         	goto	u2630
  4212  002548  5015               	movf	(abs@a+1)^0,w,c
  4213  00254A  E106               	bnz	u2631
  4214  00254C  0414               	decf	abs@a^0,w,c
  4215  00254E  B0D8               	btfsc	status,0,c
  4216  002550  EFAC  F012         	goto	u2631
  4217  002554  EFAE  F012         	goto	u2630
  4218  002558                     u2631:
  4219  002558  EFBC  F012         	goto	l1038
  4220  00255C                     u2630:
  4221  00255C  C014  F016         	movff	abs@a,??_abs
  4222  002560  C015  F017         	movff	abs@a+1,??_abs+1
  4223  002564  1E16               	comf	??_abs^0,f,c
  4224  002566  1E17               	comf	(??_abs+1)^0,f,c
  4225  002568  4A16               	infsnz	??_abs^0,f,c
  4226  00256A  2A17               	incf	(??_abs+1)^0,f,c
  4227  00256C  C016  F014         	movff	??_abs,?_abs
  4228  002570  C017  F015         	movff	??_abs+1,?_abs+1
  4229  002574  EFC0  F012         	goto	l1041
  4230  002578                     l1038:
  4231  002578  C014  F014         	movff	abs@a,?_abs
  4232  00257C  C015  F015         	movff	abs@a+1,?_abs+1
  4233  002580                     l1041:
  4234  002580  0012               	return		;funcret
  4235  002582                     __end_of_abs:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function ___aomod *****************
  4239 ;; Defined at:
  4240 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  dividend        8    1[COMRAM] long long 
  4243 ;;  divisor         8    9[COMRAM] long long 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  sign            1   18[COMRAM] unsigned char 
  4246 ;;  counter         1   17[COMRAM] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  8    1[COMRAM] long long 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4256 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;Total ram usage:       18 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_dtoa
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text21
  4271  001C46                     __ptext21:
  4272                           	callstack 0
  4273  001C46                     ___aomod:
  4274                           	callstack 24
  4275  001C46  0E00               	movlw	0
  4276  001C48  6E13               	movwf	___aomod@sign^0,c
  4277  001C4A  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  4278  001C4C  EF2C  F00E         	goto	u2530
  4279  001C50  EF2A  F00E         	goto	u2531
  4280  001C54                     u2531:
  4281  001C54  EF3E  F00E         	goto	l2905
  4282  001C58                     u2530:
  4283  001C58  1E09               	comf	(___aomod@dividend+7)^0,f,c
  4284  001C5A  1E08               	comf	(___aomod@dividend+6)^0,f,c
  4285  001C5C  1E07               	comf	(___aomod@dividend+5)^0,f,c
  4286  001C5E  1E06               	comf	(___aomod@dividend+4)^0,f,c
  4287  001C60  1E05               	comf	(___aomod@dividend+3)^0,f,c
  4288  001C62  1E04               	comf	(___aomod@dividend+2)^0,f,c
  4289  001C64  1E03               	comf	(___aomod@dividend+1)^0,f,c
  4290  001C66  6C02               	negf	___aomod@dividend^0,c
  4291  001C68  0E00               	movlw	0
  4292  001C6A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  4293  001C6C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  4294  001C6E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  4295  001C70  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  4296  001C72  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  4297  001C74  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  4298  001C76  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  4299  001C78  0E01               	movlw	1
  4300  001C7A  6E13               	movwf	___aomod@sign^0,c
  4301  001C7C                     l2905:
  4302  001C7C  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  4303  001C7E  EF45  F00E         	goto	u2540
  4304  001C82  EF43  F00E         	goto	u2541
  4305  001C86                     u2541:
  4306  001C86  EF55  F00E         	goto	l2909
  4307  001C8A                     u2540:
  4308  001C8A  1E11               	comf	(___aomod@divisor+7)^0,f,c
  4309  001C8C  1E10               	comf	(___aomod@divisor+6)^0,f,c
  4310  001C8E  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  4311  001C90  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  4312  001C92  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  4313  001C94  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  4314  001C96  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  4315  001C98  6C0A               	negf	___aomod@divisor^0,c
  4316  001C9A  0E00               	movlw	0
  4317  001C9C  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  4318  001C9E  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  4319  001CA0  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  4320  001CA2  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  4321  001CA4  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  4322  001CA6  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  4323  001CA8  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  4324  001CAA                     l2909:
  4325  001CAA  500A               	movf	___aomod@divisor^0,w,c
  4326  001CAC  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  4327  001CAE  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  4328  001CB0  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  4329  001CB2  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  4330  001CB4  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  4331  001CB6  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  4332  001CB8  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  4333  001CBA  B4D8               	btfsc	status,2,c
  4334  001CBC  EF62  F00E         	goto	u2551
  4335  001CC0  EF64  F00E         	goto	u2550
  4336  001CC4                     u2551:
  4337  001CC4  EFAC  F00E         	goto	l2925
  4338  001CC8                     u2550:
  4339  001CC8  0E01               	movlw	1
  4340  001CCA  6E12               	movwf	___aomod@counter^0,c
  4341  001CCC  EF72  F00E         	goto	l2915
  4342  001CD0                     l2913:
  4343  001CD0  90D8               	bcf	status,0,c
  4344  001CD2  360A               	rlcf	___aomod@divisor^0,f,c
  4345  001CD4  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  4346  001CD6  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  4347  001CD8  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  4348  001CDA  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  4349  001CDC  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  4350  001CDE  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  4351  001CE0  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  4352  001CE2  2A12               	incf	___aomod@counter^0,f,c
  4353  001CE4                     l2915:
  4354  001CE4  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  4355  001CE6  EF77  F00E         	goto	u2561
  4356  001CEA  EF79  F00E         	goto	u2560
  4357  001CEE                     u2561:
  4358  001CEE  EF68  F00E         	goto	l2913
  4359  001CF2                     u2560:
  4360  001CF2                     l2917:
  4361  001CF2  500A               	movf	___aomod@divisor^0,w,c
  4362  001CF4  5C02               	subwf	___aomod@dividend^0,w,c
  4363  001CF6  500B               	movf	(___aomod@divisor+1)^0,w,c
  4364  001CF8  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  4365  001CFA  500C               	movf	(___aomod@divisor+2)^0,w,c
  4366  001CFC  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  4367  001CFE  500D               	movf	(___aomod@divisor+3)^0,w,c
  4368  001D00  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  4369  001D02  500E               	movf	(___aomod@divisor+4)^0,w,c
  4370  001D04  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  4371  001D06  500F               	movf	(___aomod@divisor+5)^0,w,c
  4372  001D08  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  4373  001D0A  5010               	movf	(___aomod@divisor+6)^0,w,c
  4374  001D0C  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  4375  001D0E  5011               	movf	(___aomod@divisor+7)^0,w,c
  4376  001D10  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  4377  001D12  A0D8               	btfss	status,0,c
  4378  001D14  EF8E  F00E         	goto	u2571
  4379  001D18  EF90  F00E         	goto	u2570
  4380  001D1C                     u2571:
  4381  001D1C  EFA0  F00E         	goto	l2921
  4382  001D20                     u2570:
  4383  001D20  500A               	movf	___aomod@divisor^0,w,c
  4384  001D22  5E02               	subwf	___aomod@dividend^0,f,c
  4385  001D24  500B               	movf	(___aomod@divisor+1)^0,w,c
  4386  001D26  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  4387  001D28  500C               	movf	(___aomod@divisor+2)^0,w,c
  4388  001D2A  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  4389  001D2C  500D               	movf	(___aomod@divisor+3)^0,w,c
  4390  001D2E  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  4391  001D30  500E               	movf	(___aomod@divisor+4)^0,w,c
  4392  001D32  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  4393  001D34  500F               	movf	(___aomod@divisor+5)^0,w,c
  4394  001D36  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  4395  001D38  5010               	movf	(___aomod@divisor+6)^0,w,c
  4396  001D3A  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  4397  001D3C  5011               	movf	(___aomod@divisor+7)^0,w,c
  4398  001D3E  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  4399  001D40                     l2921:
  4400  001D40  90D8               	bcf	status,0,c
  4401  001D42  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  4402  001D44  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  4403  001D46  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  4404  001D48  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  4405  001D4A  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  4406  001D4C  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  4407  001D4E  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  4408  001D50  320A               	rrcf	___aomod@divisor^0,f,c
  4409  001D52  2E12               	decfsz	___aomod@counter^0,f,c
  4410  001D54  EF79  F00E         	goto	l2917
  4411  001D58                     l2925:
  4412  001D58  5013               	movf	___aomod@sign^0,w,c
  4413  001D5A  B4D8               	btfsc	status,2,c
  4414  001D5C  EFB2  F00E         	goto	u2581
  4415  001D60  EFB4  F00E         	goto	u2580
  4416  001D64                     u2581:
  4417  001D64  EFC4  F00E         	goto	l2929
  4418  001D68                     u2580:
  4419  001D68  1E09               	comf	(___aomod@dividend+7)^0,f,c
  4420  001D6A  1E08               	comf	(___aomod@dividend+6)^0,f,c
  4421  001D6C  1E07               	comf	(___aomod@dividend+5)^0,f,c
  4422  001D6E  1E06               	comf	(___aomod@dividend+4)^0,f,c
  4423  001D70  1E05               	comf	(___aomod@dividend+3)^0,f,c
  4424  001D72  1E04               	comf	(___aomod@dividend+2)^0,f,c
  4425  001D74  1E03               	comf	(___aomod@dividend+1)^0,f,c
  4426  001D76  6C02               	negf	___aomod@dividend^0,c
  4427  001D78  0E00               	movlw	0
  4428  001D7A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  4429  001D7C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  4430  001D7E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  4431  001D80  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  4432  001D82  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  4433  001D84  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  4434  001D86  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  4435  001D88                     l2929:
  4436  001D88  C002  F002         	movff	___aomod@dividend,?___aomod
  4437  001D8C  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  4438  001D90  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  4439  001D94  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  4440  001D98  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  4441  001D9C  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  4442  001DA0  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  4443  001DA4  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  4444  001DA8  0012               	return		;funcret
  4445  001DAA                     __end_of___aomod:
  4446                           	callstack 0
  4447                           
  4448 ;; *************** function ___aodiv *****************
  4449 ;; Defined at:
  4450 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  dividend        8    1[COMRAM] long long 
  4453 ;;  divisor         8    9[COMRAM] long long 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  quotient        8   19[COMRAM] long long 
  4456 ;;  sign            1   18[COMRAM] unsigned char 
  4457 ;;  counter         1   17[COMRAM] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  8    1[COMRAM] long long 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4467 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;Total ram usage:       26 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_dtoa
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text22
  4482  001954                     __ptext22:
  4483                           	callstack 0
  4484  001954                     ___aodiv:
  4485                           	callstack 24
  4486  001954  0E00               	movlw	0
  4487  001956  6E13               	movwf	___aodiv@sign^0,c
  4488  001958  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  4489  00195A  EFB3  F00C         	goto	u2460
  4490  00195E  EFB1  F00C         	goto	u2461
  4491  001962                     u2461:
  4492  001962  EFC5  F00C         	goto	l2861
  4493  001966                     u2460:
  4494  001966  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  4495  001968  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  4496  00196A  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  4497  00196C  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  4498  00196E  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  4499  001970  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  4500  001972  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  4501  001974  6C0A               	negf	___aodiv@divisor^0,c
  4502  001976  0E00               	movlw	0
  4503  001978  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  4504  00197A  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  4505  00197C  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  4506  00197E  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  4507  001980  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  4508  001982  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  4509  001984  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  4510  001986  0E01               	movlw	1
  4511  001988  6E13               	movwf	___aodiv@sign^0,c
  4512  00198A                     l2861:
  4513  00198A  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  4514  00198C  EFCC  F00C         	goto	u2470
  4515  001990  EFCA  F00C         	goto	u2471
  4516  001994                     u2471:
  4517  001994  EFDE  F00C         	goto	l2867
  4518  001998                     u2470:
  4519  001998  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  4520  00199A  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  4521  00199C  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  4522  00199E  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  4523  0019A0  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  4524  0019A2  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  4525  0019A4  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  4526  0019A6  6C02               	negf	___aodiv@dividend^0,c
  4527  0019A8  0E00               	movlw	0
  4528  0019AA  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  4529  0019AC  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  4530  0019AE  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  4531  0019B0  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  4532  0019B2  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  4533  0019B4  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  4534  0019B6  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  4535  0019B8  0E01               	movlw	1
  4536  0019BA  1A13               	xorwf	___aodiv@sign^0,f,c
  4537  0019BC                     l2867:
  4538  0019BC  EE20  F014         	lfsr	2,___aodiv@quotient
  4539  0019C0  0E07               	movlw	7
  4540  0019C2                     u2481:
  4541  0019C2  6ADE               	clrf	postinc2,c
  4542  0019C4  06E8               	decf	wreg,f,c
  4543  0019C6  E2FD               	bc	u2481
  4544  0019C8  500A               	movf	___aodiv@divisor^0,w,c
  4545  0019CA  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  4546  0019CC  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  4547  0019CE  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  4548  0019D0  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  4549  0019D2  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  4550  0019D4  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  4551  0019D6  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  4552  0019D8  B4D8               	btfsc	status,2,c
  4553  0019DA  EFF1  F00C         	goto	u2491
  4554  0019DE  EFF3  F00C         	goto	u2490
  4555  0019E2                     u2491:
  4556  0019E2  EF45  F00D         	goto	l2889
  4557  0019E6                     u2490:
  4558  0019E6  0E01               	movlw	1
  4559  0019E8  6E12               	movwf	___aodiv@counter^0,c
  4560  0019EA  EF01  F00D         	goto	l2875
  4561  0019EE                     l2873:
  4562  0019EE  90D8               	bcf	status,0,c
  4563  0019F0  360A               	rlcf	___aodiv@divisor^0,f,c
  4564  0019F2  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  4565  0019F4  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  4566  0019F6  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  4567  0019F8  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  4568  0019FA  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  4569  0019FC  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  4570  0019FE  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  4571  001A00  2A12               	incf	___aodiv@counter^0,f,c
  4572  001A02                     l2875:
  4573  001A02  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  4574  001A04  EF06  F00D         	goto	u2501
  4575  001A08  EF08  F00D         	goto	u2500
  4576  001A0C                     u2501:
  4577  001A0C  EFF7  F00C         	goto	l2873
  4578  001A10                     u2500:
  4579  001A10                     l2877:
  4580  001A10  90D8               	bcf	status,0,c
  4581  001A12  3614               	rlcf	___aodiv@quotient^0,f,c
  4582  001A14  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  4583  001A16  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  4584  001A18  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  4585  001A1A  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  4586  001A1C  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  4587  001A1E  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  4588  001A20  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  4589  001A22  500A               	movf	___aodiv@divisor^0,w,c
  4590  001A24  5C02               	subwf	___aodiv@dividend^0,w,c
  4591  001A26  500B               	movf	(___aodiv@divisor+1)^0,w,c
  4592  001A28  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  4593  001A2A  500C               	movf	(___aodiv@divisor+2)^0,w,c
  4594  001A2C  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  4595  001A2E  500D               	movf	(___aodiv@divisor+3)^0,w,c
  4596  001A30  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  4597  001A32  500E               	movf	(___aodiv@divisor+4)^0,w,c
  4598  001A34  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  4599  001A36  500F               	movf	(___aodiv@divisor+5)^0,w,c
  4600  001A38  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  4601  001A3A  5010               	movf	(___aodiv@divisor+6)^0,w,c
  4602  001A3C  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  4603  001A3E  5011               	movf	(___aodiv@divisor+7)^0,w,c
  4604  001A40  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  4605  001A42  A0D8               	btfss	status,0,c
  4606  001A44  EF26  F00D         	goto	u2511
  4607  001A48  EF28  F00D         	goto	u2510
  4608  001A4C                     u2511:
  4609  001A4C  EF39  F00D         	goto	l2885
  4610  001A50                     u2510:
  4611  001A50  500A               	movf	___aodiv@divisor^0,w,c
  4612  001A52  5E02               	subwf	___aodiv@dividend^0,f,c
  4613  001A54  500B               	movf	(___aodiv@divisor+1)^0,w,c
  4614  001A56  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  4615  001A58  500C               	movf	(___aodiv@divisor+2)^0,w,c
  4616  001A5A  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  4617  001A5C  500D               	movf	(___aodiv@divisor+3)^0,w,c
  4618  001A5E  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  4619  001A60  500E               	movf	(___aodiv@divisor+4)^0,w,c
  4620  001A62  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  4621  001A64  500F               	movf	(___aodiv@divisor+5)^0,w,c
  4622  001A66  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  4623  001A68  5010               	movf	(___aodiv@divisor+6)^0,w,c
  4624  001A6A  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  4625  001A6C  5011               	movf	(___aodiv@divisor+7)^0,w,c
  4626  001A6E  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  4627  001A70  8014               	bsf	___aodiv@quotient^0,0,c
  4628  001A72                     l2885:
  4629  001A72  90D8               	bcf	status,0,c
  4630  001A74  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  4631  001A76  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  4632  001A78  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  4633  001A7A  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  4634  001A7C  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  4635  001A7E  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  4636  001A80  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  4637  001A82  320A               	rrcf	___aodiv@divisor^0,f,c
  4638  001A84  2E12               	decfsz	___aodiv@counter^0,f,c
  4639  001A86  EF08  F00D         	goto	l2877
  4640  001A8A                     l2889:
  4641  001A8A  5013               	movf	___aodiv@sign^0,w,c
  4642  001A8C  B4D8               	btfsc	status,2,c
  4643  001A8E  EF4B  F00D         	goto	u2521
  4644  001A92  EF4D  F00D         	goto	u2520
  4645  001A96                     u2521:
  4646  001A96  EF5D  F00D         	goto	l2893
  4647  001A9A                     u2520:
  4648  001A9A  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  4649  001A9C  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  4650  001A9E  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  4651  001AA0  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  4652  001AA2  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  4653  001AA4  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  4654  001AA6  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  4655  001AA8  6C14               	negf	___aodiv@quotient^0,c
  4656  001AAA  0E00               	movlw	0
  4657  001AAC  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  4658  001AAE  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  4659  001AB0  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  4660  001AB2  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  4661  001AB4  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  4662  001AB6  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  4663  001AB8  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  4664  001ABA                     l2893:
  4665  001ABA  C014  F002         	movff	___aodiv@quotient,?___aodiv
  4666  001ABE  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  4667  001AC2  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  4668  001AC6  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  4669  001ACA  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  4670  001ACE  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  4671  001AD2  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  4672  001AD6  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  4673  001ADA  0012               	return		;funcret
  4674  001ADC                     __end_of___aodiv:
  4675                           	callstack 0
  4676                           
  4677 ;; *************** function _atoi *****************
  4678 ;; Defined at:
  4679 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\atoi.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4682 ;;		 -> STR_3(12), STR_2(16), STR_1(8), 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  n               2   16[COMRAM] int 
  4685 ;;  neg             2   14[COMRAM] int 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  2    8[COMRAM] int 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;Total ram usage:       10 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 2
  4702 ;; This function calls:
  4703 ;;		___wmul
  4704 ;;		_isdigit
  4705 ;;		_isspace
  4706 ;; This function is called by:
  4707 ;;		_vfpfcnvrt
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text23
  4712  001ADC                     __ptext23:
  4713                           	callstack 0
  4714  001ADC                     _atoi:
  4715                           	callstack 24
  4716  001ADC  0E00               	movlw	0
  4717  001ADE  6E12               	movwf	(atoi@n+1)^0,c
  4718  001AE0  0E00               	movlw	0
  4719  001AE2  6E11               	movwf	atoi@n^0,c
  4720  001AE4  0E00               	movlw	0
  4721  001AE6  6E10               	movwf	(atoi@neg+1)^0,c
  4722  001AE8  0E00               	movlw	0
  4723  001AEA  6E0F               	movwf	atoi@neg^0,c
  4724  001AEC  EF7A  F00D         	goto	l3043
  4725  001AF0                     l3039:
  4726  001AF0  4A09               	infsnz	atoi@s^0,f,c
  4727  001AF2  2A0A               	incf	(atoi@s+1)^0,f,c
  4728  001AF4                     l3043:
  4729  001AF4  C009  FFF6         	movff	atoi@s,tblptrl
  4730  001AF8  C00A  FFF7         	movff	atoi@s+1,tblptrh
  4731  001AFC                     	if	0	;tblptru may be non-zero
  4732  001AFC                     	endif
  4733  001AFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4734  001AFC  0E00               	movlw	low (__mediumconst shr (0+16))
  4735  001AFE  6EF8               	movwf	tblptru,c
  4736  001B00                     	endif
  4737  001B00  0008               	tblrd		*
  4738  001B02  50F5               	movf	tablat,w,c
  4739  001B04  0A20               	xorlw	32
  4740  001B06  B4D8               	btfsc	status,2,c
  4741  001B08  EF88  F00D         	goto	u2831
  4742  001B0C  EF8A  F00D         	goto	u2830
  4743  001B10                     u2831:
  4744  001B10  EF78  F00D         	goto	l3039
  4745  001B14                     u2830:
  4746  001B14  0EF7               	movlw	247
  4747  001B16  6E0B               	movwf	??_atoi^0,c
  4748  001B18  0EFF               	movlw	255
  4749  001B1A  6E0C               	movwf	(??_atoi+1)^0,c
  4750  001B1C  C009  FFF6         	movff	atoi@s,tblptrl
  4751  001B20  C00A  FFF7         	movff	atoi@s+1,tblptrh
  4752  001B24                     	if	0	;tblptru may be non-zero
  4753  001B24                     	endif
  4754  001B24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4755  001B24  0E00               	movlw	low (__mediumconst shr (0+16))
  4756  001B26  6EF8               	movwf	tblptru,c
  4757  001B28                     	endif
  4758  001B28  0008               	tblrd		*
  4759  001B2A  50F5               	movf	tablat,w,c
  4760  001B2C  6E0D               	movwf	(??_atoi+2)^0,c
  4761  001B2E  6A0E               	clrf	(??_atoi+3)^0,c
  4762  001B30  500B               	movf	??_atoi^0,w,c
  4763  001B32  260D               	addwf	(??_atoi+2)^0,f,c
  4764  001B34  500C               	movf	(??_atoi+1)^0,w,c
  4765  001B36  220E               	addwfc	(??_atoi+3)^0,f,c
  4766  001B38  500E               	movf	(??_atoi+3)^0,w,c
  4767  001B3A  E109               	bnz	u2840
  4768  001B3C  0E05               	movlw	5
  4769  001B3E  5C0D               	subwf	(??_atoi+2)^0,w,c
  4770  001B40  A0D8               	btfss	status,0,c
  4771  001B42  EFA5  F00D         	goto	u2841
  4772  001B46  EFA7  F00D         	goto	u2840
  4773  001B4A                     u2841:
  4774  001B4A  EF78  F00D         	goto	l3039
  4775  001B4E                     u2840:
  4776  001B4E  EFB1  F00D         	goto	l3051
  4777  001B52                     l3047:
  4778  001B52  0E00               	movlw	0
  4779  001B54  6E10               	movwf	(atoi@neg+1)^0,c
  4780  001B56  0E01               	movlw	1
  4781  001B58  6E0F               	movwf	atoi@neg^0,c
  4782  001B5A                     l3049:
  4783  001B5A  4A09               	infsnz	atoi@s^0,f,c
  4784  001B5C  2A0A               	incf	(atoi@s+1)^0,f,c
  4785  001B5E  EFEA  F00D         	goto	l3059
  4786  001B62                     l3051:
  4787  001B62  C009  FFF6         	movff	atoi@s,tblptrl
  4788  001B66  C00A  FFF7         	movff	atoi@s+1,tblptrh
  4789  001B6A                     	if	0	;tblptru may be non-zero
  4790  001B6A                     	endif
  4791  001B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4792  001B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  4793  001B6C  6EF8               	movwf	tblptru,c
  4794  001B6E                     	endif
  4795  001B6E  0008               	tblrd		*
  4796  001B70  50F5               	movf	tablat,w,c
  4797  001B72  6E0B               	movwf	??_atoi^0,c
  4798  001B74  6A0C               	clrf	(??_atoi+1)^0,c
  4799                           
  4800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4801                           ; Switch size 1, requested type "simple"
  4802                           ; Number of cases is 1, Range of values is 0 to 0
  4803                           ; switch strategies available:
  4804                           ; Name         Instructions Cycles
  4805                           ; simple_byte            4     3 (average)
  4806                           ;	Chosen strategy is simple_byte
  4807  001B76  500C               	movf	(??_atoi+1)^0,w,c
  4808  001B78  0A00               	xorlw	0	; case 0
  4809  001B7A  B4D8               	btfsc	status,2,c
  4810  001B7C  EFC2  F00D         	goto	l3413
  4811  001B80  EFEA  F00D         	goto	l3059
  4812  001B84                     l3413:
  4813                           
  4814                           ; Switch size 1, requested type "simple"
  4815                           ; Number of cases is 2, Range of values is 43 to 45
  4816                           ; switch strategies available:
  4817                           ; Name         Instructions Cycles
  4818                           ; simple_byte            7     4 (average)
  4819                           ;	Chosen strategy is simple_byte
  4820  001B84  500B               	movf	??_atoi^0,w,c
  4821  001B86  0A2B               	xorlw	43	; case 43
  4822  001B88  B4D8               	btfsc	status,2,c
  4823  001B8A  EFAD  F00D         	goto	l3049
  4824  001B8E  0A06               	xorlw	6	; case 45
  4825  001B90  B4D8               	btfsc	status,2,c
  4826  001B92  EFA9  F00D         	goto	l3047
  4827  001B96  EFEA  F00D         	goto	l3059
  4828  001B9A                     l3053:
  4829  001B9A  C011  F002         	movff	atoi@n,___wmul@multiplier
  4830  001B9E  C012  F003         	movff	atoi@n+1,___wmul@multiplier+1
  4831  001BA2  0E00               	movlw	0
  4832  001BA4  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  4833  001BA6  0E0A               	movlw	10
  4834  001BA8  6E04               	movwf	___wmul@multiplicand^0,c
  4835  001BAA  EC47  F013         	call	___wmul	;wreg free
  4836  001BAE  C009  FFF6         	movff	atoi@s,tblptrl
  4837  001BB2  C00A  FFF7         	movff	atoi@s+1,tblptrh
  4838  001BB6                     	if	0	;tblptru may be non-zero
  4839  001BB6                     	endif
  4840  001BB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4841  001BB6  0E00               	movlw	low (__mediumconst shr (0+16))
  4842  001BB8  6EF8               	movwf	tblptru,c
  4843  001BBA                     	endif
  4844  001BBA  0008               	tblrd		*
  4845  001BBC  50F5               	movf	tablat,w,c
  4846  001BBE  5E02               	subwf	?___wmul^0,f,c
  4847  001BC0  0E00               	movlw	0
  4848  001BC2  5A03               	subwfb	(?___wmul+1)^0,f,c
  4849  001BC4  0E30               	movlw	48
  4850  001BC6  2402               	addwf	?___wmul^0,w,c
  4851  001BC8  6E11               	movwf	atoi@n^0,c
  4852  001BCA  0E00               	movlw	0
  4853  001BCC  2003               	addwfc	(?___wmul+1)^0,w,c
  4854  001BCE  6E12               	movwf	(atoi@n+1)^0,c
  4855  001BD0  EFAD  F00D         	goto	l3049
  4856  001BD4                     l3059:
  4857  001BD4  0ED0               	movlw	208
  4858  001BD6  6E0B               	movwf	??_atoi^0,c
  4859  001BD8  0EFF               	movlw	255
  4860  001BDA  6E0C               	movwf	(??_atoi+1)^0,c
  4861  001BDC  C009  FFF6         	movff	atoi@s,tblptrl
  4862  001BE0  C00A  FFF7         	movff	atoi@s+1,tblptrh
  4863  001BE4                     	if	0	;tblptru may be non-zero
  4864  001BE4                     	endif
  4865  001BE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4866  001BE4  0E00               	movlw	low (__mediumconst shr (0+16))
  4867  001BE6  6EF8               	movwf	tblptru,c
  4868  001BE8                     	endif
  4869  001BE8  0008               	tblrd		*
  4870  001BEA  50F5               	movf	tablat,w,c
  4871  001BEC  6E0D               	movwf	(??_atoi+2)^0,c
  4872  001BEE  6A0E               	clrf	(??_atoi+3)^0,c
  4873  001BF0  500B               	movf	??_atoi^0,w,c
  4874  001BF2  260D               	addwf	(??_atoi+2)^0,f,c
  4875  001BF4  500C               	movf	(??_atoi+1)^0,w,c
  4876  001BF6  220E               	addwfc	(??_atoi+3)^0,f,c
  4877  001BF8  500E               	movf	(??_atoi+3)^0,w,c
  4878  001BFA  E109               	bnz	u2850
  4879  001BFC  0E0A               	movlw	10
  4880  001BFE  5C0D               	subwf	(??_atoi+2)^0,w,c
  4881  001C00  A0D8               	btfss	status,0,c
  4882  001C02  EF05  F00E         	goto	u2851
  4883  001C06  EF07  F00E         	goto	u2850
  4884  001C0A                     u2851:
  4885  001C0A  EFCD  F00D         	goto	l3053
  4886  001C0E                     u2850:
  4887  001C0E  500F               	movf	atoi@neg^0,w,c
  4888  001C10  1010               	iorwf	(atoi@neg+1)^0,w,c
  4889  001C12  A4D8               	btfss	status,2,c
  4890  001C14  EF0E  F00E         	goto	u2861
  4891  001C18  EF10  F00E         	goto	u2860
  4892  001C1C                     u2861:
  4893  001C1C  EF1E  F00E         	goto	l1063
  4894  001C20                     u2860:
  4895  001C20  C011  F00B         	movff	atoi@n,??_atoi
  4896  001C24  C012  F00C         	movff	atoi@n+1,??_atoi+1
  4897  001C28  1E0B               	comf	??_atoi^0,f,c
  4898  001C2A  1E0C               	comf	(??_atoi+1)^0,f,c
  4899  001C2C  4A0B               	infsnz	??_atoi^0,f,c
  4900  001C2E  2A0C               	incf	(??_atoi+1)^0,f,c
  4901  001C30  C00B  F009         	movff	??_atoi,?_atoi
  4902  001C34  C00C  F00A         	movff	??_atoi+1,?_atoi+1
  4903  001C38  EF22  F00E         	goto	l1066
  4904  001C3C                     l1063:
  4905  001C3C  C011  F009         	movff	atoi@n,?_atoi
  4906  001C40  C012  F00A         	movff	atoi@n+1,?_atoi+1
  4907  001C44                     l1066:
  4908  001C44  0012               	return		;funcret
  4909  001C46                     __end_of_atoi:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _isspace *****************
  4913 ;; Defined at:
  4914 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isspace.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  c               2    1[COMRAM] int 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2    1[COMRAM] int 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;Total ram usage:        7 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_atoi
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text24
  4943  002464                     __ptext24:
  4944                           	callstack 0
  4945  002464                     _isspace:
  4946                           	callstack 24
  4947  002464  0E01               	movlw	1
  4948  002466  6E08               	movwf	_isspace$1969^0,c
  4949  002468  0E20               	movlw	32
  4950  00246A  1802               	xorwf	isspace@c^0,w,c
  4951  00246C  1003               	iorwf	(isspace@c+1)^0,w,c
  4952  00246E  B4D8               	btfsc	status,2,c
  4953  002470  EF3C  F012         	goto	u2661
  4954  002474  EF3E  F012         	goto	u2660
  4955  002478                     u2661:
  4956  002478  EF57  F012         	goto	l2971
  4957  00247C                     u2660:
  4958  00247C  0EF7               	movlw	247
  4959  00247E  6E04               	movwf	??_isspace^0,c
  4960  002480  0EFF               	movlw	255
  4961  002482  6E05               	movwf	(??_isspace+1)^0,c
  4962  002484  C002  F006         	movff	isspace@c,??_isspace+2
  4963  002488  C003  F007         	movff	isspace@c+1,??_isspace+3
  4964  00248C  5004               	movf	??_isspace^0,w,c
  4965  00248E  2606               	addwf	(??_isspace+2)^0,f,c
  4966  002490  5005               	movf	(??_isspace+1)^0,w,c
  4967  002492  2207               	addwfc	(??_isspace+3)^0,f,c
  4968  002494  5007               	movf	(??_isspace+3)^0,w,c
  4969  002496  E109               	bnz	u2670
  4970  002498  0E05               	movlw	5
  4971  00249A  5C06               	subwf	(??_isspace+2)^0,w,c
  4972  00249C  A0D8               	btfss	status,0,c
  4973  00249E  EF53  F012         	goto	u2671
  4974  0024A2  EF55  F012         	goto	u2670
  4975  0024A6                     u2671:
  4976  0024A6  EF57  F012         	goto	l2971
  4977  0024AA                     u2670:
  4978  0024AA  0E00               	movlw	0
  4979  0024AC  6E08               	movwf	_isspace$1969^0,c
  4980  0024AE                     l2971:
  4981  0024AE  C008  F002         	movff	_isspace$1969,?_isspace
  4982  0024B2  6A03               	clrf	(?_isspace+1)^0,c
  4983  0024B4  0012               	return		;funcret
  4984  0024B6                     __end_of_isspace:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function _isdigit *****************
  4988 ;; Defined at:
  4989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isdigit.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  c               2    1[COMRAM] int 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  2    1[COMRAM] int 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;Total ram usage:        6 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; Hardware stack levels required when called: 1
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_vfpfcnvrt
  5014 ;;		_atoi
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text25
  5019  0025BC                     __ptext25:
  5020                           	callstack 0
  5021  0025BC                     _isdigit:
  5022                           	callstack 25
  5023  0025BC  0ED0               	movlw	208
  5024  0025BE  6E04               	movwf	??_isdigit^0,c
  5025  0025C0  0EFF               	movlw	255
  5026  0025C2  6E05               	movwf	(??_isdigit+1)^0,c
  5027  0025C4  C002  F006         	movff	isdigit@c,??_isdigit+2
  5028  0025C8  C003  F007         	movff	isdigit@c+1,??_isdigit+3
  5029  0025CC  5004               	movf	??_isdigit^0,w,c
  5030  0025CE  2606               	addwf	(??_isdigit+2)^0,f,c
  5031  0025D0  5005               	movf	(??_isdigit+1)^0,w,c
  5032  0025D2  2207               	addwfc	(??_isdigit+3)^0,f,c
  5033  0025D4  5007               	movf	(??_isdigit+3)^0,w,c
  5034  0025D6  E10A               	bnz	u2640
  5035  0025D8  0E0A               	movlw	10
  5036  0025DA  5C06               	subwf	(??_isdigit+2)^0,w,c
  5037  0025DC  A0D8               	btfss	status,0,c
  5038  0025DE  EFF3  F012         	goto	u2641
  5039  0025E2  EFF6  F012         	goto	u2640
  5040  0025E6                     u2641:
  5041  0025E6  0E01               	movlw	1
  5042  0025E8  EFF7  F012         	goto	u2650
  5043  0025EC                     u2640:
  5044  0025EC  0E00               	movlw	0
  5045  0025EE                     u2650:
  5046  0025EE  6E02               	movwf	?_isdigit^0,c
  5047  0025F0  6A03               	clrf	(?_isdigit+1)^0,c
  5048  0025F2  0012               	return		;funcret
  5049  0025F4                     __end_of_isdigit:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function ___wmul *****************
  5053 ;; Defined at:
  5054 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  multiplier      2    1[COMRAM] unsigned int 
  5057 ;;  multiplicand    2    3[COMRAM] unsigned int 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  product         2    5[COMRAM] unsigned int 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  2    1[COMRAM] unsigned int 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0, prodl, prodh
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;Total ram usage:        6 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 1
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		_atoi
  5080 ;;		_ADC2String
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text26
  5085  00268E                     __ptext26:
  5086                           	callstack 0
  5087  00268E                     ___wmul:
  5088                           	callstack 24
  5089  00268E  5002               	movf	___wmul@multiplier^0,w,c
  5090  002690  0204               	mulwf	___wmul@multiplicand^0,c
  5091  002692  CFF3 F006          	movff	prodl,___wmul@product
  5092  002696  CFF4 F007          	movff	prodh,___wmul@product+1
  5093  00269A  5002               	movf	___wmul@multiplier^0,w,c
  5094  00269C  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  5095  00269E  50F3               	movf	243,w,c
  5096  0026A0  2607               	addwf	(___wmul@product+1)^0,f,c
  5097  0026A2  5003               	movf	(___wmul@multiplier+1)^0,w,c
  5098  0026A4  0204               	mulwf	___wmul@multiplicand^0,c
  5099  0026A6  50F3               	movf	243,w,c
  5100  0026A8  2607               	addwf	(___wmul@product+1)^0,f,c
  5101  0026AA  C006  F002         	movff	___wmul@product,?___wmul
  5102  0026AE  C007  F003         	movff	___wmul@product+1,?___wmul+1
  5103  0026B2  0012               	return		;funcret
  5104  0026B4                     __end_of___wmul:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function _LCD_setline *****************
  5108 ;; Defined at:
  5109 ;;		line 109 in file "LCD.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  line            1    wreg     unsigned char 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  line            1    6[COMRAM] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;Total ram usage:        1 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 4
  5130 ;; This function calls:
  5131 ;;		_LCD_sendbyte
  5132 ;; This function is called by:
  5133 ;;		_LCD_setlines
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text27
  5138  002582                     __ptext27:
  5139                           	callstack 0
  5140  002582                     _LCD_setline:
  5141                           	callstack 25
  5142                           
  5143                           ;incstack = 0
  5144                           ;LCD_setline@line stored from wreg
  5145  002582  6E07               	movwf	LCD_setline@line^0,c
  5146  002584                     
  5147                           ;LCD.c: 109: void LCD_setline (char line);LCD.c: 110: {;LCD.c: 112:     if (line==1){
  5148  002584  0407               	decf	LCD_setline@line^0,w,c
  5149  002586  A4D8               	btfss	status,2,c
  5150  002588  EFC8  F012         	goto	u1841
  5151  00258C  EFCA  F012         	goto	u1840
  5152  002590                     u1841:
  5153  002590  EFCF  F012         	goto	l2371
  5154  002594                     u1840:
  5155  002594                     
  5156                           ;LCD.c: 113:        LCD_sendbyte(0x80,0);}
  5157  002594  0E00               	movlw	0
  5158  002596  6E03               	movwf	LCD_sendbyte@type^0,c
  5159  002598  0E80               	movlw	128
  5160  00259A  EC2F  F013         	call	_LCD_sendbyte
  5161  00259E                     l2371:
  5162                           
  5163                           ;LCD.c: 115:     if (line==2){
  5164  00259E  0E02               	movlw	2
  5165  0025A0  1807               	xorwf	LCD_setline@line^0,w,c
  5166  0025A2  A4D8               	btfss	status,2,c
  5167  0025A4  EFD6  F012         	goto	u1851
  5168  0025A8  EFD8  F012         	goto	u1850
  5169  0025AC                     u1851:
  5170  0025AC  EFDD  F012         	goto	l242
  5171  0025B0                     u1850:
  5172  0025B0                     
  5173                           ;LCD.c: 116:         LCD_sendbyte(0xC0,0);}
  5174  0025B0  0E00               	movlw	0
  5175  0025B2  6E03               	movwf	LCD_sendbyte@type^0,c
  5176  0025B4  0EC0               	movlw	192
  5177  0025B6  EC2F  F013         	call	_LCD_sendbyte
  5178  0025BA                     l242:
  5179  0025BA  0012               	return		;funcret
  5180  0025BC                     __end_of_LCD_setline:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function _LCD_sendstring *****************
  5184 ;; Defined at:
  5185 ;;		line 121 in file "LCD.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  string          2    6[COMRAM] PTR unsigned char 
  5188 ;;		 -> LCD_setlines@line2(20), LCD_setlines@line1(20), 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;Total ram usage:        2 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 4
  5207 ;; This function calls:
  5208 ;;		_LCD_sendbyte
  5209 ;; This function is called by:
  5210 ;;		_LCD_setlines
  5211 ;;		_ADC2String
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text28
  5216  00262A                     __ptext28:
  5217                           	callstack 0
  5218  00262A                     _LCD_sendstring:
  5219                           	callstack 25
  5220  00262A                     
  5221                           ;LCD.c: 121: void LCD_sendstring(char *string);LCD.c: 122: {;LCD.c: 123:  while(*string 
      +                          != 0){
  5222  00262A  EF22  F013         	goto	l2381
  5223  00262E                     l2377:
  5224                           
  5225                           ;LCD.c: 124:   LCD_sendbyte(*string++,1);
  5226  00262E  0E01               	movlw	1
  5227  002630  6E03               	movwf	LCD_sendbyte@type^0,c
  5228  002632  C007  FFD9         	movff	LCD_sendstring@string,fsr2l
  5229  002636  C008  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5230  00263A  50DF               	movf	indf2,w,c
  5231  00263C  EC2F  F013         	call	_LCD_sendbyte
  5232  002640  4A07               	infsnz	LCD_sendstring@string^0,f,c
  5233  002642  2A08               	incf	(LCD_sendstring@string+1)^0,f,c
  5234  002644                     l2381:
  5235                           
  5236                           ;LCD.c: 123:  while(*string != 0){
  5237  002644  C007  FFD9         	movff	LCD_sendstring@string,fsr2l
  5238  002648  C008  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  5239  00264C  50DF               	movf	indf2,w,c
  5240  00264E  A4D8               	btfss	status,2,c
  5241  002650  EF2C  F013         	goto	u1861
  5242  002654  EF2E  F013         	goto	u1860
  5243  002658                     u1861:
  5244  002658  EF17  F013         	goto	l2377
  5245  00265C                     u1860:
  5246  00265C  0012               	return		;funcret
  5247  00265E                     __end_of_LCD_sendstring:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function _LCD_Init *****************
  5251 ;; Defined at:
  5252 ;;		line 55 in file "LCD.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;Total ram usage:        1 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 4
  5273 ;; This function calls:
  5274 ;;		_LCD_sendbyte
  5275 ;;		_LCD_sendnibble
  5276 ;; This function is called by:
  5277 ;;		_main
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text29
  5282  002188                     __ptext29:
  5283                           	callstack 0
  5284  002188                     _LCD_Init:
  5285                           	callstack 26
  5286  002188                     
  5287                           ;LCD.c: 57:     TRISBbits.TRISB3= 0;
  5288  002188  9682               	bcf	130,3,c	;volatile
  5289                           
  5290                           ;LCD.c: 58:     TRISBbits.TRISB2= 0;
  5291  00218A  9482               	bcf	130,2,c	;volatile
  5292                           
  5293                           ;LCD.c: 59:     TRISEbits.TRISE3= 0;
  5294  00218C  9685               	bcf	133,3,c	;volatile
  5295                           
  5296                           ;LCD.c: 60:     TRISEbits.TRISE1= 0;
  5297  00218E  9285               	bcf	133,1,c	;volatile
  5298                           
  5299                           ;LCD.c: 61:     TRISCbits.TRISC6= 0;
  5300  002190  9C83               	bcf	131,6,c	;volatile
  5301                           
  5302                           ;LCD.c: 62:     TRISCbits.TRISC2= 0;
  5303  002192  9483               	bcf	131,2,c	;volatile
  5304                           
  5305                           ;LCD.c: 65:     LATBbits.LATB3=0;
  5306  002194  967A               	bcf	122,3,c	;volatile
  5307                           
  5308                           ;LCD.c: 66:     LATBbits.LATB2=0;
  5309  002196  947A               	bcf	122,2,c	;volatile
  5310                           
  5311                           ;LCD.c: 67:     LATEbits.LATE3=0;
  5312  002198  967D               	bcf	125,3,c	;volatile
  5313                           
  5314                           ;LCD.c: 68:     LATEbits.LATE1=0;
  5315  00219A  927D               	bcf	125,1,c	;volatile
  5316                           
  5317                           ;LCD.c: 69:     LATCbits.LATC6=0;
  5318  00219C  9C7B               	bcf	123,6,c	;volatile
  5319                           
  5320                           ;LCD.c: 70:     LATCbits.LATC2=0;
  5321  00219E  947B               	bcf	123,2,c	;volatile
  5322  0021A0                     
  5323                           ;LCD.c: 74:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  5324  0021A0  0ED5               	movlw	213
  5325  0021A2                     u3277:
  5326  0021A2  2EE8               	decfsz	wreg,f,c
  5327  0021A4  D7FE               	bra	u3277
  5328  0021A6  F000               	nop	
  5329  0021A8                     
  5330                           ;LCD.c: 75:     LCD_sendnibble(0b0011);
  5331  0021A8  0E03               	movlw	3
  5332  0021AA  EC47  F011         	call	_LCD_sendnibble
  5333  0021AE                     
  5334                           ;LCD.c: 76:     _delay((unsigned long)((40)*(64000000/4000000.0))) ;
  5335  0021AE  0ED5               	movlw	213
  5336  0021B0                     u3287:
  5337  0021B0  2EE8               	decfsz	wreg,f,c
  5338  0021B2  D7FE               	bra	u3287
  5339  0021B4  F000               	nop	
  5340  0021B6                     
  5341                           ;LCD.c: 78:     LCD_sendbyte(0b00101000,0);
  5342  0021B6  0E00               	movlw	0
  5343  0021B8  6E03               	movwf	LCD_sendbyte@type^0,c
  5344  0021BA  0E28               	movlw	40
  5345  0021BC  EC2F  F013         	call	_LCD_sendbyte
  5346  0021C0                     
  5347                           ;LCD.c: 84:     _delay((unsigned long)((40)*(64000000/4000000.0))) ;
  5348  0021C0  0ED5               	movlw	213
  5349  0021C2                     u3297:
  5350  0021C2  2EE8               	decfsz	wreg,f,c
  5351  0021C4  D7FE               	bra	u3297
  5352  0021C6  F000               	nop	
  5353  0021C8                     
  5354                           ;LCD.c: 86:     LCD_sendbyte(0b00101000,0);
  5355  0021C8  0E00               	movlw	0
  5356  0021CA  6E03               	movwf	LCD_sendbyte@type^0,c
  5357  0021CC  0E28               	movlw	40
  5358  0021CE  EC2F  F013         	call	_LCD_sendbyte
  5359  0021D2                     
  5360                           ;LCD.c: 87:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  5361  0021D2  0ED5               	movlw	213
  5362  0021D4                     u3307:
  5363  0021D4  2EE8               	decfsz	wreg,f,c
  5364  0021D6  D7FE               	bra	u3307
  5365  0021D8  F000               	nop	
  5366  0021DA                     
  5367                           ;LCD.c: 89:     LCD_sendbyte(0b00000001,0);
  5368  0021DA  0E00               	movlw	0
  5369  0021DC  6E03               	movwf	LCD_sendbyte@type^0,c
  5370  0021DE  0E01               	movlw	1
  5371  0021E0  EC2F  F013         	call	_LCD_sendbyte
  5372  0021E4                     
  5373                           ;LCD.c: 94:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  5374  0021E4  0ED5               	movlw	213
  5375  0021E6                     u3317:
  5376  0021E6  2EE8               	decfsz	wreg,f,c
  5377  0021E8  D7FE               	bra	u3317
  5378  0021EA  F000               	nop	
  5379  0021EC                     
  5380                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  5381  0021EC  0E00               	movlw	0
  5382  0021EE  6E03               	movwf	LCD_sendbyte@type^0,c
  5383  0021F0  0E06               	movlw	6
  5384  0021F2  EC2F  F013         	call	_LCD_sendbyte
  5385  0021F6                     
  5386                           ;LCD.c: 98:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5387  0021F6  0E2A               	movlw	42
  5388  0021F8  6E07               	movwf	??_LCD_Init^0,c
  5389  0021FA  0E8E               	movlw	142
  5390  0021FC                     u3327:
  5391  0021FC  2EE8               	decfsz	wreg,f,c
  5392  0021FE  D7FE               	bra	u3327
  5393  002200  2E07               	decfsz	??_LCD_Init^0,f,c
  5394  002202  D7FC               	bra	u3327
  5395  002204                     
  5396                           ;LCD.c: 100:     LCD_sendbyte(0b00001110,0);
  5397  002204  0E00               	movlw	0
  5398  002206  6E03               	movwf	LCD_sendbyte@type^0,c
  5399  002208  0E0E               	movlw	14
  5400  00220A  EC2F  F013         	call	_LCD_sendbyte
  5401  00220E                     
  5402                           ;LCD.c: 104:     _delay((unsigned long)((2)*(64000000/4000.0)));
  5403  00220E  0E2A               	movlw	42
  5404  002210  6E07               	movwf	??_LCD_Init^0,c
  5405  002212  0E8E               	movlw	142
  5406  002214                     u3337:
  5407  002214  2EE8               	decfsz	wreg,f,c
  5408  002216  D7FE               	bra	u3337
  5409  002218  2E07               	decfsz	??_LCD_Init^0,f,c
  5410  00221A  D7FC               	bra	u3337
  5411  00221C  0012               	return		;funcret
  5412  00221E                     __end_of_LCD_Init:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _LCD_sendbyte *****************
  5416 ;; Defined at:
  5417 ;;		line 39 in file "LCD.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  Byte            1    wreg     unsigned char 
  5420 ;;  type            1    2[COMRAM] unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  Byte            1    5[COMRAM] unsigned char 
  5423 ;;  LB              1    4[COMRAM] unsigned char 
  5424 ;;  HB              1    3[COMRAM] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5434 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:        4 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 3
  5441 ;; This function calls:
  5442 ;;		_LCD_sendnibble
  5443 ;; This function is called by:
  5444 ;;		_LCD_Init
  5445 ;;		_LCD_setline
  5446 ;;		_LCD_sendstring
  5447 ;;		_LCD_setlines
  5448 ;;		_LCD_scroll
  5449 ;;		_ADC2String
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text30
  5454  00265E                     __ptext30:
  5455                           	callstack 0
  5456  00265E                     _LCD_sendbyte:
  5457                           	callstack 25
  5458                           
  5459                           ;incstack = 0
  5460                           ;LCD_sendbyte@Byte stored from wreg
  5461  00265E  6E06               	movwf	LCD_sendbyte@Byte^0,c
  5462  002660                     
  5463                           ;LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 40: {;LCD.c: 42:    
      +                           LATCbits.LATC6 = type;
  5464  002660  B003               	btfsc	LCD_sendbyte@type^0,0,c
  5465  002662  D002               	bra	u1825
  5466  002664  9C7B               	bcf	123,6,c	;volatile
  5467  002666  D001               	bra	u1826
  5468  002668                     u1825:
  5469  002668  8C7B               	bsf	123,6,c	;volatile
  5470  00266A                     u1826:
  5471  00266A                     
  5472                           ;LCD.c: 44:     unsigned char HB = Byte & 0b11110000;
  5473  00266A  5006               	movf	LCD_sendbyte@Byte^0,w,c
  5474  00266C  0BF0               	andlw	240
  5475  00266E  6E04               	movwf	LCD_sendbyte@HB^0,c
  5476  002670                     
  5477                           ;LCD.c: 45:     LCD_sendnibble (HB>>4);
  5478  002670  3804               	swapf	LCD_sendbyte@HB^0,w,c
  5479  002672  0B0F               	andlw	15
  5480  002674  EC47  F011         	call	_LCD_sendnibble
  5481  002678                     
  5482                           ;LCD.c: 47:     unsigned char LB = Byte & 0b00001111;
  5483  002678  5006               	movf	LCD_sendbyte@Byte^0,w,c
  5484  00267A  0B0F               	andlw	15
  5485  00267C  6E05               	movwf	LCD_sendbyte@LB^0,c
  5486  00267E                     
  5487                           ;LCD.c: 48:     LCD_sendnibble(LB);
  5488  00267E  5005               	movf	LCD_sendbyte@LB^0,w,c
  5489  002680  EC47  F011         	call	_LCD_sendnibble
  5490  002684                     
  5491                           ;LCD.c: 49:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5492  002684  0EA0               	movlw	160
  5493  002686                     u3347:
  5494  002686  D000               	nop2	
  5495  002688  2EE8               	decfsz	wreg,f,c
  5496  00268A  D7FD               	bra	u3347
  5497  00268C  0012               	return		;funcret
  5498  00268E                     __end_of_LCD_sendbyte:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _LCD_sendnibble *****************
  5502 ;; Defined at:
  5503 ;;		line 21 in file "LCD.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  number          1    wreg     unsigned char 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  number          1    1[COMRAM] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:        1 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 2
  5524 ;; This function calls:
  5525 ;;		_LCD_E_TOG
  5526 ;; This function is called by:
  5527 ;;		_LCD_sendbyte
  5528 ;;		_LCD_Init
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text31
  5533  00228E                     __ptext31:
  5534                           	callstack 0
  5535  00228E                     _LCD_sendnibble:
  5536                           	callstack 25
  5537                           
  5538                           ;incstack = 0
  5539                           ;LCD_sendnibble@number stored from wreg
  5540  00228E  6E02               	movwf	LCD_sendnibble@number^0,c
  5541  002290                     
  5542                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 25:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 =1;} else {LATBbits.LATB3=0;}
  5543  002290  A002               	btfss	LCD_sendnibble@number^0,0,c
  5544  002292  EF4D  F011         	goto	u1691
  5545  002296  EF4F  F011         	goto	u1690
  5546  00229A                     u1691:
  5547  00229A  EF52  F011         	goto	l223
  5548  00229E                     u1690:
  5549  00229E  867A               	bsf	122,3,c	;volatile
  5550  0022A0  EF53  F011         	goto	l2231
  5551  0022A4                     l223:
  5552  0022A4  967A               	bcf	122,3,c	;volatile
  5553  0022A6                     l2231:
  5554                           
  5555                           ;LCD.c: 26:     if (number & 0b0010) {LATBbits.LATB2 =1;} else {LATBbits.LATB2=0;}
  5556  0022A6  A202               	btfss	LCD_sendnibble@number^0,1,c
  5557  0022A8  EF58  F011         	goto	u1701
  5558  0022AC  EF5A  F011         	goto	u1700
  5559  0022B0                     u1701:
  5560  0022B0  EF5D  F011         	goto	l225
  5561  0022B4                     u1700:
  5562  0022B4  847A               	bsf	122,2,c	;volatile
  5563  0022B6  EF5E  F011         	goto	l2235
  5564  0022BA                     l225:
  5565  0022BA  947A               	bcf	122,2,c	;volatile
  5566  0022BC                     l2235:
  5567                           
  5568                           ;LCD.c: 27:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3=0;}
  5569  0022BC  A402               	btfss	LCD_sendnibble@number^0,2,c
  5570  0022BE  EF63  F011         	goto	u1711
  5571  0022C2  EF65  F011         	goto	u1710
  5572  0022C6                     u1711:
  5573  0022C6  EF68  F011         	goto	l227
  5574  0022CA                     u1710:
  5575  0022CA  867D               	bsf	125,3,c	;volatile
  5576  0022CC  EF69  F011         	goto	l2239
  5577  0022D0                     l227:
  5578  0022D0  967D               	bcf	125,3,c	;volatile
  5579  0022D2                     l2239:
  5580                           
  5581                           ;LCD.c: 28:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1=0;}
  5582  0022D2  A602               	btfss	LCD_sendnibble@number^0,3,c
  5583  0022D4  EF6E  F011         	goto	u1721
  5584  0022D8  EF70  F011         	goto	u1720
  5585  0022DC                     u1721:
  5586  0022DC  EF73  F011         	goto	l229
  5587  0022E0                     u1720:
  5588  0022E0  827D               	bsf	125,1,c	;volatile
  5589  0022E2  EF74  F011         	goto	l2243
  5590  0022E6                     l229:
  5591  0022E6  927D               	bcf	125,1,c	;volatile
  5592  0022E8                     l2243:
  5593                           
  5594                           ;LCD.c: 30:     LCD_E_TOG();
  5595  0022E8  ECB6  F013         	call	_LCD_E_TOG	;wreg free
  5596  0022EC                     
  5597                           ;LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5598  0022EC  0E1A               	movlw	26
  5599  0022EE                     u3357:
  5600  0022EE  2EE8               	decfsz	wreg,f,c
  5601  0022F0  D7FE               	bra	u3357
  5602  0022F2  D000               	nop2	
  5603  0022F4  0012               	return		;funcret
  5604  0022F6                     __end_of_LCD_sendnibble:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _LCD_E_TOG *****************
  5608 ;; Defined at:
  5609 ;;		line 9 in file "LCD.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_LCD_sendnibble
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text32
  5638  00276C                     __ptext32:
  5639                           	callstack 0
  5640  00276C                     _LCD_E_TOG:
  5641                           	callstack 25
  5642  00276C                     
  5643                           ;LCD.c: 12:     LATCbits.LATC2=1;
  5644  00276C  847B               	bsf	123,2,c	;volatile
  5645  00276E                     
  5646                           ;LCD.c: 13:  _delay((unsigned long)((8)*(64000000/4000000.0)));
  5647  00276E  0E2A               	movlw	42
  5648  002770                     u3367:
  5649  002770  2EE8               	decfsz	wreg,f,c
  5650  002772  D7FE               	bra	u3367
  5651  002774  D000               	nop2	
  5652  002776                     
  5653                           ;LCD.c: 15:     LATCbits.LATC2=0;
  5654  002776  947B               	bcf	123,2,c	;volatile
  5655                           
  5656                           ;LCD.c: 16:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5657  002778  0E1A               	movlw	26
  5658  00277A                     u3377:
  5659  00277A  2EE8               	decfsz	wreg,f,c
  5660  00277C  D7FE               	bra	u3377
  5661  00277E  D000               	nop2	
  5662  002780  0012               	return		;funcret
  5663  002782                     __end_of_LCD_E_TOG:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _Interrupts_init *****************
  5667 ;; Defined at:
  5668 ;;		line 11 in file "interrupts.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		None
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used: 1
  5688 ;; Hardware stack levels required when called: 1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_main
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text33
  5697  002796                     __ptext33:
  5698                           	callstack 0
  5699  002796                     _Interrupts_init:
  5700                           	callstack 29
  5701  002796                     
  5702                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  5703  002796  8CF2               	bsf	242,6,c	;volatile
  5704                           
  5705                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  5706  002798  010E               	movlb	14	; () banked
  5707  00279A  8B29               	bsf	41,5,b	;volatile
  5708                           
  5709                           ;interrupts.c: 16:     PIR0bits.TMR0IF=0;
  5710  00279C  9B33               	bcf	51,5,b	;volatile
  5711                           
  5712                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  5713  00279E  8EF2               	bsf	242,7,c	;volatile
  5714  0027A0                     
  5715                           ; BSR set to: 14
  5716  0027A0  0012               	return		;funcret
  5717  0027A2                     __end_of_Interrupts_init:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function _Comp1_init *****************
  5721 ;; Defined at:
  5722 ;;		line 22 in file "comparator.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;Total ram usage:        0 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 2
  5743 ;; This function calls:
  5744 ;;		_DAC_init
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text34
  5751  0026B4                     __ptext34:
  5752                           	callstack 0
  5753  0026B4                     _Comp1_init:
  5754                           	callstack 28
  5755  0026B4                     
  5756                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  5757  0026B4  8E86               	bsf	134,7,c	;volatile
  5758  0026B6                     
  5759                           ;comparator.c: 25:     CM1NCHbits.NCH=0b011;
  5760  0026B6  010E               	movlb	14	; () banked
  5761  0026B8  51D2               	movf	210,w,b	;volatile
  5762  0026BA  0BF8               	andlw	-8
  5763  0026BC  0903               	iorlw	3
  5764  0026BE  6FD2               	movwf	210,b	;volatile
  5765                           
  5766                           ;comparator.c: 26:     CM1PCHbits.PCH=0b101;
  5767  0026C0  51D3               	movf	211,w,b	;volatile
  5768  0026C2  0BF8               	andlw	-8
  5769  0026C4  0905               	iorlw	5
  5770  0026C6  6FD3               	movwf	211,b	;volatile
  5771  0026C8                     
  5772                           ; BSR set to: 14
  5773                           ;comparator.c: 27:     CM1CON0bits.HYS=1;
  5774  0026C8  83D0               	bsf	208,1,b	;volatile
  5775  0026CA                     
  5776                           ; BSR set to: 14
  5777                           ;comparator.c: 28:     CM1CON0bits.POL=1;
  5778  0026CA  89D0               	bsf	208,4,b	;volatile
  5779  0026CC                     
  5780                           ; BSR set to: 14
  5781                           ;comparator.c: 29:     CM1CON1bits.INTP=1;
  5782  0026CC  83D1               	bsf	209,1,b	;volatile
  5783  0026CE                     
  5784                           ; BSR set to: 14
  5785                           ;comparator.c: 30:     DAC_init();
  5786  0026CE  ECC1  F013         	call	_DAC_init	;wreg free
  5787  0026D2                     
  5788                           ;comparator.c: 31:     CM1CON0bits.EN=1;
  5789  0026D2  010E               	movlb	14	; () banked
  5790  0026D4  8FD0               	bsf	208,7,b	;volatile
  5791  0026D6                     
  5792                           ; BSR set to: 14
  5793  0026D6  0012               	return		;funcret
  5794  0026D8                     __end_of_Comp1_init:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _DAC_init *****************
  5798 ;; Defined at:
  5799 ;;		line 7 in file "comparator.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;Total ram usage:        0 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; Hardware stack levels required when called: 1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;;		_Comp1_init
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text35
  5829  002782                     __ptext35:
  5830                           	callstack 0
  5831  002782                     _DAC_init:
  5832                           	callstack 29
  5833  002782                     
  5834                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  5835  002782  0EF3               	movlw	-13
  5836  002784  010E               	movlb	14	; () banked
  5837  002786  17C6               	andwf	198,f,b	;volatile
  5838  002788                     
  5839                           ; BSR set to: 14
  5840                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  5841  002788  91C6               	bcf	198,0,b	;volatile
  5842                           
  5843                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=0b11011;
  5844  00278A  51C7               	movf	199,w,b	;volatile
  5845  00278C  0BE0               	andlw	-32
  5846  00278E  091B               	iorlw	27
  5847  002790  6FC7               	movwf	199,b	;volatile
  5848  002792                     
  5849                           ; BSR set to: 14
  5850                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  5851  002792  8FC6               	bsf	198,7,b	;volatile
  5852  002794                     
  5853                           ; BSR set to: 14
  5854  002794  0012               	return		;funcret
  5855  002796                     __end_of_DAC_init:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function _HighISR *****************
  5859 ;; Defined at:
  5860 ;;		line 25 in file "interrupts.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1    wreg      void 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;Total ram usage:        1 bytes
  5879 ;; Hardware stack levels used: 1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		Interrupt level 2
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	intcode
  5888  000008                     __pintcode:
  5889                           	callstack 0
  5890  000008                     _HighISR:
  5891                           	callstack 21
  5892                           
  5893                           ; BSR set to: 14
  5894                           ;incstack = 0
  5895  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5896  00000A                     
  5897                           ;interrupts.c: 28:     if(PIR0bits.TMR0IF){
  5898  00000A  010E               	movlb	14	; () banked
  5899  00000C  AB33               	btfss	51,5,b	;volatile
  5900  00000E  EF0B  F000         	goto	i2u119_41
  5901  000012  EF0D  F000         	goto	i2u119_40
  5902  000016                     i2u119_41:
  5903  000016  EF21  F000         	goto	i2l186
  5904  00001A                     i2u119_40:
  5905  00001A                     
  5906                           ; BSR set to: 14
  5907                           ;interrupts.c: 30:         LATHbits.LATH3=!LATHbits.LATH3;
  5908  00001A  A680               	btfss	128,3,c	;volatile
  5909  00001C  EF12  F000         	goto	i2u120_41
  5910  000020  EF16  F000         	goto	i2u120_40
  5911  000024                     i2u120_41:
  5912  000024  6A01               	clrf	??_HighISR^0,c
  5913  000026  2A01               	incf	??_HighISR^0,f,c
  5914  000028  EF17  F000         	goto	i2u121_48
  5915  00002C                     i2u120_40:
  5916  00002C  6A01               	clrf	??_HighISR^0,c
  5917  00002E                     i2u121_48:
  5918  00002E  4601               	rlncf	??_HighISR^0,f,c
  5919  000030  4601               	rlncf	??_HighISR^0,f,c
  5920  000032  4601               	rlncf	??_HighISR^0,f,c
  5921  000034  5080               	movf	128,w,c	;volatile
  5922  000036  1801               	xorwf	??_HighISR^0,w,c
  5923  000038  0BF7               	andlw	-9
  5924  00003A  1801               	xorwf	??_HighISR^0,w,c
  5925  00003C  6E80               	movwf	128,c	;volatile
  5926  00003E                     
  5927                           ;interrupts.c: 31:         PIR0bits.TMR0IF=0;
  5928  00003E  010E               	movlb	14	; () banked
  5929  000040  9B33               	bcf	51,5,b	;volatile
  5930  000042                     i2l186:
  5931                           
  5932                           ; BSR set to: 14
  5933  000042  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5934  000044  0011               	retfie		f
  5935  000046                     __end_of_HighISR:
  5936                           	callstack 0
  5937                           
  5938                           	psect	rparam
  5939  0000                     
  5940                           	psect	temp
  5941  00005D                     btemp:
  5942                           	callstack 0
  5943  00005D                     	ds	1
  5944  0000                     int$flags	set	btemp
  5945  0000                     wtemp8	set	btemp+1
  5946  0000                     ttemp5	set	btemp+1
  5947  0000                     ttemp6	set	btemp+4
  5948  0000                     ttemp7	set	btemp+8
  5949                           
  5950                           	psect	idloc
  5951                           
  5952                           ;Config register IDLOC0 @ 0x200000
  5953                           ;	unspecified, using default values
  5954  200000                     	org	2097152
  5955  200000  0FFF               	dw	4095
  5956                           
  5957                           ;Config register IDLOC1 @ 0x200002
  5958                           ;	unspecified, using default values
  5959  200002                     	org	2097154
  5960  200002  0FFF               	dw	4095
  5961                           
  5962                           ;Config register IDLOC2 @ 0x200004
  5963                           ;	unspecified, using default values
  5964  200004                     	org	2097156
  5965  200004  0FFF               	dw	4095
  5966                           
  5967                           ;Config register IDLOC3 @ 0x200006
  5968                           ;	unspecified, using default values
  5969  200006                     	org	2097158
  5970  200006  0FFF               	dw	4095
  5971                           
  5972                           ;Config register IDLOC4 @ 0x200008
  5973                           ;	unspecified, using default values
  5974  200008                     	org	2097160
  5975  200008  0FFF               	dw	4095
  5976                           
  5977                           ;Config register IDLOC5 @ 0x20000A
  5978                           ;	unspecified, using default values
  5979  20000A                     	org	2097162
  5980  20000A  0FFF               	dw	4095
  5981                           
  5982                           ;Config register IDLOC6 @ 0x20000C
  5983                           ;	unspecified, using default values
  5984  20000C                     	org	2097164
  5985  20000C  0FFF               	dw	4095
  5986                           
  5987                           ;Config register IDLOC7 @ 0x20000E
  5988                           ;	unspecified, using default values
  5989  20000E                     	org	2097166
  5990  20000E  0FFF               	dw	4095
  5991                           
  5992                           	psect	config
  5993                           
  5994                           ;Config register CONFIG1L @ 0x300000
  5995                           ;	External Oscillator mode Selection bits
  5996                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5997                           ;	Power-up default value for COSC bits
  5998                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5999  300000                     	org	3145728
  6000  300000  AA                 	db	170
  6001                           
  6002                           ;Config register CONFIG1H @ 0x300001
  6003                           ;	unspecified, using default values
  6004                           ;	Clock Out Enable bit
  6005                           ;	CLKOUTEN = 0x1, unprogrammed default
  6006                           ;	Clock Switch Enable bit
  6007                           ;	CSWEN = 0x1, unprogrammed default
  6008                           ;	Fail-Safe Clock Monitor Enable bit
  6009                           ;	FCMEN = 0x1, unprogrammed default
  6010  300001                     	org	3145729
  6011  300001  FF                 	db	255
  6012                           
  6013                           ;Config register CONFIG2L @ 0x300002
  6014                           ;	unspecified, using default values
  6015                           ;	Master Clear Enable bit
  6016                           ;	MCLRE = 0x1, unprogrammed default
  6017                           ;	Power-up Timer Enable bit
  6018                           ;	PWRTE = 0x1, unprogrammed default
  6019                           ;	Low-power BOR enable bit
  6020                           ;	LPBOREN = 0x1, unprogrammed default
  6021                           ;	Brown-out Reset Enable bits
  6022                           ;	BOREN = 0x3, unprogrammed default
  6023  300002                     	org	3145730
  6024  300002  FF                 	db	255
  6025                           
  6026                           ;Config register CONFIG2H @ 0x300003
  6027                           ;	unspecified, using default values
  6028                           ;	Brown Out Reset Voltage selection bits
  6029                           ;	BORV = 0x3, unprogrammed default
  6030                           ;	ZCD Disable bit
  6031                           ;	ZCD = 0x1, unprogrammed default
  6032                           ;	PPSLOCK bit One-Way Set Enable bit
  6033                           ;	PPS1WAY = 0x1, unprogrammed default
  6034                           ;	Stack Full/Underflow Reset Enable bit
  6035                           ;	STVREN = 0x1, unprogrammed default
  6036                           ;	Debugger Enable bit
  6037                           ;	DEBUG = 0x1, unprogrammed default
  6038                           ;	Extended Instruction Set Enable bit
  6039                           ;	XINST = 0x1, unprogrammed default
  6040  300003                     	org	3145731
  6041  300003  FF                 	db	255
  6042                           
  6043                           ;Config register CONFIG3L @ 0x300004
  6044                           ;	WDT Period Select bits
  6045                           ;	WDTCPS = 0x1F, unprogrammed default
  6046                           ;	WDT operating mode
  6047                           ;	WDTE = OFF, WDT Disabled
  6048  300004                     	org	3145732
  6049  300004  9F                 	db	159
  6050                           
  6051                           ;Config register CONFIG3H @ 0x300005
  6052                           ;	unspecified, using default values
  6053                           ;	WDT Window Select bits
  6054                           ;	WDTCWS = 0x7, unprogrammed default
  6055                           ;	WDT input clock selector
  6056                           ;	WDTCCS = 0x7, unprogrammed default
  6057  300005                     	org	3145733
  6058  300005  FF                 	db	255
  6059                           
  6060                           ;Config register CONFIG4L @ 0x300006
  6061                           ;	unspecified, using default values
  6062                           ;	Write Protection Block 0
  6063                           ;	WRT0 = 0x1, unprogrammed default
  6064                           ;	Write Protection Block 1
  6065                           ;	WRT1 = 0x1, unprogrammed default
  6066                           ;	Write Protection Block 2
  6067                           ;	WRT2 = 0x1, unprogrammed default
  6068                           ;	Write Protection Block 3
  6069                           ;	WRT3 = 0x1, unprogrammed default
  6070                           ;	Write Protection Block 3
  6071                           ;	WRT4 = 0x1, unprogrammed default
  6072                           ;	Write Protection Block 3
  6073                           ;	WRT5 = 0x1, unprogrammed default
  6074                           ;	Write Protection Block 3
  6075                           ;	WRT6 = 0x1, unprogrammed default
  6076                           ;	Write Protection Block 3
  6077                           ;	WRT7 = 0x1, unprogrammed default
  6078  300006                     	org	3145734
  6079  300006  FF                 	db	255
  6080                           
  6081                           ;Config register CONFIG4H @ 0x300007
  6082                           ;	unspecified, using default values
  6083                           ;	Configuration Register Write Protection bit
  6084                           ;	WRTC = 0x1, unprogrammed default
  6085                           ;	Boot Block Write Protection bit
  6086                           ;	WRTB = 0x1, unprogrammed default
  6087                           ;	Data EEPROM Write Protection bit
  6088                           ;	WRTD = 0x1, unprogrammed default
  6089                           ;	Scanner Enable bit
  6090                           ;	SCANE = 0x1, unprogrammed default
  6091                           ;	Low Voltage Programming Enable bit
  6092                           ;	LVP = 0x1, unprogrammed default
  6093  300007                     	org	3145735
  6094  300007  FF                 	db	255
  6095                           
  6096                           ;Config register CONFIG5L @ 0x300008
  6097                           ;	unspecified, using default values
  6098                           ;	UserNVM Program Memory Code Protection bit
  6099                           ;	CP = 0x1, unprogrammed default
  6100                           ;	DataNVM Memory Code Protection bit
  6101                           ;	CPD = 0x1, unprogrammed default
  6102  300008                     	org	3145736
  6103  300008  FF                 	db	255
  6104                           
  6105                           ;Config register CONFIG5H @ 0x300009
  6106                           ;	unspecified, using default values
  6107  300009                     	org	3145737
  6108  300009  FF                 	db	255
  6109                           
  6110                           ;Config register CONFIG6L @ 0x30000A
  6111                           ;	unspecified, using default values
  6112                           ;	Table Read Protection Block 0
  6113                           ;	EBTR0 = 0x1, unprogrammed default
  6114                           ;	Table Read Protection Block 1
  6115                           ;	EBTR1 = 0x1, unprogrammed default
  6116                           ;	Table Read Protection Block 2
  6117                           ;	EBTR2 = 0x1, unprogrammed default
  6118                           ;	Table Read Protection Block 3
  6119                           ;	EBTR3 = 0x1, unprogrammed default
  6120                           ;	Table Read Protection Block 4
  6121                           ;	EBTR4 = 0x1, unprogrammed default
  6122                           ;	Table Read Protection Block 5
  6123                           ;	EBTR5 = 0x1, unprogrammed default
  6124                           ;	Table Read Protection Block 6
  6125                           ;	EBTR6 = 0x1, unprogrammed default
  6126                           ;	Table Read Protection Block 7
  6127                           ;	EBTR7 = 0x1, unprogrammed default
  6128  30000A                     	org	3145738
  6129  30000A  FF                 	db	255
  6130                           
  6131                           ;Config register CONFIG6H @ 0x30000B
  6132                           ;	unspecified, using default values
  6133                           ;	Boot Block Table Read Protection bit
  6134                           ;	EBTRB = 0x1, unprogrammed default
  6135  30000B                     	org	3145739
  6136  30000B  FF                 	db	255
  6137                           tosu	equ	0xFFF
  6138                           tosh	equ	0xFFE
  6139                           tosl	equ	0xFFD
  6140                           stkptr	equ	0xFFC
  6141                           pclatu	equ	0xFFB
  6142                           pclath	equ	0xFFA
  6143                           pcl	equ	0xFF9
  6144                           tblptru	equ	0xFF8
  6145                           tblptrh	equ	0xFF7
  6146                           tblptrl	equ	0xFF6
  6147                           tablat	equ	0xFF5
  6148                           prodh	equ	0xFF4
  6149                           prodl	equ	0xFF3
  6150                           indf0	equ	0xFEF
  6151                           postinc0	equ	0xFEE
  6152                           postdec0	equ	0xFED
  6153                           preinc0	equ	0xFEC
  6154                           plusw0	equ	0xFEB
  6155                           fsr0h	equ	0xFEA
  6156                           fsr0l	equ	0xFE9
  6157                           wreg	equ	0xFE8
  6158                           indf1	equ	0xFE7
  6159                           postinc1	equ	0xFE6
  6160                           postdec1	equ	0xFE5
  6161                           preinc1	equ	0xFE4
  6162                           plusw1	equ	0xFE3
  6163                           fsr1h	equ	0xFE2
  6164                           fsr1l	equ	0xFE1
  6165                           bsr	equ	0xFE0
  6166                           indf2	equ	0xFDF
  6167                           postinc2	equ	0xFDE
  6168                           postdec2	equ	0xFDD
  6169                           preinc2	equ	0xFDC
  6170                           plusw2	equ	0xFDB
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        24
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    125     155
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> LCD_setlines@line2(BANK0[20]), LCD_setlines@line1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1828$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1828$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 20
		 -> LCD_setlines@line2(BANK0[20]), LCD_setlines@line1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _daylight_save->___awdiv
    _LDR_thres->_LDR_val
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCD_setlines
    _LCD_setlines->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   21369
                                             78 BANK0     47    47      0
                         _Comp1_init
                           _DAC_init
                    _Interrupts_init
                           _LCD_Init
                       _LCD_setlines
                           _LDR_init
                          _LDR_thres
                            _LDR_val
                           _LED_init
                  _LEDarray_disp_bin
                        _Timer0_init
                            ___lwmod
                      _daylight_save
 ---------------------------------------------------------------------------------
 (1) _daylight_save                                       13    11      2    1208
                                              9 COMRAM    10     8      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     463
                                              1 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     186
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDR_val                                              4     2      2      23
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LDR_thres                                            4     3      1     209
                                              5 COMRAM     2     1      1
                            _LDR_val (ARG)
 ---------------------------------------------------------------------------------
 (1) _LDR_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setlines                                        51    43      8   16116
                                             27 BANK0     51    43      8
                       _LCD_sendbyte
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   11425
                                              2 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   10573
                                             84 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   10043
                                             64 COMRAM    20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1864
                                              8 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     872
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0    1156
                                              6 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       2     0      2    1385
                                              6 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1200
                                              6 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1    1112
                                              2 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              1 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setlines
     _LCD_sendbyte
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
   _LDR_init
   _LDR_thres
     _LDR_val (ARG)
   _LDR_val
   _LED_init
   _LEDarray_disp_bin
   _Timer0_init
   ___lwmod
   _daylight_save
     ___awdiv

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      9B       5       96.9%
BITBIGSFRlhlhh      84      0       0      38        0.0%
BITBIGSFRllhh       5E      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRhhhl       4A      0       0      34        0.0%
BITBIGSFRlll        3A      0       0      43        0.0%
BITBIGSFRlhll       33      0       0      40        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRlhhhhl     14      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllhl        9      0       0      42        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117      44        0.0%
DATA                 0      0     117       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Feb 10 16:53:54 2022

                       l20 271C                         l22 272A                         l31 2410  
                       l23 2738                         l17 2752                         l60 224A  
                       l61 225E                         l54 26F8                         l62 2260  
                       l63 2274                         l64 2276                         l65 228A  
                       l57 2232                         l58 2234                         l67 228C  
                       l59 2248               ___awdiv@sign 0007        ___wmul@multiplicand 0004  
        ??_Interrupts_init 0002                        l201 2186                        l123 12A2  
                      l220 2780                        l231 22F4                        l223 22A4  
                      l225 22BA                        l234 268C                        l242 25BA  
                      l146 2718                        l227 22D0                        l180 27A0  
                      l260 26B2                        l229 22E6                        l237 221C  
                      l166 2794                        l248 265C                        l169 26D6  
                      l257 1E76                        l374 1ADA                        l387 1DA8  
                      l491 2004                        l761 23B6                        l768 23BE  
                      l938 2462                        l972 208C                        l980 1714  
                      l974 20C6                        l982 171C                        l969 204A  
                      _abs 2542                        _pad 2006                        wreg 000FE8  
                     l1000 1952                       l1100 2540                       l1014 13FC  
                     l1103 27A2                       l1041 2580                       l1033 2352  
                     l1034 235A                       l1027 1672                       ?_abs 0014  
                     l1109 2628                       l1038 2578                       l1063 1C3C  
                     l3001 1762                       l1066 1C44                       l2131 2776  
                     l3011 186E                       l3003 17E4                       l1092 1F40  
                     l1069 25F2                       l1077 24B4                       l3021 18E0  
                     l3013 188C                       l3005 17EA                       l2127 276C  
                     l2231 22A6                       l3031 191A                       l3023 18EE  
                     l3015 18A6                       l3007 17F0                       l3111 1434  
                     l3103 1392                       l2129 276E                       l2241 22E0  
                     l2233 22B4                       l3025 18F4                       l3033 192A  
                     l3017 18C0                       l3009 1854                       l3113 146A  
                     l3105 13EA                       l2401 1F5C                       l3201 0E2A  
                     l2243 22E8                       l2235 22BC                       l2227 2290  
                     l3051 1B62                       l3043 1AF4                       l3027 1906  
                     l3019 18CE                       l3131 1590                       l3123 14B6  
                     l3115 147A                       l3107 140A                       l2411 1F82  
                     l2403 1F60                       l3211 0E48                       l3203 0E2E  
                     l2245 22EC                       l2237 22CA                       l2229 229E  
                     l2341 2660                       l2501 21A8                       l3061 1C0E  
                     l3053 1B9A                       l3045 1B14                       l3037 1ADC  
                     l3029 1912                       l3141 1612                       l3125 14F8  
                     l3117 1488                       l3109 140C                       l2421 1FB8  
                     l2413 1F94                       l2405 1F6E                       l3301 1148  
                     l3221 0E5C                       l3213 0E4C                       l3205 0E3A  
                     l2239 22D2                       l2351 2684                       l2343 266A  
                     l2511 21D2                       l2503 21AE                       l3063 1C20  
                     l3047 1B52                       l3039 1AF0                       l3135 15C8  
                     l3127 1520                       l3119 14A8                       l3071 132A  
                     l3151 1638                       l2423 1FCE                       l2415 1F9C  
                     l2431 1FE4                       l2407 1F76                       l3303 115C  
                     l3311 117C                       l3231 0E80                       l3223 0E64  
                     l3215 0E50                       l3207 0E3E                       l2361 2782  
                     l2345 2670                       l2521 2204                       l2513 21DA  
                     l2505 21B6                       l3049 1B5A                       l3153 1660  
                     l3137 15F0                       l3145 161E                       l3129 1548  
                     l3081 135C                       l3073 1338                       l2441 2744  
                     l2433 1FF4                       l2425 1FD6                       l2417 1FA4  
                     l2409 1F7A                       l3321 11F0                       l3313 1190  
                     l3305 116C                       l3241 0F0C                       l3233 0E92  
                     l3225 0E68                       l3217 0E54                       l3209 0E42  
                     l2363 2788                       l2347 2678                       l2523 220E  
                     l2515 21E4                       l2507 21C0                       l2371 259E  
                     l3059 1BD4                       l3147 162C                       l3139 15FE  
                     l3411 13BC                       l3091 137A                       l3083 136E  
                     l3075 134A                       l3163 22F6                       l3171 2412  
                     l2443 274C                       l2451 23C2                       l2531 2716  
                     l2435 1FFC                       l2427 1FD8                       l2419 1FB2  
                     l3331 1226                       l3323 11F6                       l3315 11DA  
                     l3307 1170                       l3251 0F44                       l3243 0F16  
                     l3235 0EB2                       l3227 0E70                       l3219 0E58  
                     l2365 2792                       l2349 267E                       l2517 21EC  
                     l2509 21C8                       l2381 2644                       l2373 25B0  
                     l3413 1B84                       l3077 134E                       l3069 1302  
                     l3165 22FE                       l3173 2424                       l2445 274E  
                     l2461 23F8                       l2453 23C2                       l2525 26FA  
                     l2429 1FDE                       l2541 20E6                       l2533 20CA  
                     l3333 1270                       l3325 1208                       l3317 11DC  
                     l3309 1174                       l3261 0FBA                       l3253 0F48  
                     l3245 0F24                       l3237 0ED8                       l3229 0E78  
                     l2519 21F6                       l2375 262A                       l2367 2584  
                     l3095 1380                       l3087 1374                       l3079 135A  
                     l3167 230C                       l3175 242C                       l3191 1E34  
                     l3183 1DAE                       l2447 2750                       l2439 273A  
                     l2463 23FE                       l2455 23D2                       l2471 222C  
                     l2527 2702                       l2551 211C                       l2543 20F6  
                     l2535 20CA                       l3351 12E8                       l3335 1278  
                     l3327 120C                       l3319 11E0                       l3271 1048  
                     l3263 0FF2                       l3255 0F7C                       l3247 0F26  
                     l3239 0EFE                       l2481 2796                       l2377 262E  
                     l2369 2594                       l3169 2332                       l3177 2434  
                     l3193 1E40                       l3185 1E18                       l2465 240E  
                     l2457 23E2                       l2449 271A                       l2473 2242  
                     l2529 270C                       l2553 212C                       l2545 2106  
                     l2537 20DA                       l3353 12EC                       l3329 1214  
                     l3281 10F6                       l3273 1090                       l3265 0FF8  
                     l3257 0F82                       l3249 0F28                       l3345 12A2  
                     l2491 26CC                       l2483 26B4                       l2379 2640  
                     l3099 1386                       l3179 2450                       l3195 1E5A  
                     l3187 1E22                       l2459 23E8                       l2467 26D8  
                     l2475 2258                       l2395 1F42                       l2563 2180  
                     l2555 2136                       l2539 20E2                       l3347 12B0  
                     l3339 128C                       l3291 111E                       l3283 10F8  
                     l3275 1098                       l3267 1030                       l3259 0FB6  
                     l2493 26CE                       l2485 26B6                       l2901 1C58  
                     l2821 1EA6                       l3197 1E64                       l3189 1E2E  
                     l2477 226E                       l2469 221E                       l2397 1F46  
                     l2557 216A                       l2549 210C                       l3349 12D8  
                     l3293 112E                       l3285 110A                       l3277 10AA  
                     l3269 1034                       l2495 26D2                       l2487 26C8  
                     l2911 1CC8                       l2903 1C78                       l2823 1EC4  
                     l2815 1E78                       l2831 250A                       l2479 2284  
                     l2591 238C                       l2583 235C                       l2399 1F54  
                     l3287 110A                       l3295 1136                       l3279 10F2  
                     l3199 0E26                       l2489 26CA                       l2497 2188  
                     l2921 1D40                       l2913 1CD0                       l2905 1C7C  
                     l2825 1EFA                       l2817 1E8A                       l2833 251C  
                     l2841 2604                       l2593 23A2                       l2585 236E  
                     l3297 1148                       l3289 110A                       l2499 21A0  
                     l2923 1D52                       l2915 1CE4                       l2907 1C8A  
                     l2819 1E9C                       l2835 2520                       l2843 261C  
                     l2595 23AA                       l2587 2376                       l3299 1148  
                     l2861 198A                       l2853 1954                       l2917 1CF2  
                     l2925 1D58                       l2909 1CAA                       l2829 24FE  
                     l2837 25F4                       l2941 2042                       l2933 2006  
                     l2597 23B0                       l2589 237E                       ?_pad 0012  
                     l2847 268E                       l2871 19E6                       l2863 1998  
                     l2855 1958                       l2927 1D68                       l2919 1D20  
                     l2839 2600                       l2951 20AE                       l2943 2056  
                     l2935 2014                       l2849 26AA                       l2881 1A50  
                     l2873 19EE                       l2865 19B8                       l2857 1966  
                     l2929 1D88                       l2945 206A                       l2937 2028  
                     l2971 24AE                       l2963 2464                       l2891 1A9A  
                     l2883 1A70                       l2875 1A02                       l2867 19BC  
                     l2859 1986                       l2955 2542                       l2947 206E  
                     l2939 2036                       l2965 2468                       l2893 1ABA  
                     l2885 1A72                       l2877 1A10                       l2869 19C8  
                     l2957 255C                       l2949 209A                       l2981 16DC  
                     l2959 25BC                       l2967 247C                       l2887 1A84  
                     l2879 1A22                       l2991 1736                       l2983 16EC  
                     l2975 1674                       l2969 24AA                       l2889 1A8A  
                     l2897 1C46                       l2993 1744                       l2985 16EE  
                     l2977 1694                       l2899 1C4A                       l2995 174A  
                     l2987 1708                       l2979 16BC                       l2997 1752  
                     l2989 1724                       l2999 175C                       STR_1 0E1D  
                     STR_2 0E01                       STR_3 0E11                       u2000 2258  
                     u2001 2254                       u2010 226E                       u2011 226A  
                     u2020 2284                       u2100 238C                       u2021 2280  
                     u2101 2388                       u2110 23A2                       u2030 20DA  
                     u2111 239E                       u2031 20D6                       u2040 20F6  
                     u3000 0EFE                       u2041 20F2                       u3001 0EFA  
                     u2050 2106                       u3010 0F24                       u2051 2102  
                     u3011 0F20                       u2060 211C                       u3100 10F2  
                     u3020 0F44                       u2061 2118                       u3101 10EE  
                     u3021 0F40                       u2070 212C                       u3110 110A  
                     u3030 0F7C                       u2071 2128                       u3111 1106  
                     u3031 0F78                       u2400 1E8A                       u2080 2180  
                     u3200 1208                       u3120 111E                       u3040 0FB6  
                     u2401 1E86                       u2081 217C                       u3201 1204  
                     u3121 111A                       u3041 0FB2                       u2410 1E9C  
                     u2090 236E                       u3210 1226                       u3130 112E  
                     u3050 0FF2                       u2411 1E98                       u2091 236A  
                     u3211 1222                       u3131 112A                       u3051 0FEE  
                     u1700 22B4                       u2500 1A10                       u2420 1EC4  
                     u3220 1270                       u3140 1148                       u3060 1030  
                     u1701 22B0                       u2501 1A0C                       u2421 1EC0  
                     u3221 126C                       u3141 1144                       u3061 102C  
                     u1710 22CA                       u2510 1A50                       u2430 1EFA  
                     u3230 1288                       u3150 115C                       u3070 1048  
                     u1711 22C6                       u2511 1A4C                       u2431 1EF6  
                     u3231 1284                       u3151 1158                       u3071 1044  
                     u1720 22E0                       u2520 1A9A                       u2440 2540  
                     u2600 2036                       u3240 129E                       u3160 116C  
                     u3080 1090                       u1721 22DC                       u2521 1A96  
                     u2441 253C                       u2601 2032                       u3241 129A  
                     u3161 1168                       u3081 108C                       u2530 1C58  
                     u2450 261C                       u2610 208C                       u3170 1190  
                     u3090 10AA                       u3307 21D4                       u2531 1C54  
                     u2451 2618                       u2611 2088                       u3171 118C  
                     u3091 10A6                       u2460 1966                       u2540 1C8A  
                     u2620 209A                       u2700 16BC                       u1900 1FB2  
                     u3180 11DA                       u3317 21E6                       u2461 1962  
                     u2541 1C86                       u2621 2096                       u2701 16B8  
                     u1901 1FAE                       u3181 11D6                       u2470 1998  
                     u2550 1CC8                       u2630 255C                       u2710 16EC  
                     u1910 1FCE                       u3190 11F0                       u3327 21FC  
                     u2471 1994                       u2551 1CC4                       u2631 2558  
                     u2711 16E8                       u1911 1FCA                       u3191 11EC  
                     u1840 2594                       u2640 25EC                       u2560 1CF2  
                     u2800 18E0                       u2720 1708                       u1920 1FF4  
                     u1825 2668                       u3337 2214                       u1841 2590  
                     u2641 25E6                       u2481 19C2                       u2561 1CEE  
                     u2801 18DC                       u2721 1704                       u3257 1E4C  
                     u1921 1FF0                       u1690 229E                       u1826 266A  
                     u1850 25B0                       u2650 25EE                       u2490 19E6  
                     u2570 1D20                       u2810 18EE                       u2730 1736  
                     u1930 272A                       u1691 229A                       u3347 2686  
                     u1851 25AC                       u2491 19E2                       u2571 1D1C  
                     u2811 18EA                       u2731 1732                       u3267 1E6C  
                     u1931 2726                       u1860 265C                       u2660 247C  
                     u2580 1D68                       u2820 1906                       u2740 1744  
                     u2900 1434                       u1940 23D2                       u3357 22EE  
                     u3277 21A2                       u1861 2658                       u2661 2478  
                     u2581 1D64                       u2821 1902                       u2741 1740  
                     u2901 1430                       u1941 23CE                       u2670 24AA  
                     u2830 1B14                       u2590 2014                       u2750 186E  
                     u2910 147A                       u1950 23E2                       u1870 1F54  
                     u3367 2770                       u3287 21B0                       u2671 24A6  
                     u2831 1B10                       u2591 2010                       u2751 186A  
                     u2911 1476                       u1951 23DE                       u1871 1F50  
                     u2840 1B4E                       u2760 188C                       u2680 16A4  
                     u2920 14F8                       u1960 23F8                       u1880 1F6E  
                     u3377 277A                       u3297 21C2                       u2841 1B4A  
                     u2761 1888                       u2681 169E                       u2921 14F4  
                     u1961 23F4                       u1881 1F6A                       u2850 1C0E  
                     u2770 18A6                       u2690 16A6                       u2930 1520  
                     u1970 240E                       u1890 1F94                       u2851 1C0A  
                     u2771 18A2                       u2931 151C                       u1971 240A  
                     u1891 1F90                       u2860 1C20                       u2780 18C0  
                     u2940 1548                       u1980 222C                       u2861 1C1C  
                     u2781 18BC                       u2941 1544                       u1981 2228  
                     u2790 18CE                       u2950 15F0                       u2870 132A  
                     u1990 2242                       u2791 18CA                       u2951 15EC  
                     u2871 1326                       u1991 223E                       u2880 13FC  
                     u2960 2352                       u2881 13F8                       u2961 234E  
                     u2890 140A                       u2891 1406                       u2971 0E8A  
                     u2980 0EB2                       u2981 0EAE                       u2990 0ED8  
                     u2991 0ED4            __end_of_LDR_val 273A                       abs@a 0014  
                     _dbuf 0100                       _atoi 1ADC                       _main 0E26  
                     _dtoa 1674                       _prec 00F9                       _nout 00F5  
                     pad@i 0019                       pad@p 0016                       fsr1h 000FE2  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001B                       fsr2l 000FD9                       btemp 005D  
             ?_LCD_setline 0001                       prodh 000FF4                       prodl 000FF3  
                     start 0046           __end_of_DAC_init 2796            __end_of_HighISR 0046  
             ___param_bank 000000                 _Comp1_init 26B4                      ??_abs 0016  
                    ??_pad 0018           __end_of_LCD_Init 221E           __end_of_LED_init 26FA  
          __end_of___aodiv 1ADC                      ?_atoi 0009                      ?_main 0001  
                    ?_dtoa 001D            __end_of___aomod 1DAA                      _ADPCH 000F5F  
          __end_of___awdiv 2006            ___awdiv@divisor 0004            __end_of___lwmod 23C0  
                    i2l186 0042            ___awdiv@counter 0006           __end_of_LDR_init 2754  
             vfpfcnvrt@fmt 0043                      _TMR0H 000FD4                      _TMR0L 000FD3  
                    _flags 005B                      _fputc 1E78                      _fputs 24FE  
          __end_of_isdigit 25F4                      atoi@n 0011                      pad@fp 0012  
                    atoi@s 0009                      _width 00F7                      _putch 27A2  
                    dtoa@d 001F                      dtoa@i 003F                      dtoa@n 0037  
                    dtoa@p 0031                      dtoa@s 0035                      dtoa@w 0033  
          __end_of_isspace 24B6              ?_LCD_sendbyte 0003                      tablat 000FF5  
            ?_LCD_setlines 007B                      plusw1 000FE3                      plusw2 000FDB  
                    ttemp5 005E                      ttemp6 0061                      ttemp7 0065  
                    status 000FD8                      wtemp8 005E            __end_of_sprintf 2464  
          __initialization 24B6               __end_of_atoi 1C46               __end_of_main 1302  
             __end_of_dtoa 1954          __end_of_LCD_E_TOG 2782                     ??_atoi 000B  
                   ??_main 00AE                     ??_dtoa 0027              __activetblptr 000003  
            LDR_thres@hour 0006                  ??_LDR_val 0004                     ?_fputc 0002  
                   ?_fputs 000B                     _ADRESH 000F64             ??_LCD_sendbyte 0004  
         ___awdiv@dividend 0002                     ?_putch 0001             LCD_sendbyte@HB 0004  
           LCD_sendbyte@LB 0005             ??_LCD_setlines 0083                     i2l1901 000A  
                   i2l1903 001A                     i2l1905 003E              vfpfcnvrt@done 0053  
                ??_HighISR 0001          __end_of_LDR_thres 2412          _LEDarray_disp_bin 221E  
       ?_LEDarray_disp_bin 0002              ??_Timer0_init 0002               vfprintf@cfmt 0060  
                ??___aodiv 0012                  ??___aomod 0012                     ___wmul 268E  
              ?_Comp1_init 0001                  ??___awdiv 0006                  ??___lwmod 0006  
      ??_LEDarray_disp_bin 0004                     clear_0 24DC           ___awdiv@quotient 0008  
                   isa$std 000001                     pad@buf 0014                     main@dd 00DB  
                   main@dh 00DA                     main@dm 00DC                     main@ds 00D4  
                   main@dy 00D7                     dtoa@fp 001D             LCD_setlines@cd 007E  
           LCD_setlines@ch 007B             LCD_setlines@cm 007F             LCD_setlines@cs 007D  
           LCD_setlines@cy 0080      daylight_save@offset_s 0012                     _strlen 25F4  
                   fputc@c 0002                     fputs@c 000F                     fputs@i 0010  
                   fputs@s 000B                  ??_isdigit 0004               __mediumconst 0000  
                ??_isspace 0004                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                     putch@c 0001                  ?_DAC_init 0001  
         __end_of_vfprintf 235C      daylight_save@sol_noon 0011                  ??_sprintf 005B  
__end_of_LEDarray_disp_bin 228E                 __accesstop 0060    __end_of__initialization 24F4  
                ?_LCD_Init 0001              ___rparam_used 000001                  ?_LED_init 0001  
                ?_LDR_init 0001            _Interrupts_init 2796             __pcstackCOMRAM 0001  
             __pidataBANK0 2754                LDR_val@temp 0004              __end_of_fputc 1F42  
            __end_of_fputs 2542              __end_of_putch 27A4        __end_of_Timer0_init 271A  
    __end_of_daylight_save 2188                 ??_DAC_init 0002                    ??_fputc 0006  
                  ??_fputs 000F                    ??_putch 0002                 __pbssBANK0 00F5  
               __pbssBANK1 0100                 ??_LCD_Init 0007             _LCD_sendnibble 228E  
               ??_LED_init 0002             _LCD_sendstring 262A                 ??_LDR_init 0002  
                  ?___wmul 0002       __end_of_LCD_sendbyte 268E       __end_of_LCD_setlines 1E78  
                  ?_strlen 0002                    _LDR_val 271A     __end_of_LCD_sendnibble 22F6  
  __end_of_Interrupts_init 27A2                    _HighISR 0008             main@min_length 00CE  
   __end_of_LCD_sendstring 265E                  _ADREFbits 000F58                    __Hparam 0000  
                  __Lparam 0000                _Timer0_init 26FA                    ___aodiv 1954  
                  ___aomod 1C46                    ___awdiv 1F42                    ___lwmod 235C  
                ?_vfprintf 0055               __psmallconst 0E00                    __pcinit 24B6  
                  __ramtop 0E00                    __ptext0 0E26                    __ptext1 20C8  
                  __ptext2 1F42                    __ptext3 235C                    __ptext4 26FA  
                  __ptext5 221E                    __ptext6 26D8                    __ptext7 271A  
                  __ptext8 23C0                    __ptext9 273A                    _isdigit 25BC  
                  _isspace 2464                  _LCD_E_TOG 276C            LCD_setline@line 0007  
                  atoi@neg 000F                    main@dim 00B6                    _sprintf 2412  
     end_of_initialization 24F4            ?_LCD_sendnibble 0001                    fputc@fp 0004  
                  fputs@fp 000D            ?_LCD_sendstring 0007                  _LDR_thres 23C0  
        __end_of_vfpfcnvrt 1674                    postdec1 000FE5           daylight_save@BST 000C  
                  postdec2 000FDD               ??_Comp1_init 0002                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 main@F14271 00DD  
               ??_vfprintf 005B                    strlen@a 0004                    strlen@s 0002  
               ?_LCD_E_TOG 0001                  _TRISAbits 000F81                  _TRISBbits 000F82  
                _TRISCbits 000F83                  _TRISDbits 000F84                  _TRISEbits 000F85  
                _TRISFbits 000F86                  _TRISGbits 000F87                  _TRISHbits 000F88  
       __end_of_Comp1_init 26D8                _CM1CON0bits 000ED0                _CM1CON1bits 000ED1  
         ?_Interrupts_init 0001                 ?_LDR_thres 0006                vfpfcnvrt@ap 0045  
              vfpfcnvrt@fp 0041                vfpfcnvrt@ll 004B             __end_of___wmul 26B4  
     LCD_sendnibble@number 0002             __end_of_strlen 262A        start_initialization 24B6  
              __end_of_abs 2582                __end_of_pad 20C8               LDR_thres@val 0007  
             _LCD_sendbyte 265E               _LCD_setlines 1DAA              ??_LCD_setline 0007  
              vfprintf@fmt 0057       LCD_sendstring@string 0007                   ??___wmul 0006  
              __pdataBANK0 00DD             daylight_save@h 000B             daylight_save@s 000A  
                 ??_strlen 0004           main@hours_in_day 00D2                __pbssCOMRAM 005B  
              ??_LCD_E_TOG 0002              __pcstackBANK0 0060                   ?_LDR_val 0002  
         ___aodiv@dividend 0002                   ?_HighISR 0001                ??_LDR_thres 0007  
                _dtoa$1920 002F               ?_Timer0_init 0001                  __pintcode 0008  
                 ?___aodiv 0002                   ?___aomod 0002                   ?___awdiv 0002  
         ___aodiv@quotient 0014        __end_of_LCD_setline 25BC                   ?___lwmod 0002  
              __smallconst 0E00                   ?_isdigit 0002                   ?_isspace 0002  
         ??_LCD_sendnibble 0002                   _DAC_init 2782           ??_LCD_sendstring 0009  
                 ?_sprintf 0062           LCD_sendbyte@Byte 0006                   _LCD_Init 2188  
         LCD_sendbyte@type 0003             ___wmul@product 0006                   _LATAbits 000F79  
                 _LATBbits 000F7A                   _LATCbits 000F7B                   _LATDbits 000F7C  
                 _LATEbits 000F7D                   _LATFbits 000F7E                   _LATGbits 000F7F  
                 _LATHbits 000F80                   _PIE0bits 000E29                   _LED_init 26D8  
                 i2u120_40 002C                   i2u120_41 0024                   i2u121_48 002E  
                 i2u119_40 001A                   i2u119_41 0016                   _LDR_init 273A  
                 _PIR0bits 000E33                  _vfpfcnvrt 1302                 _ADCON0bits 000F60  
        ___wmul@multiplier 0002                  main@dname 00D9          LCD_setlines@cname 00AD  
        LCD_setlines@line1 0085          LCD_setlines@line2 0099               _isspace$1969 0008  
               _CM1NCHbits 000ED2              _daylight_save 20C8                 _CM1PCHbits 000ED3  
                copy_data0 24CA                _LCD_setline 2582                   __Hrparam 0000  
          main@hour_length 00D0                 vfprintf@ap 0059                   __Lrparam 0000  
               vfprintf@fp 0055                 ?_vfpfcnvrt 0041            ___aodiv@divisor 000A  
          ___aodiv@counter 0012                 _ANSELAbits 000E92                 sprintf@fmt 0064  
               _T0CON0bits 000FD5                 _T0CON1bits 000FD6             ?_daylight_save 000A  
                 __ptext10 1DAA                   __ptext11 2412                   __ptext20 2542  
                 __ptext12 22F6                   __ptext21 1C46                   __ptext13 1302  
                 __ptext30 265E                   __ptext22 1954                   __ptext14 1674  
                 __ptext31 228E                   __ptext23 1ADC                   __ptext15 2006  
                 __ptext32 276C                   __ptext24 2464                   __ptext16 25F4  
                 __ptext33 2796                   __ptext25 25BC                   __ptext17 24FE  
                 __ptext34 26B4                   __ptext26 268E                   __ptext18 1E78  
                 __ptext35 2782                   __ptext27 2582                   __ptext19 27A2  
                 __ptext28 262A                   __ptext29 2188    LEDarray_disp_bin@number 0002  
                 isa$xinst 000000                   int$flags 005D                   main@dBST 00D6  
                 _vfprintf 22F6           LCD_setlines@cBST 0082                   main@dmin 00D5  
         LCD_setlines@cmin 007C           ___aomod@dividend 0002                 _INTCONbits 000FF2  
                 isdigit@c 0002                   intlevel2 0000                  sprintf@ap 006E  
             _DAC1CON0bits 000EC6               _DAC1CON1bits 000EC7           ___lwmod@dividend 0002  
                 isspace@c 0002            ___aomod@divisor 000A                ??_vfpfcnvrt 0047  
          ___aomod@counter 0012          daylight_save@da_h 0010          daylight_save@da_s 000F  
        daylight_save@du_h 000E          daylight_save@du_s 000D                   sprintf@f 0070  
                 sprintf@s 0062            ??_daylight_save 000C            ___lwmod@divisor 0004  
          ___lwmod@counter 0006               ___aodiv@sign 0013               ___aomod@sign 0013  
